{"version":3,"file":"index.cjs.js","sources":["../src/components/Accordion/Accordion.tsx","../src/styles/STYLES.ts","../src/components/Drawer/Drawer.tsx","../src/components/Dropdown/Dropdown.tsx","../src/components/Marquee/Marquee.tsx","../src/components/Modal/Modal.tsx","../src/components/Radio/Radio.tsx","../src/components/Table/Table.tsx","../src/components/Tabs/Tabs.tsx","../src/components/Toggle/Toggle.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/SegmentedControl/SegmentedControl.tsx","../src/components/DragDrop/DragDropContext.tsx","../src/components/DragDrop/Draggable.tsx","../src/components/DragDrop/Droppable.tsx","../src/components/DragDrop/Sortable.tsx","../src/components/DragDrop/index.ts","../src/components/DragDrop/DragOverlay.tsx","../src/components/ContextMenu/ContextMenu.tsx","../src/components/Slider/Slider.tsx","../src/components/Checkbox/Checkbox.tsx","../src/components/Switch/Switch.tsx"],"sourcesContent":["// Accordion.tsx\nimport React, { createContext, useContext, useState, useCallback, useMemo } from \"react\";\nimport { AccordionProps, AccordionContextType, AccordionItemProps, AccordionButtonProps, AccordionPanelProps, AccordionItemContextType, AccordionComposition } from \"./types\";\n\n// Create context for accordion state\nconst AccordionContext = createContext<AccordionContextType>({\n  activeIndices: [],\n  toggleItem: () => {},\n  isItemActive: () => false,\n});\n\n// Create context for each accordion item\nconst AccordionItemContext = createContext<AccordionItemContextType>({\n  isActive: false,\n  isDisabled: false,\n  index: -1,\n  toggleItem: () => {},\n});\n\n// Hook to use accordion context\nconst useAccordion = () => {\n  const context = useContext(AccordionContext);\n  if (!context) {\n    throw new Error(\"useAccordion must be used within an Accordion component\");\n  }\n  return context;\n};\n\n// Hook to use accordion item context\nconst useAccordionItem = () => {\n  const context = useContext(AccordionItemContext);\n  if (!context) {\n    throw new Error(\"useAccordionItem must be used within an AccordionItem component\");\n  }\n  return context;\n};\n\n// Accordion Item Component\nconst AccordionItem: React.FC<AccordionItemProps> = ({ children, isDisabled = false, index: providedIndex, className = \"\", ...props }) => {\n  const { activeIndices, toggleItem, isItemActive } = useAccordion();\n\n  // If index is not provided, we'll warn but not throw\n  const index = providedIndex ?? -1;\n  if (index === -1) {\n    console.warn(\"AccordionItem: index prop is required for proper functioning\");\n  }\n\n  const isActive = isItemActive(index);\n\n  // Context value for this item\n  const itemContextValue = useMemo(\n    () => ({\n      isActive,\n      isDisabled,\n      index,\n      toggleItem: () => toggleItem(index),\n    }),\n    [isActive, isDisabled, index, toggleItem]\n  );\n\n  return (\n    <AccordionItemContext.Provider value={itemContextValue}>\n      <div\n        className={`blox-accordion-item ${className}`}\n        data-blox-accordion-item=\"\"\n        data-active={isActive ? \"true\" : \"false\"}\n        data-disabled={isDisabled ? \"true\" : \"false\"}\n        {...props}>\n        {children}\n      </div>\n    </AccordionItemContext.Provider>\n  );\n};\n\n// Accordion Button Component\nconst AccordionButton: React.FC<AccordionButtonProps> = ({ children, className = \"\", ...props }) => {\n  const { isActive, isDisabled, toggleItem } = useAccordionItem();\n\n  return (\n    <button\n      className={`blox-accordion-button ${className}`}\n      onClick={() => !isDisabled && toggleItem()}\n      disabled={isDisabled}\n      aria-expanded={isActive}\n      data-blox-accordion-button=\"\"\n      data-active={isActive ? \"true\" : \"false\"}\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      type=\"button\"\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Accordion Panel Component\nconst AccordionPanel: React.FC<AccordionPanelProps> = ({ children, className = \"\", ...props }) => {\n  const { isActive } = useAccordionItem();\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      className={`blox-accordion-panel ${className}`}\n      data-blox-accordion-panel=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Accordion Component\nconst Accordion: React.FC<AccordionProps> & AccordionComposition = ({ children, allowMultiple = false, defaultIndex = [], activeIndices: controlledActiveIndices, onChange, className = \"\", ...props }) => {\n  // Convert single defaultIndex to array\n  const initialIndices = useMemo(() => {\n    if (typeof defaultIndex === \"number\") {\n      return [defaultIndex];\n    }\n    return defaultIndex as number[];\n  }, [defaultIndex]);\n\n  // State for active indices (for uncontrolled usage)\n  const [internalActiveIndices, setInternalActiveIndices] = useState<number[]>(initialIndices);\n\n  // Determine if we're controlled or not\n  const isControlled = controlledActiveIndices !== undefined;\n  const activeIndices = isControlled ? controlledActiveIndices : internalActiveIndices;\n\n  // Toggle accordion item\n  const toggleItem = useCallback(\n    (index: number) => {\n      const updatedIndices = activeIndices.includes(index) ? activeIndices.filter((i) => i !== index) : allowMultiple ? [...activeIndices, index] : [index];\n\n      // Update internal state for uncontrolled usage\n      if (!isControlled) {\n        setInternalActiveIndices(updatedIndices);\n      }\n\n      // Call onChange callback\n      onChange?.(updatedIndices);\n    },\n    [activeIndices, allowMultiple, isControlled, onChange]\n  );\n\n  // Check if an item is active\n  const isItemActive = useCallback(\n    (index: number) => {\n      return activeIndices.includes(index);\n    },\n    [activeIndices]\n  );\n\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      activeIndices,\n      toggleItem,\n      isItemActive,\n    }),\n    [activeIndices, toggleItem, isItemActive]\n  );\n\n  return (\n    <AccordionContext.Provider value={contextValue}>\n      <div\n        className={`blox-accordion ${className}`}\n        data-blox-accordion=\"\"\n        data-allow-multiple={allowMultiple ? \"true\" : \"false\"}\n        {...props}>\n        {React.Children.map(children, (child, index) => {\n          if (!React.isValidElement(child)) return child;\n\n          // Auto-inject index if not provided\n          return React.cloneElement(child as React.ReactElement<AccordionItemProps>, {\n            index: (child as React.ReactElement<AccordionItemProps>).props.index ?? index,\n          });\n        })}\n      </div>\n    </AccordionContext.Provider>\n  );\n};\n\n// Attach sub-components\nAccordion.Item = AccordionItem;\nAccordion.Button = AccordionButton;\nAccordion.Panel = AccordionPanel;\n\nexport default Accordion;\n","import { STYLE_TYPES } from \"./types\";\n/**\n * @param {Object} STYLES\n * @description\n * if the component needs Styling to be functional or has\n * props that need to be passed to the component\n * then the default style settings are here\n */\n\nexport let STYLES: STYLE_TYPES = {\n  Switch: {\n    input: {\n      bgColor: \"#007bff\",\n    },\n    thumb: {\n      bgColor: \"#ffffff\",\n    },\n    track: {\n      bgColor: \"#e9ecef\",\n    },\n    label: {\n      spacing: \"8px\",\n    }\n  },\n  Radio: {\n    error: {\n      color: \"#dc3545\",\n    },\n    label: {\n      color: \"#495057\",\n    },\n    size: \"16px\",\n  },\n  Slider: {\n    thickness: \"4px\",\n    borderRadius: \"9999px\",\n    track: {\n      color: \"#e9ecef\",\n    },\n    range: {\n      color: \"#007bff\",\n    },\n    thumb: {\n      color: \"#007bff\",\n      size: \"16px\",\n      radius: \"9999px\",\n      shadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n    },\n    mark: {\n      color: \"#007bff\",\n      spacing: \"8px\",\n      radius: \"9999px\",\n      fontSize: \"0.75rem\",\n      label: {\n        spacing: \"4px\",\n      },\n    },\n  },\n  Modal: {\n    bgColor: \"#ffffff\",\n    borderRadius: \"4px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n    maxHeight: \"calc(100vh-32px)\",\n    body: {\n      padding: \"16px\",\n    },\n    close: {\n      right: \"16px\",\n      top: \"16px\",\n      color: \"#6c757d\",\n      padding: \"8px\",\n      borderRadius: \"4px\",\n    },\n    header: {\n      border: \"1px solid gray\",\n      padding: \"16px\",\n    },\n    footer: {\n      border: \"1px solid gray\",\n      padding: \"16px\",\n      gap: \"8px\",\n    },\n    title: {\n      fontSize: \"1.25rem\",\n      fontWeight: \"600\",\n      color: \"inherit\",\n    },\n    overlay: {\n      padding: \"16px\",\n      bgColor: \"rgba(0, 0, 0, 0.5)\",\n    },\n    width: {\n      small: \"300px\",\n      medium: \"600px\",\n      large: \"900px\",\n      full: \"100%\",\n    },\n  },\n  DragDrop: {\n    droppable: {\n      bgColor: \"#f8f9fa\",\n      outline: \"2px dashed #007bff\",\n    },\n    sortable: {\n      opacity: 0.5,\n      backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n      borderRadius: \"4px\",\n    },\n  },\n  Drawer: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    minWidth: \"300px\",\n    maxWidth: \"600px\",\n    height: \"100%\",\n    backdropColor: \"rgba(0, 0, 0, 0.5)\",\n    backdropBlur: \"0px\",\n    contentBgColor: \"#ffffff\",\n  },\n  Tooltip: {\n    offset: \"8px\",\n  },\n};\n","// Drawer.tsx\nimport React, { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DrawerProps, DrawerComposition } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Sub-components\nconst DrawerHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    className={`blox-drawer-header ${className}`}\n    data-blox-drawer-header=\"\"\n    {...props}>\n    {children}\n  </header>\n);\n\nconst DrawerBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-drawer-body ${className}`}\n    data-blox-drawer-body=\"\"\n    {...props}>\n    {children}\n  </div>\n);\n\nconst DrawerFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    className={`blox-drawer-footer ${className}`}\n    data-blox-drawer-footer=\"\"\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst DrawerCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    type=\"button\"\n    className={`blox-drawer-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close drawer\"\n    data-blox-drawer-close=\"\"\n    {...props}>\n    {children || \"×\"}\n  </button>\n);\n\nconst Drawer: React.FC<DrawerProps> & DrawerComposition = ({ children, isOpen, onClose, placement = \"right\", minWidth = \"250px\", maxWidth = \"100%\", minHeight = \"250px\", maxHeight = \"100%\", closeOnEsc = true, closeOnOutsideClick = true, contentClassName = \"\", backdropClassName = \"\", zIndex = 1000, trapFocus = true, usePortal = true, showCloseButton = true, animated = true, lockScroll = true, renderCloseButton, closeButton, role = \"dialog\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, id, style, className = \"\", ...props }) => {\n  const drawerRef = useRef<HTMLDivElement>(null);\n  const firstFocusableRef = useRef<HTMLDivElement>(null);\n\n  // Generate a unique ID for the drawer if not provided\n  const drawerId = useRef(id || `blox-drawer-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle body scroll locking\n  useEffect(() => {\n    if (isOpen && lockScroll) {\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return () => {\n      if (lockScroll) {\n        document.body.style.overflow = \"\";\n      }\n    };\n  }, [isOpen, lockScroll]);\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap management\n  useEffect(() => {\n    if (isOpen && trapFocus && drawerRef.current) {\n      // Focus the first focusable element\n      firstFocusableRef.current?.focus();\n\n      const handleTabKey = (event: KeyboardEvent) => {\n        if (event.key !== \"Tab\" || !drawerRef.current) return;\n\n        const focusableElements = drawerRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n        if (focusableElements.length === 0) return;\n\n        const firstElement = focusableElements[0] as HTMLElement;\n        const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n        // If shift+tab and on first element, move to last\n        if (event.shiftKey && document.activeElement === firstElement) {\n          lastElement.focus();\n          event.preventDefault();\n        }\n        // If tab and on last element, move to first\n        else if (!event.shiftKey && document.activeElement === lastElement) {\n          firstElement.focus();\n          event.preventDefault();\n        }\n      };\n\n      document.addEventListener(\"keydown\", handleTabKey);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleTabKey);\n      };\n    }\n  }, [isOpen, trapFocus]);\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (closeOnOutsideClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Calculate styles based on placement\n  const getDrawerStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      ...style,\n      position: \"absolute\",\n      backgroundColor: `var(--blox-drawer-content-bg-color, ${STYLES.Drawer.contentBgColor})`,\n    };\n\n    // Add size constraints based on placement\n    if (placement === \"left\" || placement === \"right\") {\n      baseStyles.top = `var(--blox-drawer-top, ${STYLES.Drawer.top})`;\n      baseStyles.bottom = `var(--blox-drawer-bottom, ${STYLES.Drawer.bottom})`;\n      baseStyles.minWidth = minWidth;\n      baseStyles.maxWidth = maxWidth;\n      baseStyles.height = `100%`;\n\n      if (placement === `left`) {\n        baseStyles.left = `var(--blox-drawer-left, ${STYLES.Drawer.left})`;\n      } else {\n        baseStyles.right = `var(--blox-drawer-right, ${STYLES.Drawer.right})`;\n      }\n    } else {\n      baseStyles.left = `var(--blox-drawer-left, ${STYLES.Drawer.left})`;\n      baseStyles.right = `var(--blox-drawer-right, ${STYLES.Drawer.right})`;\n      baseStyles.minHeight = minHeight;\n      baseStyles.maxHeight = maxHeight;\n      baseStyles.width = `100%`;\n\n      if (placement === `top`) {\n        baseStyles.top = `var(--blox-drawer-top, ${STYLES.Drawer.top})`;\n      } else {\n        baseStyles.bottom = `var(--blox-drawer-bottom, ${STYLES.Drawer.bottom})`;\n      }\n    }\n\n    return baseStyles;\n  };\n\n  // Don't render anything if drawer is not open\n  if (!isOpen) return null;\n\n  const drawerContent = (\n    <div\n      className={`blox-drawer-backdrop ${backdropClassName} ${animated ? \"blox-drawer-animated\" : \"\"}`}\n      data-blox-drawer-backdrop=\"\"\n      onClick={handleBackdropClick}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        zIndex: zIndex,\n        backdropFilter: `var(--blox-drawer-backdrop-blur, ${STYLES.Drawer.backdropBlur})`,\n        backgroundColor: `var(--blox-drawer-backdrop-color, ${STYLES.Drawer.backdropColor})`,\n      }}>\n      <div\n        ref={drawerRef}\n        className={`blox-drawer-content ${contentClassName} ${className}`}\n        data-blox-drawer-content=\"\"\n        data-blox-drawer-placement={placement}\n        style={getDrawerStyles()}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        id={drawerId}\n        {...props}>\n        {/* Hidden element for initial focus */}\n        <div\n          ref={firstFocusableRef}\n          tabIndex={-1}\n          style={{ outline: \"none\" }}\n        />\n\n        {showCloseButton && (renderCloseButton ? renderCloseButton({ onClick: onClose }) : <DrawerCloseButton onClose={onClose}>{closeButton}</DrawerCloseButton>)}\n\n        {children}\n      </div>\n    </div>\n  );\n\n  return usePortal && typeof document !== \"undefined\" ? createPortal(drawerContent, document.body) : drawerContent;\n};\n\n// Attach sub-components\nDrawer.Header = DrawerHeader;\nDrawer.Body = DrawerBody;\nDrawer.Footer = DrawerFooter;\nDrawer.CloseButton = DrawerCloseButton;\n\nexport default Drawer;\n","// Dropdown.tsx\nimport React, { useRef, useState, useEffect, createContext, useContext } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DropdownProps, DropdownTriggerProps, DropdownMenuProps, DropdownItemProps, DropdownContextValue, DropdownComposition } from \"./types\";\n\n// Create context for dropdown state\nconst DropdownContext = createContext<DropdownContextValue>({\n  isOpen: false,\n  toggle: () => {},\n  open: () => {},\n  close: () => {},\n  isDisabled: false,\n});\n\n// Hook to use dropdown context\nconst useDropdown = () => {\n  const context = useContext(DropdownContext);\n  if (!context) {\n    throw new Error(\"useDropdown must be used within a Dropdown component\");\n  }\n  return context;\n};\n\n// Dropdown Trigger Component\nconst DropdownTrigger: React.FC<DropdownTriggerProps> = ({ children, disabled, className = \"\", ...props }) => {\n  const { isOpen, toggle, isDisabled } = useDropdown();\n  const finalDisabled = disabled || isDisabled;\n\n  return (\n    <button\n      type=\"button\"\n      className={`blox-dropdown-trigger ${className}`}\n      onClick={toggle}\n      disabled={finalDisabled}\n      aria-haspopup=\"true\"\n      aria-expanded={isOpen}\n      data-blox-dropdown-trigger=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Dropdown Menu Component\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({ children, className = \"\", ...props }) => {\n  const { isOpen } = useDropdown();\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className={`blox-dropdown-menu ${className}`}\n      data-blox-dropdown-menu=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      role=\"menu\"\n      style={{\n        position: \"absolute\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dropdown Item Component\nconst DropdownItem: React.FC<DropdownItemProps> = ({ children, value, disabled = false, selected, onSelect, className = \"\", ...props }) => {\n  const { onValueChange, close, selectedValue } = useDropdown();\n  const isSelected = selected !== undefined ? selected : selectedValue === value;\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onValueChange) {\n      onValueChange(value);\n    }\n\n    close();\n  };\n\n  return (\n    <div\n      className={`blox-dropdown-item ${className}`}\n      onClick={handleClick}\n      data-blox-dropdown-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-selected={isSelected ? \"true\" : \"false\"}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Dropdown Component\nconst Dropdown: React.FC<DropdownProps> & DropdownComposition = ({ isOpen: controlledIsOpen, onOpenChange, value, onChange, disabled = false, children, placement = \"bottom-start\", className = \"\", width, onClickOutside, name, ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalIsOpen, setInternalIsOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState<string | number | undefined>(value);\n\n  // Reference to the dropdown container\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  // Determine if we're in controlled mode\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : internalIsOpen;\n\n  // Update internal value when value prop changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setInternalValue(value);\n    }\n  }, [value]);\n\n  // Toggle dropdown\n  const toggle = () => {\n    if (disabled) return;\n\n    const newState = !isOpen;\n\n    if (!isControlled) {\n      setInternalIsOpen(newState);\n    }\n\n    onOpenChange?.(newState);\n  };\n\n  // Open dropdown\n  const open = () => {\n    if (disabled || isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(true);\n    }\n\n    onOpenChange?.(true);\n  };\n\n  // Close dropdown\n  const close = () => {\n    if (!isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(false);\n    }\n\n    onOpenChange?.(false);\n  };\n\n  // Handle value change\n  const handleValueChange = (newValue: string | number) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(newValue);\n    } else {\n      setInternalValue(newValue);\n    }\n  };\n\n  // Handle click outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node) && isOpen) {\n        if (onClickOutside) {\n          onClickOutside();\n        } else {\n          close();\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen, onClickOutside]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    toggle,\n    open,\n    close,\n    selectedValue: value !== undefined ? value : internalValue,\n    onValueChange: handleValueChange,\n    isDisabled: disabled,\n  };\n\n  // Calculate width style\n  const widthStyle = width ? { width: width === true ? \"100%\" : width } : {};\n\n  return (\n    <DropdownContext.Provider value={contextValue}>\n      <div\n        ref={dropdownRef}\n        className={`blox-dropdown ${className}`}\n        data-blox-dropdown=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-placement={placement}\n        style={widthStyle}\n        {...props}>\n        {children}\n\n        {/* Hidden input for form submissions */}\n        {name && (\n          <input\n            type=\"hidden\"\n            name={name}\n            value={value !== undefined ? value : internalValue || \"\"}\n          />\n        )}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\n// Attach sub-components\nDropdown.Trigger = DropdownTrigger;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\n\nexport default Dropdown;\n","// Marquee.tsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport { MarqueeProps } from './types';\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  children,\n  direction = 'left',\n  speed = 'normal',\n  behavior = 'scroll',\n  pauseOnHover = true,\n  pauseOnFocus = true,\n  repeat = 2,\n  gap = 40,\n  duration,\n  reverse = false,\n  delay = 0,\n  className = '',\n  ...props\n}) => {\n  // Use refs to store references to DOM elements\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  \n  // State to track whether the animation is paused\n  const [isPaused, setIsPaused] = useState(false);\n  \n  // Generate a unique ID for this marquee instance (for CSS animations)\n  const marqueeId = useRef(`marquee-${Math.random().toString(36).substr(2, 9)}`);\n  \n  // Calculate the actual duration based on speed if not explicitly provided\n  const calculateDuration = () => {\n    if (duration !== undefined) return duration;\n    \n    // Speed factors in seconds\n    const speedFactors = {\n      slow: 30,\n      normal: 20,\n      fast: 10,\n    };\n    \n    return speedFactors[speed] || 20;\n  };\n  \n  // Determine the animation direction\n  const getAnimationDirection = () => {\n    if (reverse) {\n      switch (direction) {\n        case 'left': return 'right';\n        case 'right': return 'left';\n        case 'up': return 'down';\n        case 'down': return 'up';\n        default: return 'right';\n      }\n    }\n    return direction;\n  };\n  \n  // Create the animation keyframes based on direction\n  useEffect(() => {\n    const actualDirection = getAnimationDirection();\n    \n    // Only create keyframes once for this instance\n    const styleId = `style-${marqueeId.current}`;\n    let styleEl = document.getElementById(styleId) as HTMLStyleElement;\n    \n    if (!styleEl) {\n      styleEl = document.createElement('style');\n      styleEl.id = styleId;\n      document.head.appendChild(styleEl);\n    }\n    \n    // Define keyframes based on direction\n    let keyframes = '';\n    switch (actualDirection) {\n      case 'left':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(0); }\n            100% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'right':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateX(0); }\n          }\n        `;\n        break;\n      case 'up':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(0); }\n            100% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'down':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateY(0); }\n          }\n        `;\n        break;\n    }\n    \n    styleEl.innerHTML = keyframes;\n    \n    // Clean up the style element when component unmounts\n    return () => {\n      if (styleEl && document.head.contains(styleEl)) {\n        document.head.removeChild(styleEl);\n      }\n    };\n  }, [direction, gap, reverse]);\n  \n  // Create the animation style\n  const getAnimationStyle = () => {\n    const actualDuration = calculateDuration();\n    const animationName = marqueeId.current;\n    const animationIterationCount = 'infinite';\n    const animationDirection = behavior === 'alternate' ? 'alternate' : 'normal';\n    \n    return {\n      animation: `${animationName} ${actualDuration}s ${animationDirection} linear ${delay}s ${animationIterationCount}`,\n      animationPlayState: isPaused ? 'paused' : 'running',\n    };\n  };\n  \n  // Create array of repeated children\n  const repeatedChildren = [];\n  for (let i = 0; i < repeat; i++) {\n    repeatedChildren.push(\n      <div\n        key={i}\n        className=\"blox-marquee-item\"\n        data-blox-marquee-item=\"\"\n        style={{\n          ...(direction === 'left' || direction === 'right' \n            ? { marginRight: `${gap}px` } \n            : { marginBottom: `${gap}px` }),\n          flexShrink: 0,\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n  \n  // Event handlers for pausing\n  const handleMouseEnter = () => pauseOnHover && setIsPaused(true);\n  const handleMouseLeave = () => pauseOnHover && setIsPaused(false);\n  const handleFocus = () => pauseOnFocus && setIsPaused(true);\n  const handleBlur = () => pauseOnFocus && setIsPaused(false);\n  \n  // ARIA live settings based on behavior\n  const ariaLive = behavior === 'scroll' ? 'off' : 'polite';\n  \n  return (\n    <div\n      className={`blox-marquee ${className}`}\n      ref={containerRef}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      role=\"marquee\"\n      aria-live={ariaLive}\n      data-blox-marquee=\"\"\n      data-direction={direction}\n      data-behavior={behavior}\n      data-paused={isPaused ? 'true' : 'false'}\n      style={{\n        overflow: 'hidden',\n      }}\n      {...props}\n    >\n      <div\n        ref={contentRef}\n        className=\"blox-marquee-content\"\n        data-blox-marquee-content=\"\"\n        style={{\n          display: 'flex',\n          flexDirection: direction === 'left' || direction === 'right' ? 'row' : 'column',\n          ...getAnimationStyle(),\n        }}\n      >\n        {repeatedChildren}\n      </div>\n    </div>\n  );\n};\n\nexport default Marquee;","// Modal.tsx\nimport React, { useRef, useEffect, Children } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ModalProps, ModalComposition } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Sub-components\nconst ModalContent: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-modal-content ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    data-blox-modal-header=\"\"\n    className={`blox-modal-header ${className}`}\n    {...props}>\n    {children}\n  </header>\n);\n\nconst ModalBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    data-blox-modal-body=\"\"\n    className={`blox-modal-body ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    data-blox-modal-footer=\"\"\n    className={`blox-modal-footer ${className}`}\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst ModalCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  children?: React.ReactNode;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    data-blox-modal-close-button=\"\"\n    type=\"button\"\n    className={`blox-modal-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close\"\n    {...props}>\n    {children || \"×\"}\n  </button>\n);\n\nconst Modal: React.FC<ModalProps> & ModalComposition = ({ children, isOpen, onClose, size = \"medium\", title, footer, closeOnEsc = true, closeOnOverlayClick = true, overlayClassName = \"\", contentClassName = \"\", ariaLabelledby, ariaDescribedby, zIndex = 1050, isCentered = true, blockScroll = true, showCloseButton = true, initialFocusRef, animated = true, ...props }) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  // Generate a unique ID for the modal\n  const modalId = useRef(`blox-modal-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap and management\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Save the element that had focus before opening the modal\n    previousFocusRef.current = document.activeElement as HTMLElement;\n\n    // Set focus to the specified element or the modal itself\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (modalRef.current) {\n      modalRef.current.focus();\n    }\n\n    const handleFocusTrap = (event: KeyboardEvent) => {\n      if (!modalRef.current || event.key !== \"Tab\") return;\n\n      const focusableElements = modalRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n      if (focusableElements.length === 0) return;\n\n      const firstElement = focusableElements[0] as HTMLElement;\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n      // If shift+tab and on first element, move to last\n      if (event.shiftKey && document.activeElement === firstElement) {\n        lastElement.focus();\n        event.preventDefault();\n      }\n      // If tab and on last element, move to first\n      else if (!event.shiftKey && document.activeElement === lastElement) {\n        firstElement.focus();\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleFocusTrap);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleFocusTrap);\n\n      // Restore focus when modal closes\n      if (previousFocusRef.current) {\n        previousFocusRef.current.focus();\n      }\n    };\n  }, [isOpen, initialFocusRef]);\n\n  // Prevent body scroll when modal is open\n  useEffect(() => {\n    if (!isOpen || !blockScroll) return;\n\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, [isOpen, blockScroll]);\n\n  const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (closeOnOverlayClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Don't render anything if modal is not open\n  if (!isOpen) return null;\n\n  // Size styles based on size prop\n  const getSizeStyle = () => {\n    switch (size) {\n      case `small`:\n        return { width: `var(--blox-modal-width-small, ${STYLES.Modal.width.small})` };\n      case `medium`:\n        return { width: `var(--blox-modal-width-medium, ${STYLES.Modal.width.medium})` };\n      case `large`:\n        return { width: `var(--blox-modal-width-large, ${STYLES.Modal.width.large})` };\n      case `full`:\n        return { width: `var(--blox-modal-width-full, ${STYLES.Modal.width.full})` };\n      default:\n        return { width: `var(--blox-modal-width-medium, ${STYLES.Modal.width.medium})` };\n    }\n  };\n\n  // Animation classes\n  const getAnimationClass = () => {\n    return animated ? \"blox-modal-animated\" : \"\";\n  };\n\n  // Create the modal element\n  const modalElement = (\n    <div\n      data-blox-modal-overlay=\"\"\n      className={`blox-modal-overlay ${getAnimationClass()} ${overlayClassName}`}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: isCentered ? \"center\" : \"flex-start\",\n        justifyContent: \"center\",\n        backgroundColor: `var(--blox-modal-overlay-bg, ${STYLES.Modal.overlay.bgColor})`,\n        zIndex: zIndex,\n        padding: `var(--blox-modal-overlay-padding, ${STYLES.Modal.overlay.padding})`,\n        overflow: \"auto\",\n      }}\n      onClick={handleOverlayClick}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby={ariaLabelledby || (title ? `${modalId}-title` : undefined)}\n      aria-describedby={ariaDescribedby}\n      {...props}>\n      <div\n        ref={modalRef}\n        className={`blox-modal ${getAnimationClass()} ${contentClassName}`}\n        style={{\n          position: \"relative\",\n          backgroundColor: `var(--blox-modal-bg, ${STYLES.Modal.bgColor})`,\n          borderRadius: `var(--blox-modal-border-radius, ${STYLES.Modal.borderRadius})`,\n          boxShadow: `var(--blox-modal-box-shadow, ${STYLES.Modal.boxShadow})`,\n          maxWidth: \"100%\",\n          maxHeight: `var(--blox-modal-max-height, ${STYLES.Modal.maxHeight})`,\n          overflow: \"auto\",\n          outline: \"none\",\n          ...getSizeStyle(),\n        }}\n        tabIndex={-1}>\n        {/* Modal header */}\n        {(title || showCloseButton) && (\n          <div\n            className=\"blox-modal-header\"\n            style={{\n              padding: `var(--blox-modal-header-padding, ${STYLES.Modal.header.padding})`,\n              borderBottom: title ? `var(--blox-modal-header-border, ${STYLES.Modal.header.border})` : \"none\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}>\n            {title && (\n              <h3\n                id={`${modalId}-title`}\n                className=\"blox-modal-title\"\n                style={{\n                  margin: 0,\n                  fontSize: `var(--blox-modal-title-font-size, ${STYLES.Modal.title.fontSize})`,\n                  fontWeight: `var(--blox-modal-title-font-weight, ${STYLES.Modal.title.fontWeight})`,\n                  color: `var(--blox-modal-title-color, ${STYLES.Modal.title.color})`,\n                }}>\n                {title}\n              </h3>\n            )}\n            {showCloseButton && (\n              <ModalCloseButton\n                onClose={onClose}\n                style={{\n                  position: title ? `relative` : `absolute`,\n                  right: title ? \"0\" : `var(--blox-modal-close-button-right, ${STYLES.Modal.close.right})`,\n                  top: title ? `0` : `var(--blox-modal-close-button-top,  ${STYLES.Modal.close.top})`,\n                  background: `transparent`,\n                  border: `none`,\n                  cursor: `pointer`,\n                  padding: `var(--blox-modal-close-button-padding,  ${STYLES.Modal.close.padding})`,\n                  color: `var(--blox-modal-close-button-color,  ${STYLES.Modal.close.color})`,\n                  borderRadius: `var(--blox-modal-close-button-border-radius,  ${STYLES.Modal.close.borderRadius})`,\n                }}\n              />\n            )}\n          </div>\n        )}\n\n        {/* Modal body */}\n        <div\n          className=\"blox-modal-body\"\n          style={{\n            padding: `var(--blox-modal-body-padding,  ${STYLES.Modal.body.padding})`,\n          }}>\n          {children}\n        </div>\n\n        {/* Modal footer */}\n        {footer && (\n          <div\n            className=\"blox-modal-footer\"\n            style={{\n              padding: `var(--blox-modal-footer-padding, ${STYLES.Modal.footer.padding})`,\n              borderTop: `var(--blox-modal-footer-border, ${STYLES.Modal.footer.border})`,\n              display: `flex`,\n              justifyContent: `flex-end`,\n              gap: `var(--blox-modal-footer-gap, ${STYLES.Modal.footer.gap})`,\n            }}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return createPortal(modalElement, document.body);\n};\n\n// Attach sub-components\nModal.Content = ModalContent;\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\nModal.CloseButton = ModalCloseButton;\n\nexport default Modal;\n","// Radio.tsx\nimport React, { useRef, useContext, createContext, useMemo } from \"react\";\nimport { RadioProps, RadioGroupProps } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Create context for radio group\ninterface RadioGroupContextType {\n  name?: string;\n  value?: string;\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextType>({});\n\n// Main Radio component\nconst Radio: React.FC<RadioProps> = ({ label, value, checked, defaultChecked, onChange, disabled = false, required = false, className = \"\", inputClassName = \"\", labelClassName = \"\", id, name, labelProps = {}, labelPosition = \"right\", helperText, errorMessage, hasError = false, ...props }) => {\n  // Get values from radio group context if available\n  const radioGroup = useContext(RadioGroupContext);\n\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-radio-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // Use group props if available, otherwise use individual props\n  const isWithinGroup = !!radioGroup.name;\n  const groupName = radioGroup.name;\n  const groupValue = radioGroup.value;\n  const groupOnChange = radioGroup.onChange;\n  const groupDisabled = radioGroup.disabled;\n  const groupRequired = radioGroup.required;\n\n  // Determine final props\n  const finalDisabled = disabled || (isWithinGroup ? groupDisabled : false);\n  const finalRequired = required || (isWithinGroup ? groupRequired : false);\n  const finalName = isWithinGroup ? groupName : name;\n\n  // Determine whether the radio is checked (for controlled usage within a group)\n  const isChecked = isWithinGroup ? groupValue === value : checked;\n\n  // Determine whether we're controlled or uncontrolled\n  const isControlled = isWithinGroup ? groupValue !== undefined : checked !== undefined;\n\n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (finalDisabled) return;\n\n    if (isWithinGroup) {\n      groupOnChange?.(value, event);\n    } else {\n      onChange?.(value, event);\n    }\n  };\n\n  return (\n    <div\n      className={`blox-radio-container ${className}`}\n      data-blox-radio=\"\"\n      data-checked={isControlled ? (isChecked ? \"true\" : \"false\") : undefined}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={finalRequired ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <input\n        type=\"radio\"\n        id={uniqueId}\n        name={finalName}\n        value={value}\n        checked={isChecked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={finalDisabled}\n        required={finalRequired}\n        className={`blox-radio-input ${inputClassName}`}\n        data-blox-radio-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={helperText || errorMessage ? `${uniqueId}-description` : undefined}\n        {...props}\n      />\n\n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-radio-label ${labelClassName}`}\n          data-blox-radio-label=\"\"\n          style={{\n            color: `var(--blox-radio-label-color, inherit)`,\n          }}\n          {...labelProps}>\n          {label}\n        </label>\n      )}\n\n      {(helperText || errorMessage) && (\n        <div\n          id={`${uniqueId}-description`}\n          className={`blox-radio-description ${hasError ? \"blox-radio-error\" : \"\"}`}\n          data-blox-radio-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}\n          style={{\n            color: `var(--blox-radio-error-color, inherit)`,\n          }}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Radio Group Component\nconst RadioGroup: React.FC<RadioGroupProps> = ({ children, name, value, defaultValue, onChange, disabled = false, required = false, direction = \"vertical\", className = \"\", label, helperText, errorMessage, hasError = false, ...props }) => {\n  // Handle change event in the group\n  const handleChange = (radioValue: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(radioValue);\n  };\n\n  // Create context value\n  const contextValue = useMemo(\n    () => ({\n      name,\n      value,\n      onChange: handleChange,\n      disabled,\n      required,\n    }),\n    [name, value, disabled, required]\n  );\n\n  // Generate a unique ID for the group\n  const groupId = useRef(`blox-radio-group-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  return (\n    <RadioGroupContext.Provider value={contextValue}>\n      <div\n        className={`blox-radio-group ${className}`}\n        data-blox-radio-group=\"\"\n        data-direction={direction}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-error={hasError ? \"true\" : \"false\"}\n        role=\"radiogroup\"\n        aria-labelledby={label ? `${groupId}-label` : undefined}\n        aria-describedby={helperText || errorMessage ? `${groupId}-description` : undefined}\n        {...props}>\n        {label && (\n          <div\n            id={`${groupId}-label`}\n            className=\"blox-radio-group-label\"\n            data-blox-radio-group-label=\"\">\n            {label}\n          </div>\n        )}\n\n        <div\n          className=\"blox-radio-group-items\"\n          data-blox-radio-group-items=\"\">\n          {children}\n        </div>\n\n        {(helperText || errorMessage) && (\n          <div\n            id={`${groupId}-description`}\n            className={`blox-radio-group-description ${hasError ? \"blox-radio-group-error\" : \"\"}`}\n            data-blox-radio-group-description=\"\"\n            data-error={hasError ? \"true\" : \"false\"}>\n            {hasError ? errorMessage : helperText}\n          </div>\n        )}\n      </div>\n    </RadioGroupContext.Provider>\n  );\n};\nexport default Radio;\n","// Table.tsx\nimport React, { createContext, useContext, useCallback, useMemo } from \"react\";\nimport { TableProps, TableHeaderProps, TableBodyProps, TableRowProps, TableHeaderCellProps, TableCellProps, TableCaptionProps, TableContainerProps, TableEmptyStateProps, TableLoadingStateProps, TableContextValue, TableColumn, SortDirection, TableComposition } from \"./types\";\n\n// Create context for table state\nconst TableContext = createContext<TableContextValue<any>>({\n  data: [],\n  columns: [],\n  autoGenerateRowKey: true,\n});\n\n// Hook to use table context\nexport const useTable = () => {\n  const context = useContext(TableContext);\n  if (!context) {\n    throw new Error(\"useTable must be used within a Table component\");\n  }\n  return context;\n};\n\n// Table Container Component\nconst TableContainer: React.FC<TableContainerProps> = ({ children, horizontalScroll = false, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-table-container ${className}`}\n      data-blox-table-container=\"\"\n      data-horizontal-scroll={horizontalScroll}\n      style={{\n        overflowX: horizontalScroll ? \"auto\" : undefined,\n        width: \"100%\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Table Caption Component\nconst TableCaption: React.FC<TableCaptionProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <caption\n      className={`blox-table-caption ${className}`}\n      data-blox-table-caption=\"\"\n      {...props}>\n      {children}\n    </caption>\n  );\n};\n\n// Table Header Component\nconst TableHeader: React.FC<TableHeaderProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <thead\n      className={`blox-table-header ${className}`}\n      data-blox-table-header=\"\"\n      {...props}>\n      {children}\n    </thead>\n  );\n};\n\n// Table Body Component\nconst TableBody: React.FC<TableBodyProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tbody\n      className={`blox-table-body ${className}`}\n      data-blox-table-body=\"\"\n      {...props}>\n      {children}\n    </tbody>\n  );\n};\n\n// Table Row Component\nconst TableRow: React.FC<TableRowProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tr\n      className={`blox-table-row ${className}`}\n      data-blox-table-row=\"\"\n      {...props}>\n      {children}\n    </tr>\n  );\n};\n\n// Table Header Cell Component\nconst TableHeaderCell: React.FC<TableHeaderCellProps> = ({ children, columnId, sortable = false, sorted = false, sortDirection = \"none\", onSort, center = false, width, className = \"\", style, ...props }) => {\n  // Internal props for the context version\n  const table = useContext(TableContext);\n\n  // Determine if this column is sorted (when used within Table)\n  const isSorted = sorted || (columnId && table.sortColumn === columnId);\n  const effectiveSortDirection = isSorted ? sortDirection || table.sortDirection || \"none\" : \"none\";\n\n  // Handle sort click\n  const handleSortClick = useCallback(() => {\n    if (!sortable) return;\n\n    if (onSort && columnId) {\n      onSort(columnId);\n    } else if (table.onSort && columnId) {\n      let newDirection: SortDirection = \"asc\";\n\n      if (columnId === table.sortColumn) {\n        if (table.sortDirection === \"asc\") {\n          newDirection = \"desc\";\n        } else if (table.sortDirection === \"desc\") {\n          newDirection = \"none\";\n        }\n      }\n\n      table.onSort(columnId, newDirection);\n    }\n  }, [sortable, onSort, columnId, table]);\n\n  return (\n    <th\n      className={`blox-table-header-cell ${className}`}\n      data-blox-table-header-cell=\"\"\n      data-sortable={sortable}\n      data-sorted={isSorted}\n      data-sort-direction={effectiveSortDirection}\n      data-center={center}\n      onClick={sortable ? handleSortClick : undefined}\n      style={{\n        ...(width ? { width } : {}),\n        ...(center ? { textAlign: \"center\" } : {}),\n        cursor: sortable ? \"pointer\" : undefined,\n        ...style,\n      }}\n      {...props}>\n      {children}\n      {sortable && (\n        <span\n          className=\"blox-table-sort-icon\"\n          data-blox-table-sort-icon=\"\">\n          {effectiveSortDirection === \"asc\" && \"▲\"}\n          {effectiveSortDirection === \"desc\" && \"▼\"}\n          {effectiveSortDirection === \"none\" && \"⇅\"}\n        </span>\n      )}\n    </th>\n  );\n};\n\n// Table Cell Component\nconst TableCell: React.FC<TableCellProps> = ({ children, columnId, center = false, className = \"\", style, ...props }) => {\n  return (\n    <td\n      className={`blox-table-cell ${className}`}\n      data-blox-table-cell=\"\"\n      data-column-id={columnId}\n      data-center={center}\n      style={{\n        ...(center ? { textAlign: \"center\" } : {}),\n        ...style,\n      }}\n      {...props}>\n      {children}\n    </td>\n  );\n};\n\n// Table Empty State Component\nconst TableEmpty: React.FC<TableEmptyStateProps> = ({ children = \"No data available\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-empty ${className}`}\n      data-blox-table-empty=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-empty-cell\"\n        data-blox-table-empty-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Table Loading State Component\nconst TableLoading: React.FC<TableLoadingStateProps> = ({ children = \"Loading...\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-loading ${className}`}\n      data-blox-table-loading=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-loading-cell\"\n        data-blox-table-loading-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Main Table Component\nconst Table = <T extends Record<string, any> = any>({ data = [], columns = [], sortColumn, sortDirection = \"none\", onSort, autoGenerateRowKey = true, getRowKey, getRowClassName, children, className = \"\", ...props }: TableProps<T> & { children?: React.ReactNode }) => {\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      data,\n      columns,\n      sortColumn,\n      sortDirection,\n      onSort,\n      autoGenerateRowKey,\n      getRowKey,\n      getRowClassName,\n    }),\n    [data, columns, sortColumn, sortDirection, onSort, autoGenerateRowKey, getRowKey, getRowClassName]\n  );\n\n  // Render function for compositional usage vs. declarative\n  const renderContent = () => {\n    // If children are provided, use compositional pattern\n    if (children) {\n      return children;\n    }\n\n    // Otherwise, use declarative pattern with columns and data\n    return (\n      <>\n        <TableHeader>\n          <TableRow>\n            {columns.map((column) => (\n              <TableHeaderCell\n                key={column.id}\n                columnId={column.id}\n                sortable={column.sortable}\n                center={column.center}\n                width={column.width}\n                {...column.headerProps}>\n                {column.header}\n              </TableHeaderCell>\n            ))}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.length === 0 ? (\n            <TableEmpty colSpan={columns.length} />\n          ) : (\n            data.map((row, rowIndex) => {\n              const rowKey = getRowKey ? getRowKey(row, rowIndex) : autoGenerateRowKey ? `row-${rowIndex}` : undefined;\n\n              const rowClassName = getRowClassName ? getRowClassName(row, rowIndex) : \"\";\n\n              return (\n                <TableRow\n                  key={rowKey}\n                  className={rowClassName}>\n                  {columns.map((column) => {\n                    // Get cell content\n                    let cellContent;\n                    if (column.cell) {\n                      const value = column.accessor ? column.accessor(row, rowIndex) : row[column.id];\n                      cellContent = column.cell(value, row, rowIndex);\n                    } else if (column.accessor) {\n                      cellContent = column.accessor(row, rowIndex);\n                    } else {\n                      cellContent = row[column.id];\n                    }\n\n                    return (\n                      <TableCell\n                        key={`${rowKey}-${column.id}`}\n                        columnId={column.id}\n                        center={column.center}\n                        {...column.cellProps}>\n                        {cellContent}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })\n          )}\n        </TableBody>\n      </>\n    );\n  };\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <table\n        className={`blox-table ${className}`}\n        data-blox-table=\"\"\n        {...props}>\n        {renderContent()}\n      </table>\n    </TableContext.Provider>\n  );\n};\n\n// Attach sub-components\nTable.Container = TableContainer;\nTable.Caption = TableCaption;\nTable.Header = TableHeader;\nTable.Body = TableBody;\nTable.Row = TableRow;\nTable.HeaderCell = TableHeaderCell;\nTable.Cell = TableCell;\nTable.Empty = TableEmpty;\nTable.Loading = TableLoading;\n\nexport default Table;\n","// Tabs.tsx\nimport React, { createContext, useContext, useState, useEffect, memo } from \"react\";\nimport { TabsProps, TabListProps, TabProps, TabPanelsProps, TabPanelProps, TabsContextType, TabsComposition } from \"./types\";\n\n// Create context for tabs state\nconst TabsContext = createContext<TabsContextType>({\n  activeTabId: \"\",\n  setActiveTabId: () => {},\n  orientation: \"horizontal\",\n  animated: true,\n});\n\n// Hook to use tabs context\nconst useTabs = () => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"Tabs compound components must be used within a Tabs component\");\n  }\n  return context;\n};\n\n// TabList Component\nconst TabList: React.FC<TabListProps> = ({ children, orientation, className = \"\", ...props }) => {\n  const { orientation: contextOrientation } = useTabs();\n  const finalOrientation = orientation || contextOrientation;\n\n  return (\n    <div\n      className={`blox-tab-list ${className}`}\n      role=\"tablist\"\n      aria-orientation={finalOrientation}\n      data-blox-tab-list=\"\"\n      data-orientation={finalOrientation}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Tab Component\nconst Tab: React.FC<TabProps> = ({ id, children, disabled = false, className = \"\", ...props }) => {\n  const { activeTabId, setActiveTabId } = useTabs();\n  const isActive = activeTabId === id;\n\n  const handleClick = () => {\n    if (!disabled) {\n      setActiveTabId(id);\n    }\n  };\n\n  return (\n    <button\n      id={`blox-tab-${id}`}\n      role=\"tab\"\n      aria-selected={isActive}\n      aria-controls={`blox-tabpanel-${id}`}\n      tabIndex={isActive ? 0 : -1}\n      disabled={disabled}\n      onClick={handleClick}\n      className={`blox-tab ${className}`}\n      data-blox-tab=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// TabPanels Component\nconst TabPanels: React.FC<TabPanelsProps> = memo(({ children, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-tab-panels ${className}`}\n      data-blox-tab-panels=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n});\n\n// TabPanel Component\nconst TabPanel: React.FC<TabPanelProps> = ({ tabId, children, className = \"\", ...props }) => {\n  const { activeTabId, animated } = useTabs();\n  const isActive = activeTabId === tabId;\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      id={`blox-tabpanel-${tabId}`}\n      role=\"tabpanel\"\n      aria-labelledby={`blox-tab-${tabId}`}\n      className={`blox-tab-panel ${className}`}\n      data-blox-tab-panel=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-animated={animated ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Tabs Component\nconst Tabs: React.FC<TabsProps> & TabsComposition = ({ activeTab, defaultActiveTab, onChange, orientation = \"horizontal\", animated = true, children, className = \"\", ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalActiveTabId, setInternalActiveTabId] = useState<string>(() => {\n    // Try to find the first tab id from children if no default or active tab is provided\n    if (defaultActiveTab) return defaultActiveTab;\n\n    // This is just a fallback, preferably the user should provide defaultActiveTab\n    return \"\";\n  });\n\n  // Determine if we're in controlled mode\n  const isControlled = activeTab !== undefined;\n  const activeTabId = isControlled ? activeTab : internalActiveTabId;\n\n  // Handler for tab changes\n  const handleTabChange = (tabId: string) => {\n    if (!isControlled) {\n      setInternalActiveTabId(tabId);\n    }\n\n    if (onChange) {\n      onChange(tabId);\n    }\n  };\n\n  // Update internal active tab when activeTab prop changes (controlled mode)\n  useEffect(() => {\n    if (activeTab !== undefined) {\n      setInternalActiveTabId(activeTab);\n    }\n  }, [activeTab]);\n\n  // Context value\n  const contextValue = {\n    activeTabId,\n    setActiveTabId: handleTabChange,\n    orientation,\n    animated,\n  };\n\n  return (\n    <TabsContext.Provider value={contextValue}>\n      <div\n        className={`blox-tabs ${className}`}\n        data-blox-tabs=\"\"\n        data-orientation={orientation}\n        {...props}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  );\n};\n\n// Attach sub-components\nTabs.List = TabList;\nTabs.Tab = Tab;\nTabs.Panels = TabPanels;\nTabs.Panel = TabPanel;\n\nexport default Tabs;\n","// Toggle.tsx\nimport React, { memo, useRef, useState, useContext, createContext, useEffect } from \"react\";\nimport { ToggleProps, ToggleGroupProps, ToggleGroupContextValue, ToggleComposition } from \"./types\";\n\n// Create context for the toggle group\nconst ToggleGroupContext = createContext<ToggleGroupContextValue | null>(null);\n\n// Hook to use toggle group context\nconst useToggleGroup = () => {\n  const context = useContext(ToggleGroupContext);\n  return context;\n};\n\n// Standalone Toggle component\nconst Toggle: React.FC<ToggleProps> & ToggleComposition = ({ pressed, defaultPressed, onChange, value, disabled = false, className = \"\", children, ...props }) => {\n  // Get toggle group context (if any)\n  const groupContext = useToggleGroup();\n\n  // Determine if we're controlled internally or by the group\n  const isGrouped = groupContext !== null;\n\n  // For non-grouped usage, manage internal pressed state\n  const [internalPressed, setInternalPressed] = useState<boolean>(defaultPressed ?? false);\n\n  // Determine if this toggle is pressed based on group context or internal state\n  const isPressed = isGrouped ? (groupContext!.type === \"single\" ? groupContext!.value === value : Array.isArray(groupContext!.value) && value !== undefined ? groupContext!.value.includes(value) : false) : pressed !== undefined ? pressed : internalPressed;\n\n  // Handle toggle press\n  const handleToggle = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // If disabled, do nothing\n    if (disabled || (isGrouped && groupContext!.disabled)) {\n      event.preventDefault();\n      return;\n    }\n\n    // If part of a group, update group value\n    if (isGrouped && value !== undefined) {\n      groupContext!.updateValue(value, !isPressed);\n    } else {\n      // Otherwise update internal state for uncontrolled usage\n      if (pressed === undefined) {\n        setInternalPressed(!internalPressed);\n      }\n\n      // Call onChange handler if provided\n      if (onChange) {\n        onChange(!isPressed, event);\n      }\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      role=\"button\"\n      aria-pressed={isPressed}\n      disabled={disabled || (isGrouped && groupContext!.disabled)}\n      className={`blox-toggle ${isPressed ? \"blox-toggle-pressed\" : \"\"} ${className}`}\n      data-blox-toggle=\"\"\n      data-pressed={isPressed ? \"true\" : \"false\"}\n      data-disabled={disabled || (isGrouped && groupContext!.disabled) ? \"true\" : \"false\"}\n      onClick={handleToggle}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Toggle Group component\nconst ToggleGroup: React.FC<ToggleGroupProps> = memo(({ children, type = \"single\", value, defaultValue, onChange, allowDeselect = false, disabled = false, className = \"\", orientation = \"horizontal\", spacing = \"normal\" }) => {\n  // Store the internal value for uncontrolled usage\n  const [internalValue, setInternalValue] = useState<string | string[]>(defaultValue ?? (type === \"single\" ? \"\" : []));\n\n  // Determine if we're controlled or uncontrolled\n  const isControlled = value !== undefined;\n  const currentValue = isControlled ? value : internalValue;\n\n  // Handle value updates from toggle items\n  const updateValue = (itemValue: string, pressed: boolean) => {\n    let newValue: string | string[];\n\n    if (type === \"single\") {\n      // For single selection, set the value to the item value or empty if deselecting\n      newValue = pressed ? itemValue : allowDeselect ? \"\" : itemValue;\n    } else {\n      // For multiple selection, add or remove the item value from the array\n      const valueArray = Array.isArray(currentValue) ? currentValue : [];\n      newValue = pressed ? [...valueArray, itemValue] : valueArray.filter((v) => v !== itemValue);\n    }\n\n    // Update internal state for uncontrolled usage\n    if (!isControlled) {\n      setInternalValue(newValue);\n    }\n\n    // Call onChange handler if provided\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  // Create the context value for children\n  const contextValue: ToggleGroupContextValue = {\n    type,\n    value: currentValue,\n    updateValue,\n    disabled,\n    allowDeselect,\n  };\n\n  return (\n    <ToggleGroupContext.Provider value={contextValue}>\n      <div\n        role=\"group\"\n        className={`blox-toggle-group ${className}`}\n        data-blox-toggle-group=\"\"\n        data-orientation={orientation}\n        data-spacing={spacing}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        style={{\n          display: \"flex\",\n          flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n          gap: spacing === \"none\" ? \"\" : spacing === \"compact\" ? \"var(--blox-toggle-spacing-1, 0.25rem)\" : spacing === \"loose\" ? \"var(--blox-toggle-spacing-3, 0.75rem)\" : \"var(--blox-toggle-spacing-2, 0.5rem)\",\n        }}>\n        {children}\n      </div>\n    </ToggleGroupContext.Provider>\n  );\n});\n\n// Attach Group component to Toggle\nToggle.Group = ToggleGroup;\n\nexport default Toggle;\n","// Tooltip.tsx\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { TooltipProps, TooltipPlacement } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, isOpen: controlledIsOpen, placement = \"bottom\", offset = 8, showDelay = 0, hideDelay = 0, showOnHover = true, showOnFocus = true, id, closeOnEsc = true, interactive = false, zIndex = 1000, isDisabled = false, tooltipClassName = \"\", minWidth, maxWidth, className = \"\", children, ...rest }) => {\n  // For controlled/uncontrolled usage\n  const [uncontrolledIsOpen, setUncontrolledIsOpen] = useState(false);\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : uncontrolledIsOpen;\n\n  // Refs for DOM elements\n  const triggerRef = useRef<HTMLElement | null>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const childRef = useRef<HTMLElement | null>(null);\n\n  // Timers for delay\n  const showTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State for position\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0,\n    currentPlacement: placement,\n  });\n\n  // Save a reference to the child element\n  useEffect(() => {\n    if (childRef.current && React.isValidElement(children)) {\n      triggerRef.current = childRef.current;\n    }\n  }, [children]);\n\n  // Calculate tooltip position based on trigger element and placement\n  const updatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current || !isOpen) return;\n\n    const triggerRect = triggerRef.current.getBoundingClientRect();\n    const tooltipRect = tooltipRef.current.getBoundingClientRect();\n\n    // Available space in different directions\n    const spaceTop = triggerRect.top;\n    const spaceRight = window.innerWidth - triggerRect.right;\n    const spaceBottom = window.innerHeight - triggerRect.bottom;\n    const spaceLeft = triggerRect.left;\n\n    // Determine best placement based on available space\n    let finalPlacement: TooltipPlacement = placement;\n    const primaryPlacement = placement.split(\"-\")[0] as \"top\" | \"right\" | \"bottom\" | \"left\";\n\n    // Check if preferred placement has enough space, otherwise flip to opposite side\n    switch (primaryPlacement) {\n      case \"top\":\n        if (spaceTop < tooltipRect.height + offset && spaceBottom > tooltipRect.height + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"bottom-start\" : placement.includes(\"end\") ? \"bottom-end\" : \"bottom\";\n        }\n        break;\n      case \"right\":\n        if (spaceRight < tooltipRect.width + offset && spaceLeft > tooltipRect.width + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"left-start\" : placement.includes(\"end\") ? \"left-end\" : \"left\";\n        }\n        break;\n      case \"bottom\":\n        if (spaceBottom < tooltipRect.height + offset && spaceTop > tooltipRect.height + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"top-start\" : placement.includes(\"end\") ? \"top-end\" : \"top\";\n        }\n        break;\n      case \"left\":\n        if (spaceLeft < tooltipRect.width + offset && spaceRight > tooltipRect.width + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"right-start\" : placement.includes(\"end\") ? \"right-end\" : \"right\";\n        }\n        break;\n    }\n\n    // Calculate position based on final placement\n    let x = 0;\n    let y = 0;\n\n    switch (finalPlacement) {\n      case \"top\":\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"top-start\":\n        x = triggerRect.left;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"top-end\":\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"right\":\n        x = triggerRect.right + offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case \"right-start\":\n        x = triggerRect.right + offset;\n        y = triggerRect.top;\n        break;\n      case \"right-end\":\n        x = triggerRect.right + offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n      case \"bottom\":\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"bottom-start\":\n        x = triggerRect.left;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"bottom-end\":\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"left\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case \"left-start\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top;\n        break;\n      case \"left-end\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n    }\n\n    // Keep tooltip within viewport bounds\n    // Adjust x position\n    if (x < 10) {\n      x = 10;\n    } else if (x + tooltipRect.width > window.innerWidth - 10) {\n      x = window.innerWidth - tooltipRect.width - 10;\n    }\n\n    // Adjust y position\n    if (y < 10) {\n      y = 10;\n    } else if (y + tooltipRect.height > window.innerHeight - 10) {\n      y = window.innerHeight - tooltipRect.height - 10;\n    }\n\n    setPosition({\n      x,\n      y,\n      currentPlacement: finalPlacement,\n    });\n  }, [isOpen, placement, offset]);\n\n  // Handle showing the tooltip\n  const handleShow = useCallback(() => {\n    if (isDisabled) return;\n\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n\n    if (!isControlled) {\n      if (showDelay) {\n        showTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(true);\n        }, showDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(true);\n      }\n    }\n  }, [isControlled, isDisabled, showDelay]);\n\n  // Handle hiding the tooltip\n  const handleHide = useCallback(() => {\n    if (isDisabled) return;\n\n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current);\n      showTimeoutRef.current = null;\n    }\n\n    if (!isControlled) {\n      if (hideDelay) {\n        hideTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(false);\n        }, hideDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(false);\n      }\n    }\n  }, [isControlled, isDisabled, hideDelay]);\n\n  // Prevent hiding when interacting with tooltip\n  const handleTooltipMouseEnter = useCallback(() => {\n    if (interactive && hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n  }, [interactive]);\n\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        handleHide();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, closeOnEsc, handleHide]);\n\n  // Update position when tooltip opens or window resizes\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Update position immediately\n    updatePosition();\n\n    // And then after a short delay to ensure content is fully rendered\n    const delayedUpdate = setTimeout(updatePosition, 10);\n\n    // Update on resize\n    window.addEventListener(\"resize\", updatePosition);\n    window.addEventListener(\"scroll\", updatePosition, true);\n\n    return () => {\n      clearTimeout(delayedUpdate);\n      window.removeEventListener(\"resize\", updatePosition);\n      window.removeEventListener(\"scroll\", updatePosition, true);\n    };\n  }, [isOpen, updatePosition]);\n\n  // Clear timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) clearTimeout(showTimeoutRef.current);\n      if (hideTimeoutRef.current) clearTimeout(hideTimeoutRef.current);\n    };\n  }, []);\n\n  // Render tooltip\n  const renderTooltip = () => {\n    if (!isOpen) return null;\n\n    const tooltipContent = (\n      <div\n        ref={tooltipRef}\n        role=\"tooltip\"\n        id={id}\n        className={`blox-tooltip ${tooltipClassName}`}\n        style={\n          {\n            position: \"fixed\",\n            left: `${position.x}px`,\n            top: `${position.y}px`,\n            zIndex,\n            minWidth: minWidth,\n            maxWidth: maxWidth,\n            \"--blox-tooltip-min-width\": typeof minWidth === \"number\" ? `${minWidth}px` : minWidth,\n            \"--blox-tooltip-max-width\": typeof maxWidth === \"number\" ? `${maxWidth}px` : maxWidth,\n            \"--blox-tooltip-offset\": `${offset || STYLES.Tooltip.offset}px`,\n            \"--blox-tooltip-placement\": position.currentPlacement,\n          } as React.CSSProperties\n        }\n        onMouseEnter={handleTooltipMouseEnter}\n        onMouseLeave={interactive ? handleHide : undefined}\n        data-placement={position.currentPlacement}>\n        {content}\n      </div>\n    );\n\n    return createPortal(tooltipContent, document.body);\n  };\n\n  // Clone the child element and attach event handlers\n  const childElement = React.Children.only(children);\n\n  if (!React.isValidElement(childElement)) {\n    console.error(\"Tooltip children must be a valid React element\");\n    return <>{children}</>;\n  }\n\n  const childProps: React.HTMLAttributes<HTMLElement> = {};\n\n  if (showOnHover) {\n    childProps.onMouseEnter = (e) => {\n      handleShow();\n      childElement.props.onMouseEnter?.(e);\n    };\n\n    childProps.onMouseLeave = (e) => {\n      handleHide();\n      childElement.props.onMouseLeave?.(e);\n    };\n  }\n\n  if (showOnFocus) {\n    childProps.onFocus = (e) => {\n      handleShow();\n      childElement.props.onFocus?.(e);\n    };\n\n    childProps.onBlur = (e) => {\n      handleHide();\n      childElement.props.onBlur?.(e);\n    };\n  }\n\n  // Add the ref to the child element\n  const enhancedChild = React.cloneElement(childElement, {\n    ...childProps,\n    ref: (node: HTMLElement) => {\n      // Forward the ref to the child if it has one\n      if (typeof childElement.ref === \"function\") {\n        childElement.ref(node);\n      } else if (childElement.ref) {\n        (childElement.ref as React.MutableRefObject<HTMLElement>).current = node;\n      }\n\n      childRef.current = node;\n      triggerRef.current = node;\n    },\n    className: `${childElement.props.className || \"\"} ${className}`.trim(),\n  });\n\n  return (\n    <>\n      {enhancedChild}\n      {renderTooltip()}\n    </>\n  );\n};\n\nexport default Tooltip;\n","// SegmentedControl.tsx\nimport React, { createContext, useContext, useState, useCallback } from \"react\";\nimport { SegmentedControlProps, SegmentItemProps, SegmentedControlContextType, SegmentedControlComposition } from \"./types\";\n\n// Create context for segmented control state\nconst SegmentedControlContext = createContext<SegmentedControlContextType>({\n  selectedValue: null,\n  onChange: () => {},\n  allowDeselect: false,\n  disabled: false,\n});\n\n// Hook to use segmented control context\nconst useSegmentedControl = () => {\n  const context = useContext(SegmentedControlContext);\n  if (!context) {\n    throw new Error(\"useSegmentedControl must be used within a SegmentedControl component\");\n  }\n  return context;\n};\n\n// Segment Item Component\nconst SegmentItem: React.FC<SegmentItemProps> = ({ value, disabled = false, children, className = \"\", ...props }) => {\n  const { selectedValue, onChange, allowDeselect, disabled: controlDisabled } = useSegmentedControl();\n  const isSelected = selectedValue === value;\n  const isDisabled = disabled || controlDisabled;\n\n  const handleClick = () => {\n    if (isDisabled) return;\n\n    if (isSelected && allowDeselect) {\n      onChange(\"\");\n    } else if (!isSelected) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      role=\"radio\"\n      aria-checked={isSelected}\n      disabled={isDisabled}\n      className={`blox-segment-item ${className}`}\n      data-blox-segment-item=\"\"\n      data-state={isSelected ? \"selected\" : \"unselected\"}\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      onClick={handleClick}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Main SegmentedControl Component\nconst SegmentedControl: React.FC<SegmentedControlProps> & SegmentedControlComposition = ({ value, defaultValue = \"\", onChange, allowDeselect = false, disabled = false, children, className = \"\", ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalValue, setInternalValue] = useState<string>(defaultValue);\n\n  // Determine if we're in controlled mode\n  const isControlled = value !== undefined;\n  const selectedValue = isControlled ? value : internalValue;\n\n  // Handle value change\n  const handleChange = useCallback(\n    (newValue: string) => {\n      if (!isControlled) {\n        setInternalValue(newValue);\n      }\n\n      if (onChange) {\n        onChange(newValue);\n      }\n    },\n    [isControlled, onChange]\n  );\n\n  // Context value\n  const contextValue = {\n    selectedValue,\n    onChange: handleChange,\n    allowDeselect,\n    disabled,\n  };\n\n  return (\n    <SegmentedControlContext.Provider value={contextValue}>\n      <div\n        role=\"radiogroup\"\n        className={`blox-segmented-control ${className}`}\n        data-blox-segmented-control=\"\"\n        data-disabled={disabled ? \"true\" : \"false\"}\n        {...props}>\n        {children}\n      </div>\n    </SegmentedControlContext.Provider>\n  );\n};\n\n// Attach sub-components\nSegmentedControl.Item = SegmentItem;\n\nexport default SegmentedControl;\n","// DragDropContext.tsx\nimport React, { createContext, useContext, useRef, useState, useEffect, useCallback } from \"react\";\nimport { DragContextValue, DragDropProviderProps, DragItem, Coordinates, DropTargetInfo, SortableItemInfo, DragStartEvent, DragMoveEvent, DragEndEvent } from \"./types\";\n\n// Create context with default values\nconst DragDropContext = createContext<DragContextValue>({\n  draggingItem: null,\n  dragPosition: null,\n  dropTargets: new Map(),\n  sortableItems: new Map(),\n  registerDropTarget: () => {},\n  unregisterDropTarget: () => {},\n  registerSortableItem: () => {},\n  unregisterSortableItem: () => {},\n  startDrag: () => {},\n  endDrag: () => {},\n  getDragOverTarget: () => null,\n});\n\n// Hook to use the drag and drop context\nexport const useDragDrop = () => useContext(DragDropContext);\n\n// Provider component\nexport const DragDropProvider: React.FC<DragDropProviderProps> = ({ children, onDragStart, onDragMove, onDragEnd, onDragCancel }) => {\n  // State for tracking the currently dragged item\n  const [draggingItem, setDraggingItem] = useState<DragItem | null>(null);\n\n  // State for tracking the current position of the drag\n  const [dragPosition, setDragPosition] = useState<Coordinates | null>(null);\n\n  // Refs for tracking drop targets and sortable items\n  const dropTargetsRef = useRef(new Map<string, DropTargetInfo>());\n  const sortableItemsRef = useRef(new Map<string, SortableItemInfo>());\n\n  // Refs for tracking drag state\n  const dragStartPositionRef = useRef<Coordinates | null>(null);\n  const dragTargetRef = useRef<HTMLElement | null>(null);\n  const draggingRef = useRef<boolean>(false);\n  const lastPositionRef = useRef<Coordinates | null>(null);\n\n  // Register a drop target\n  const registerDropTarget = useCallback((target: DropTargetInfo) => {\n    dropTargetsRef.current.set(target.id, target);\n  }, []);\n\n  // Unregister a drop target\n  const unregisterDropTarget = useCallback((id: string) => {\n    dropTargetsRef.current.delete(id);\n  }, []);\n\n  // Register a sortable item\n  const registerSortableItem = useCallback((item: SortableItemInfo) => {\n    sortableItemsRef.current.set(item.id, item);\n  }, []);\n\n  // Unregister a sortable item\n  const unregisterSortableItem = useCallback((id: string) => {\n    sortableItemsRef.current.delete(id);\n  }, []);\n\n  // Get the current drop target the cursor is over\n  const getDragOverTarget = useCallback((): DropTargetInfo | null => {\n    if (!dragPosition) return null;\n\n    // Check each drop target to see if cursor is inside\n    for (const target of dropTargetsRef.current.values()) {\n      const { rect } = target;\n      if (dragPosition.x >= rect.left && dragPosition.x <= rect.right && dragPosition.y >= rect.top && dragPosition.y <= rect.bottom) {\n        return target;\n      }\n    }\n\n    return null;\n  }, [dragPosition]);\n\n  // Start dragging an item\n  const startDrag = useCallback(\n    (item: DragItem, nativeEvent: MouseEvent | TouchEvent) => {\n      const target = nativeEvent.target as HTMLElement;\n\n      // Store the element that was clicked/touched\n      dragTargetRef.current = target;\n\n      // Calculate initial position\n      let initialX: number;\n      let initialY: number;\n\n      if (nativeEvent instanceof MouseEvent) {\n        initialX = nativeEvent.clientX;\n        initialY = nativeEvent.clientY;\n      } else {\n        // TouchEvent\n        initialX = nativeEvent.touches[0].clientX;\n        initialY = nativeEvent.touches[0].clientY;\n      }\n\n      // Set initial position\n      dragStartPositionRef.current = { x: initialX, y: initialY };\n      setDragPosition({ x: initialX, y: initialY });\n\n      // Set dragging state\n      draggingRef.current = true;\n      setDraggingItem(item);\n      lastPositionRef.current = { x: initialX, y: initialY };\n\n      // Emit drag start event\n      if (onDragStart) {\n        onDragStart({\n          item,\n          coordinates: { x: initialX, y: initialY },\n          target,\n          nativeEvent,\n        });\n      }\n\n      // Add document event listeners for drag move and end\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n      document.addEventListener(\"mouseup\", handleDragEnd);\n      document.addEventListener(\"touchend\", handleDragEnd);\n      document.addEventListener(\"keydown\", handleKeyDown);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    },\n    [onDragStart]\n  );\n\n  // Handle mouse move during drag\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid text selection\n      e.preventDefault();\n\n      // Calculate new position\n      const newX = e.clientX;\n      const newY = e.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle touch move during drag\n  const handleTouchMove = useCallback(\n    (e: TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid scrolling\n      e.preventDefault();\n\n      // Calculate new position\n      const touch = e.touches[0];\n      const newX = touch.clientX;\n      const newY = touch.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle drag end\n  const handleDragEnd = useCallback(\n    (e: MouseEvent | TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !draggingItem || !lastPositionRef.current) return;\n\n      // Calculate final position\n      let finalX: number;\n      let finalY: number;\n\n      if (e instanceof MouseEvent) {\n        finalX = e.clientX;\n        finalY = e.clientY;\n      } else {\n        // TouchEvent\n        if (e.changedTouches.length) {\n          finalX = e.changedTouches[0].clientX;\n          finalY = e.changedTouches[0].clientY;\n        } else {\n          // Fallback to last known position\n          finalX = lastPositionRef.current.x;\n          finalY = lastPositionRef.current.y;\n        }\n      }\n\n      // Calculate total delta from start\n      const totalDelta = {\n        x: finalX - (dragStartPositionRef.current?.x || 0),\n        y: finalY - (dragStartPositionRef.current?.y || 0),\n      };\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag end event\n      if (onDragEnd) {\n        onDragEnd({\n          item: draggingItem,\n          coordinates: { x: finalX, y: finalY },\n          delta: totalDelta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n\n      // Clean up\n      endDrag();\n    },\n    [draggingItem, onDragEnd, getDragOverTarget]\n  );\n\n  // Handle keydown (for cancellation with Escape)\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        if (onDragCancel) {\n          onDragCancel();\n        }\n        endDrag();\n      }\n    },\n    [onDragCancel]\n  );\n\n  // End drag and clean up\n  const endDrag = useCallback(() => {\n    // Reset drag state\n    draggingRef.current = false;\n    dragStartPositionRef.current = null;\n    dragTargetRef.current = null;\n    lastPositionRef.current = null;\n\n    setDraggingItem(null);\n    setDragPosition(null);\n\n    // Remove event listeners\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n    document.removeEventListener(\"touchmove\", handleTouchMove);\n    document.removeEventListener(\"mouseup\", handleDragEnd);\n    document.removeEventListener(\"touchend\", handleDragEnd);\n    document.removeEventListener(\"keydown\", handleKeyDown);\n\n    // Re-enable text selection\n    document.body.style.userSelect = \"\";\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Clean up listeners when component unmounts\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleDragEnd);\n      document.removeEventListener(\"touchend\", handleDragEnd);\n      document.removeEventListener(\"keydown\", handleKeyDown);\n\n      // Re-enable text selection\n      document.body.style.userSelect = \"\";\n    };\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Context value\n  const contextValue: DragContextValue = {\n    draggingItem,\n    dragPosition,\n    dropTargets: dropTargetsRef.current,\n    sortableItems: sortableItemsRef.current,\n    registerDropTarget,\n    unregisterDropTarget,\n    registerSortableItem,\n    unregisterSortableItem,\n    startDrag,\n    endDrag,\n    getDragOverTarget,\n  };\n\n  return <DragDropContext.Provider value={contextValue}>{children}</DragDropContext.Provider>;\n};\n","// Draggable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DraggableProps, DraggableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const Draggable: React.FC<DraggableProps> = ({ id, type = \"default\", data, disabled = false, handle = false, preview, children, style, className = \"\", ...props }) => {\n  const { draggingItem, startDrag } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Check if this item is currently being dragged\n  const isDragging = draggingItem?.id === id && draggingItem?.type === type;\n\n  // Handler for starting drag operation\n  const handleDragStart = useCallback(\n    (e: React.MouseEvent | React.TouchEvent) => {\n      if (disabled || !elementRef.current) return;\n\n      // Prevent default behavior to avoid browser's native drag and drop\n      e.preventDefault();\n\n      // Create the drag item\n      const item = {\n        id,\n        type,\n        data,\n      };\n\n      // Start the drag operation\n      startDrag(item, e.nativeEvent);\n    },\n    [id, type, data, disabled, startDrag]\n  );\n\n  // Event handler props for drag handle\n  const dragHandleProps = {\n    onMouseDown: handleDragStart,\n    onTouchStart: handleDragStart,\n  };\n\n  // Props to pass to render function\n  const renderProps: DraggableRenderProps = {\n    isDragging,\n    dragHandleProps,\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-draggable ${className}`}\n      data-blox-draggable=\"\"\n      data-draggable-id={id}\n      data-draggable-type={type}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...style,\n        // Apply some styles when dragging\n        opacity: isDragging ? 0.5 : 1,\n        // Apply cursor style\n        cursor: disabled ? \"not-allowed\" : handle ? \"grab\" : \"move\",\n        // Prevent text selection during drag (for better UX)\n        userSelect: \"none\",\n        // Make element positioned so we can position the preview\n        position: \"relative\",\n        // Avoid layout shifts by setting a height when dragging\n        ...(isDragging && { height: elementRef.current?.offsetHeight }),\n      }}\n      {...(!handle && !disabled ? dragHandleProps : {})}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n\n// Handle component for partial draggable areas\nexport const DragHandle: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className = \"\", ...props }) => {\n  const renderProps = React.useContext(DraggableRenderPropsContext);\n\n  if (!renderProps) {\n    console.warn(\"DragHandle must be used within a Draggable component\");\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      className={`blox-drag-handle ${className}`}\n      data-blox-drag-handle=\"\"\n      style={{ cursor: \"grab\" }}\n      {...renderProps.dragHandleProps}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Create a context to pass render props down to DragHandle\nconst DraggableRenderPropsContext = React.createContext<DraggableRenderProps | null>(null);\n\n// Alternative implementation of Draggable that uses context to pass props to DragHandle\nexport const DraggableWithContext: React.FC<DraggableProps> = (props) => {\n  const BaseComponent = Draggable;\n  const { children, ...rest } = props;\n\n  return <BaseComponent {...rest}>{(renderProps) => <DraggableRenderPropsContext.Provider value={renderProps}>{typeof children === \"function\" ? children(renderProps) : children}</DraggableRenderPropsContext.Provider>}</BaseComponent>;\n};\n","// Droppable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DroppableProps, DroppableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { STYLES } from \"@/styles/STYLES\";\n\nexport const Droppable: React.FC<DroppableProps> = ({\n  id,\n  type = \"default\",\n  data,\n  disabled = false,\n  accept,\n  children,\n  style,\n  className = \"\",\n  onDrop,\n  // isActive, // Remove from props destructuring\n  ...props\n}) => {\n  const { draggingItem, dragPosition, registerDropTarget, unregisterDropTarget, getDragOverTarget } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Determine if the current drag item can be dropped here\n  const canDrop = useCallback(() => {\n    if (!draggingItem || disabled) return false;\n\n    if (accept === undefined) {\n      // If no accept prop, accept everything\n      return true;\n    }\n\n    if (typeof accept === \"function\") {\n      // If accept is a function, use it\n      return accept(draggingItem);\n    }\n\n    // Handle string or array of strings\n    const acceptTypes = Array.isArray(accept) ? accept : [accept];\n    return acceptTypes.includes(draggingItem.type);\n  }, [draggingItem, disabled, accept]);\n\n  // Determine if the droppable is currently being hovered over\n  const isOver = useCallback(() => {\n    if (!draggingItem || !dragPosition || !canDrop()) return false;\n\n    const overTarget = getDragOverTarget();\n    return overTarget?.id === id;\n  }, [draggingItem, dragPosition, id, canDrop, getDragOverTarget]);\n\n  // Handle drop event\n  const handleDrop = useCallback(() => {\n    if (onDrop && isOver() && canDrop()) {\n      onDrop();\n    }\n  }, [onDrop, isOver, canDrop]);\n\n  // Register this droppable with the context\n  useEffect(() => {\n    if (!elementRef.current) return;\n\n    const updateDropTarget = () => {\n      if (elementRef.current) {\n        const rect = elementRef.current.getBoundingClientRect();\n        registerDropTarget({\n          id,\n          type,\n          data,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateDropTarget();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateDropTarget);\n    window.addEventListener(\"scroll\", updateDropTarget);\n\n    return () => {\n      unregisterDropTarget(id);\n      window.removeEventListener(\"resize\", updateDropTarget);\n      window.removeEventListener(\"scroll\", updateDropTarget);\n    };\n  }, [id, type, data, registerDropTarget, unregisterDropTarget]);\n\n  // Listen for drop events\n  useEffect(() => {\n    const isCurrentlyOver = isOver();\n    const canCurrentlyDrop = canDrop();\n\n    if (isCurrentlyOver && canCurrentlyDrop && !draggingItem) {\n      handleDrop();\n    }\n  }, [draggingItem, isOver, canDrop, handleDrop]);\n\n  // Props to pass to render function\n  const renderProps: DroppableRenderProps = {\n    isOver: isOver(),\n    canDrop: canDrop(),\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-droppable ${className}`}\n      data-blox-droppable=\"\"\n      data-droppable-id={id}\n      data-droppable-type={type}\n      data-over={isOver() ? \"true\" : \"false\"}\n      data-can-drop={canDrop() ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      // Add data attribute instead of prop\n      data-is-active={props[\"data-is-active\"] || \"false\"}\n      style={{\n        ...style,\n        // Add visual feedback when dragging over\n        ...(isOver() &&\n          canDrop() && {\n            outline: `var(--blox-dragdrop-droppable-oultine, ${STYLES.DragDrop.droppable.outline})`,\n            backgroundColor: `var(--blox-dragdrop-droppable-bg-color, ${STYLES.DragDrop.droppable.bgColor})`,\n          }),\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n","// Sortable.tsx\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { SortableProps, SortableItemProps, SortableItemRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { DraggableWithContext } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Sortable List Component\nexport const Sortable: React.FC<SortableProps> = ({ items, keyExtractor, onReorder, direction = \"vertical\", children, style, className = \"\", ...props }) => {\n  const { draggingItem } = useDragDrop();\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\n\n  // Determine if an item is currently being dragged\n  const isDragging = draggedIndex !== null;\n\n  // Find the index of the dragged item\n  useEffect(() => {\n    if (!draggingItem) {\n      setDraggedIndex(null);\n      return;\n    }\n\n    const index = items.findIndex((item) => keyExtractor(item) === draggingItem.id);\n    if (index !== -1) {\n      setDraggedIndex(index);\n    }\n  }, [draggingItem, items, keyExtractor]);\n\n  // Handle reordering when an item is dropped\n  const handleDrop = (itemId: string, targetIndex: number) => {\n    if (draggedIndex === null) return;\n\n    // Skip if dropping at the same position\n    if (draggedIndex === targetIndex) return;\n\n    // Create a copy of the items array\n    const newItems = [...items];\n\n    // Remove the dragged item\n    const [draggedItem] = newItems.splice(draggedIndex, 1);\n\n    // Insert the dragged item at the target position\n    newItems.splice(targetIndex, 0, draggedItem);\n\n    // Call the onReorder callback with the new order\n    onReorder(newItems);\n  };\n\n  // Container style based on direction\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: direction === \"vertical\" ? \"column\" : \"row\",\n    position: \"relative\",\n    ...style,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={`blox-sortable ${className}`}\n      data-blox-sortable=\"\"\n      style={containerStyle}\n      {...props}>\n      {items.map((item, index) => {\n        const itemId = keyExtractor(item);\n        const isBeingDragged = draggedIndex === index;\n\n        // Render each sortable item\n        return (\n          <SortableItem\n            key={itemId}\n            item={item}\n            itemId={itemId}\n            index={index}\n            isDragging={isBeingDragged}\n            onDrop={handleDrop}\n            direction={direction}>\n            {(renderProps) => children(item, renderProps)}\n          </SortableItem>\n        );\n      })}\n    </div>\n  );\n};\n\n// Individual Sortable Item\nconst SortableItem: React.FC<SortableItemProps> = ({ item, itemId, index, isDragging, onDrop, direction, children }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { registerSortableItem, unregisterSortableItem } = useDragDrop();\n\n  // Register this item with the drag drop context\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const updateSortableItem = () => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect();\n        registerSortableItem({\n          id: itemId,\n          index,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateSortableItem();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateSortableItem);\n    window.addEventListener(\"scroll\", updateSortableItem);\n\n    return () => {\n      unregisterSortableItem(itemId);\n      window.removeEventListener(\"resize\", updateSortableItem);\n      window.removeEventListener(\"scroll\", updateSortableItem);\n    };\n  }, [itemId, index, registerSortableItem, unregisterSortableItem]);\n\n  // Handle when another item is dropped on this item\n  const handleDropOnItem = () => {\n    onDrop(itemId, index);\n  };\n\n  // Prepare render props for the children\n  const renderProps: SortableItemRenderProps = {\n    isDragging,\n    dragHandleProps: {\n      draggableId: itemId,\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-pressed\": isDragging,\n      \"aria-label\": `Drag to reorder item ${index + 1}`,\n    },\n  };\n\n  return (\n    <Droppable\n      id={`droppable-${itemId}`}\n      onDrop={handleDropOnItem}\n      // Remove isActive prop - it's causing a DOM warning\n      className=\"blox-sortable-droppable\"\n      style={{\n        margin: direction === \"vertical\" ? \"2px 0\" : \"0 2px\",\n      }}\n      data-is-active=\"true\" // Use data attribute instead\n    >\n      <DraggableWithContext\n        id={itemId}\n        type=\"sortable-item\"\n        data={item}\n        className=\"blox-sortable-item\"\n        style={{\n          opacity: isDragging ? `var(--blox-dragdrop-sortable-opacity, ${STYLES.DragDrop.sortable.opacity})` : 1,\n          cursor: \"grab\",\n          transition: \"all 0.2s ease\",\n          backgroundColor: isDragging ? `var(--blox-dragdrop-sortable-bg-color, ${STYLES.DragDrop.sortable.backgroundColor})` : \"transparent\",\n          borderRadius: `var(--blox-dragdrop-sortable-border-radius, ${STYLES.DragDrop.sortable.borderRadius})`,\n        }}>\n        {children(renderProps)}\n      </DraggableWithContext>\n    </Droppable>\n  );\n};\n\nexport default Sortable;\n","// index.ts - Barrel file for DragDrop components\nimport { DragDropProvider, useDragDrop } from \"./DragDropContext\";\nimport { Draggable, DraggableWithContext, DragHandle } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\nimport { DragOverlay } from \"./DragOverlay\";\nimport { Sortable } from \"./Sortable\";\n\n// Re-export all components and hooks\nexport {\n  // Context and Provider\n  DragDropProvider,\n  useDragDrop,\n  // Core Components\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n};\n\n// Re-export types\nexport type {\n  // Coordinates and Items\n  Coordinates,\n  DragItem,\n\n  // Events\n  DragStartEvent,\n  DragMoveEvent,\n  DragEndEvent,\n\n  // Target Information\n  DropTargetInfo,\n  SortableItemInfo,\n\n  // Context Value\n  DragContextValue,\n\n  // Component Props\n  DragDropProviderProps,\n  DraggableProps,\n  DraggableRenderProps,\n  DragHandleProps,\n  DroppableProps,\n  DroppableRenderProps,\n  DragOverlayProps,\n  SortableProps,\n  SortableItemProps,\n  SortableItemRenderProps,\n} from \"./types\";\n\n// Default export as a namespace\nexport const DragDrop = {\n  Provider: DragDropProvider,\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n  useDragDrop,\n};\n\nexport default DragDrop;\n","// DragOverlay.tsx\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DragOverlayProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const DragOverlay: React.FC<DragOverlayProps> = ({ children, style, className = \"\", ...props }) => {\n  const { draggingItem, dragPosition } = useDragDrop();\n\n  // Don't render anything if not currently dragging\n  if (!draggingItem || !dragPosition) {\n    return null;\n  }\n\n  // Calculate position styles\n  const positionStyles = {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    transform: `translate(${dragPosition.x}px, ${dragPosition.y}px)`,\n    pointerEvents: \"none\", // Make overlay non-interactive\n    zIndex: 9999,\n    transformOrigin: \"0 0\",\n  } as React.CSSProperties;\n\n  // Render the overlay as a portal\n  return createPortal(\n    <div\n      className={`blox-drag-overlay ${className}`}\n      data-blox-drag-overlay=\"\"\n      style={{\n        ...positionStyles,\n        ...style,\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children({ item: draggingItem }) : children}\n    </div>,\n    // Append to body to ensure it's above everything\n    document.body\n  );\n};\n","// ContextMenu.tsx\nimport React, { useState, useRef, useEffect, createContext, useContext, useCallback, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ContextMenuProps, ContextMenuTriggerProps, ContextMenuContentProps, ContextMenuItemProps, ContextMenuGroupProps, ContextMenuSeparatorProps, ContextMenuContextValue, ContextMenuComposition } from \"./types\";\n\n// Create context for context menu state\nconst ContextMenuContext = createContext<ContextMenuContextValue>({\n  isOpen: false,\n  open: () => {},\n  close: () => {},\n  position: { x: 0, y: 0 },\n  disabled: false,\n});\n\n// Hook to use context menu context\nconst useContextMenu = () => {\n  const context = useContext(ContextMenuContext);\n  if (!context) {\n    throw new Error(\"useContextMenu must be used within a ContextMenu component\");\n  }\n  return context;\n};\n\n// ContextMenu Trigger Component\nconst ContextMenuTrigger: React.FC<ContextMenuTriggerProps> = ({ children, disabled = false, className = \"\", ...props }) => {\n  const { open, disabled: contextDisabled } = useContextMenu();\n  const isDisabled = disabled || contextDisabled;\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    if (isDisabled) return;\n\n    // Prevent the default context menu\n    event.preventDefault();\n\n    // Open our custom context menu\n    open(event);\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-trigger ${className}`}\n      data-blox-context-menu-trigger=\"\"\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      onContextMenu={handleContextMenu}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Content Component\nconst ContextMenuContent: React.FC<ContextMenuContentProps> = ({ children, closeOnOutsideClick = true, closeOnEscape = true, offset = [0, 0], width, maxHeight, className = \"\", ...props }) => {\n  const { isOpen, close, position } = useContextMenu();\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // Create a ref to store calculated styles to avoid re-renders\n  const styleRef = useRef({\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: 1000,\n    width: width,\n    maxHeight: maxHeight,\n    overflow: maxHeight ? \"auto\" : undefined,\n  });\n\n  // Calculate position only once when menu opens or position changes\n  useLayoutEffect(() => {\n    if (!isOpen) return;\n\n    // Initial position based on cursor + offset\n    let x = position.x + offset[0];\n    let y = position.y + offset[1];\n\n    // After one frame, adjust if needed\n    requestAnimationFrame(() => {\n      if (!menuRef.current) return;\n\n      const menuRect = menuRef.current.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // Check if menu would go off the right edge\n      if (x + menuRect.width > viewportWidth) {\n        x = viewportWidth - menuRect.width - 5; // 5px buffer\n      }\n\n      // Check if menu would go off the bottom edge\n      if (y + menuRect.height > viewportHeight) {\n        y = viewportHeight - menuRect.height - 5; // 5px buffer\n      }\n\n      // Ensure menu doesn't go off the left or top edges\n      x = Math.max(5, x);\n      y = Math.max(5, y);\n\n      // Apply directly to the DOM element to avoid re-renders\n      if (menuRef.current) {\n        menuRef.current.style.left = `${x}px`;\n        menuRef.current.style.top = `${y}px`;\n      }\n    });\n\n    // Store initial position in style ref\n    styleRef.current = {\n      ...styleRef.current,\n      left: `${position.x + offset[0]}px`,\n      top: `${position.y + offset[1]}px`,\n    };\n  }, [isOpen, position.x, position.y, offset[0], offset[1]]);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    if (!isOpen || !closeOnOutsideClick) return;\n\n    const handleOutsideClick = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        close();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, [isOpen, close, closeOnOutsideClick]);\n\n  // Close menu when pressing Escape\n  useEffect(() => {\n    if (!isOpen || !closeOnEscape) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        close();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, close, closeOnEscape]);\n\n  if (!isOpen) return null;\n\n  // Render the menu with Portal\n  return createPortal(\n    <div\n      ref={menuRef}\n      className={`blox-context-menu-content ${className}`}\n      data-blox-context-menu-content=\"\"\n      style={{\n        position: \"fixed\",\n        ...styleRef.current,\n      }}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      {...props}>\n      {children}\n    </div>,\n    document.body\n  );\n};\n\n// ContextMenu Item Component\nconst ContextMenuItem: React.FC<ContextMenuItemProps> = ({ children, disabled = false, onSelect, closeOnSelect = true, icon, shortcut, className = \"\", ...props }) => {\n  const { close } = useContextMenu();\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect();\n    }\n\n    if (closeOnSelect) {\n      close();\n    }\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-item ${className}`}\n      data-blox-context-menu-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onClick={handleClick}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {icon && (\n        <span\n          className=\"blox-context-menu-item-icon\"\n          data-blox-context-menu-item-icon=\"\">\n          {icon}\n        </span>\n      )}\n\n      <span\n        className=\"blox-context-menu-item-label\"\n        data-blox-context-menu-item-label=\"\">\n        {children}\n      </span>\n\n      {shortcut && (\n        <span\n          className=\"blox-context-menu-item-shortcut\"\n          data-blox-context-menu-item-shortcut=\"\">\n          {shortcut}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// ContextMenu Group Component\nconst ContextMenuGroup: React.FC<ContextMenuGroupProps> = ({ children, label, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-group ${className}`}\n      data-blox-context-menu-group=\"\"\n      role=\"group\"\n      aria-label={label}\n      {...props}>\n      {label && (\n        <div\n          className=\"blox-context-menu-group-label\"\n          data-blox-context-menu-group-label=\"\">\n          {label}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Separator Component\nconst ContextMenuSeparator: React.FC<ContextMenuSeparatorProps> = ({ className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-separator ${className}`}\n      data-blox-context-menu-separator=\"\"\n      role=\"separator\"\n      {...props}\n    />\n  );\n};\n\n// Main ContextMenu Component\nconst ContextMenu: React.FC<ContextMenuProps> & ContextMenuComposition = ({ children, onOpen, onClose, disabled = false, enableKeyboard = true, ...props }) => {\n  // State for tracking open state and position\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  // Open the context menu\n  const open = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) return;\n\n      if (\"clientX\" in event) {\n        setPosition({ x: event.clientX, y: event.clientY });\n      }\n\n      setIsOpen(true);\n\n      if (onOpen) {\n        onOpen(event);\n      }\n    },\n    [disabled, onOpen]\n  );\n\n  // Close the context menu\n  const close = useCallback(() => {\n    setIsOpen(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    if (!enableKeyboard) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Implement keyboard shortcuts to open the context menu if desired\n      // For example, Shift+F10 or the context menu key\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [enableKeyboard]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    open,\n    close,\n    position,\n    disabled,\n  };\n\n  return (\n    <ContextMenuContext.Provider value={contextValue}>\n      <div\n        className=\"blox-context-menu\"\n        data-blox-context-menu=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        {...props}>\n        {children}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n};\n\n// Attach sub-components\nContextMenu.Trigger = ContextMenuTrigger;\nContextMenu.Content = ContextMenuContent;\nContextMenu.Item = ContextMenuItem;\nContextMenu.Group = ContextMenuGroup;\nContextMenu.Separator = ContextMenuSeparator;\n\nexport default ContextMenu;\n","// Slider.tsx\nimport React, { useState, useRef, useEffect, useCallback, createContext, useContext, useMemo } from \"react\";\nimport { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps, SliderMarkProps, SliderContextValue, ThumbPosition, SliderRange, SliderComposition } from \"./types\";\nimport { STYLES } from \"../../styles/STYLES\";\n\n// Create context for the slider\nconst SliderContext = createContext<SliderContextValue | null>(null);\n\n// Hook to use slider context\nconst useSlider = () => {\n  const context = useContext(SliderContext);\n  if (!context) {\n    throw new Error(\"Slider components must be used within a Slider\");\n  }\n  return context;\n};\n\n/**\n * @description Slider component for selecting a range of values. *Experimental component*\n */\n// Slider component\nconst Slider: React.FC<SliderProps> & SliderComposition = ({ value, defaultValue = 0, onChange, onDragStart, onDragEnd, min = 0, max = 100, step = 1, disabled = false, orientation = \"horizontal\", className = \"\", inverted = false, showMarks = false, marks, label, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, children, ...props }) => {\n  // Reference to the root element\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  // Parse and normalize the values\n  const parseValues = (input: number | number[]): number[] => {\n    if (typeof input === \"number\") {\n      return [input];\n    }\n    return [...input].sort((a, b) => a - b);\n  };\n\n  // Internal state for controlled/uncontrolled usage\n  const [internalValues, setInternalValues] = useState<number[]>(() => {\n    return parseValues(defaultValue);\n  });\n\n  // Determine if we're controlled or uncontrolled\n  const isControlled = value !== undefined;\n  const currentValues = isControlled ? parseValues(value) : internalValues;\n\n  // Track whether any thumb is being dragged\n  const [isDragging, setIsDragging] = useState(false);\n  const activeThumbIndex = useRef<number | null>(null);\n\n  // Calculate thumb positions\n  const thumbPositions = useMemo<ThumbPosition[]>(() => {\n    return currentValues.map((value, index) => {\n      // Clamp value to min/max\n      const clampedValue = Math.min(Math.max(value, min), max);\n\n      // Calculate percentage\n      const percent = ((clampedValue - min) / (max - min)) * 100;\n\n      return {\n        value: clampedValue,\n        index,\n        percent: inverted ? 100 - percent : percent,\n      };\n    });\n  }, [currentValues, min, max, inverted]);\n\n  // Calculate ranges between thumbs\n  const ranges = useMemo<SliderRange[]>(() => {\n    const result: SliderRange[] = [];\n\n    // For single thumb, range is from min to value\n    if (currentValues.length === 1) {\n      result.push({\n        start: min,\n        end: currentValues[0],\n      });\n    } else {\n      // For multiple thumbs, create ranges between each pair of values\n      // First range from min to first value\n      result.push({\n        start: min,\n        end: currentValues[0],\n      });\n\n      // Ranges between thumbs\n      for (let i = 0; i < currentValues.length - 1; i++) {\n        result.push({\n          start: currentValues[i],\n          end: currentValues[i + 1],\n        });\n      }\n\n      // Last range from last value to max\n      result.push({\n        start: currentValues[currentValues.length - 1],\n        end: max,\n      });\n    }\n\n    return result;\n  }, [currentValues, min, max]);\n\n  // Convert percentage (0-100) to a value\n  const percentToValue = useCallback(\n    (percent: number): number => {\n      // Adjust for inverted slider\n      const adjustedPercent = inverted ? 100 - percent : percent;\n\n      // Convert to range value\n      let value = (adjustedPercent / 100) * (max - min) + min;\n\n      // Apply step\n      if (step > 0) {\n        value = Math.round(value / step) * step;\n      }\n\n      // Ensure value is within bounds\n      return Math.min(Math.max(value, min), max);\n    },\n    [min, max, step, inverted]\n  );\n\n  // Convert value to percentage (0-100)\n  const valueToPercent = useCallback(\n    (value: number): number => {\n      // Ensure value is within bounds\n      const clampedValue = Math.min(Math.max(value, min), max);\n\n      // Convert to percentage\n      const percent = ((clampedValue - min) / (max - min)) * 100;\n\n      // Adjust for inverted slider\n      return inverted ? 100 - percent : percent;\n    },\n    [min, max, inverted]\n  );\n\n  // Get the closest thumb index to a given position\n  const getClosestThumb = useCallback(\n    (position: number): number => {\n      if (currentValues.length === 1) return 0;\n\n      // Convert position to value\n      const positionValue = percentToValue(position);\n\n      // Find the closest thumb\n      let closestDistance = Math.abs(currentValues[0] - positionValue);\n      let closestIndex = 0;\n\n      for (let i = 1; i < currentValues.length; i++) {\n        const distance = Math.abs(currentValues[i] - positionValue);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestIndex = i;\n        }\n      }\n\n      return closestIndex;\n    },\n    [currentValues, percentToValue]\n  );\n\n  // Update a specific thumb value\n  const updateThumb = useCallback(\n    (index: number, newValue: number) => {\n      // Clamp value to min/max\n      const clampedValue = Math.min(Math.max(newValue, min), max);\n\n      // Create new values array\n      let newValues = [...currentValues];\n      newValues[index] = clampedValue;\n\n      // Keep thumbs in order (prevent crossover)\n      if (index > 0 && newValues[index] < newValues[index - 1]) {\n        newValues[index] = newValues[index - 1];\n      }\n      if (index < newValues.length - 1 && newValues[index] > newValues[index + 1]) {\n        newValues[index] = newValues[index + 1];\n      }\n\n      // Update state for uncontrolled component\n      if (!isControlled) {\n        setInternalValues(newValues);\n      }\n\n      // Call onChange handler\n      if (onChange) {\n        onChange(newValues.length === 1 ? newValues[0] : newValues);\n      }\n    },\n    [currentValues, min, max, isControlled, onChange]\n  );\n\n  // Handle pointer down event on track\n  const handleTrackPointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    // Get position relative to track\n    const trackRect = event.currentTarget.getBoundingClientRect();\n    const position = orientation === \"horizontal\" ? ((event.clientX - trackRect.left) / trackRect.width) * 100 : ((event.clientY - trackRect.top) / trackRect.height) * 100;\n\n    // Find closest thumb and activate it\n    const thumbIndex = getClosestThumb(position);\n    activeThumbIndex.current = thumbIndex;\n\n    // Move the thumb to this position\n    updateThumb(thumbIndex, percentToValue(position));\n\n    // Start dragging\n    setIsDragging(true);\n\n    // Call onDragStart handler\n    if (onDragStart) {\n      onDragStart(currentValues.length === 1 ? currentValues[0] : currentValues);\n    }\n\n    // Capture pointer events\n    event.currentTarget.setPointerCapture(event.pointerId);\n  };\n\n  // Handle pointer move event\n  const handleTrackPointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled || !isDragging || activeThumbIndex.current === null) return;\n\n    // Get position relative to track\n    const trackRect = event.currentTarget.getBoundingClientRect();\n    const position = orientation === \"horizontal\" ? ((event.clientX - trackRect.left) / trackRect.width) * 100 : ((event.clientY - trackRect.top) / trackRect.height) * 100;\n\n    // Update thumb position\n    updateThumb(activeThumbIndex.current, percentToValue(position));\n  };\n\n  // Handle pointer up event\n  const handleTrackPointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled || !isDragging) return;\n\n    // End dragging\n    setIsDragging(false);\n    activeThumbIndex.current = null;\n\n    // Call onDragEnd handler\n    if (onDragEnd) {\n      onDragEnd(currentValues.length === 1 ? currentValues[0] : currentValues);\n    }\n\n    // Release pointer capture\n    event.currentTarget.releasePointerCapture(event.pointerId);\n  };\n\n  // Handle keyboard navigation\n  const handleRootKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    // Find focused thumb\n    const focusedThumbIndex = currentValues.findIndex((_, i) => document.activeElement === rootRef.current?.querySelector(`[data-thumb-index=\"${i}\"]`));\n\n    if (focusedThumbIndex === -1) return;\n\n    // Determine the increment amount\n    const increment = event.shiftKey ? step * 10 : step;\n    let newValue = currentValues[focusedThumbIndex];\n\n    switch (event.key) {\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? -increment : increment);\n        event.preventDefault();\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? increment : -increment);\n        event.preventDefault();\n        break;\n      case \"Home\":\n        newValue = min;\n        event.preventDefault();\n        break;\n      case \"End\":\n        newValue = max;\n        event.preventDefault();\n        break;\n      case \"PageUp\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? -increment * 10 : increment * 10);\n        event.preventDefault();\n        break;\n      case \"PageDown\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? increment * 10 : -increment * 10);\n        event.preventDefault();\n        break;\n      default:\n        return;\n    }\n\n    // Update thumb position\n    updateThumb(focusedThumbIndex, newValue);\n  };\n\n  // Create the context value\n  const contextValue: SliderContextValue = {\n    value: currentValues.length === 1 ? currentValues[0] : currentValues,\n    min,\n    max,\n    step,\n    disabled,\n    orientation,\n    inverted,\n    isDragging,\n    thumbPositions,\n    ranges,\n    updateThumb,\n    setDragging: setIsDragging,\n    getClosestThumb,\n    valueToPercent,\n    percentToValue,\n  };\n\n  // Determine the track direction CSS variables\n  const directionProps: React.CSSProperties = {\n    position: \"relative\",\n    \"--blox-slider-direction\": orientation === \"horizontal\" ? \"row\" : \"column\",\n    \"--blox-slider-length\": \"100%\",\n    \"--blox-slider-track-size\": orientation === \"horizontal\" ? \"100%\" : \"100%\",\n    \"--blox-slider-track-thickness\": orientation === \"horizontal\" ? \"var(--blox-slider-thickness, 4px)\" : \"var(--blox-slider-thickness, 4px)\",\n  };\n\n  // Custom render function using render props\n  const renderContent = () => {\n    if (typeof children === \"function\") {\n      return <div style={{ position: \"relative\" }}>{children(contextValue)}</div>;\n    }\n\n    return (\n      children || (\n        <div style={{ position: \"relative\" }}>\n          <SliderTrack\n            onPointerDown={handleTrackPointerDown}\n            onPointerMove={handleTrackPointerMove}\n            onPointerUp={handleTrackPointerUp}>\n            {currentValues.length > 1 &&\n              currentValues.map((_, index) => (\n                <SliderRangeComponent\n                  key={`range-${index}`}\n                  index={index}\n                />\n              ))}\n            {currentValues.length === 1 && <SliderRangeComponent />}\n          </SliderTrack>\n\n          {currentValues.map((_, index) => (\n            <SliderThumb\n              key={`thumb-${index}`}\n              index={index}\n            />\n          ))}\n\n          {showMarks && (\n            <>\n              {/* Default marks at min and max */}\n              {!marks && (\n                <>\n                  <SliderMark value={min} />\n                  <SliderMark value={max} />\n                </>\n              )}\n\n              {/* Custom marks if provided */}\n              {marks &&\n                Object.entries(marks).map(([value, label]) => (\n                  <SliderMark\n                    key={`mark-${value}`}\n                    value={Number(value)}>\n                    {label}\n                  </SliderMark>\n                ))}\n            </>\n          )}\n        </div>\n      )\n    );\n  };\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <div\n        ref={rootRef}\n        role=\"group\"\n        aria-disabled={disabled}\n        aria-label={label || ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        tabIndex={-1}\n        onKeyDown={handleRootKeyDown}\n        className={`blox-slider ${className}`}\n        data-blox-slider=\"\"\n        data-orientation={orientation}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-inverted={inverted ? \"true\" : \"false\"}\n        style={{\n          width: \"100%\", // Add this\n          height: orientation === \"vertical\" ? \"100%\" : \"auto\", // Add this\n          ...directionProps,\n          ...props.style,\n        }}\n        {...props}>\n        {renderContent()}\n      </div>\n    </SliderContext.Provider>\n  );\n};\n\n// Slider Track component\nconst SliderTrack: React.FC<SliderTrackProps> = ({ children, className = \"\", onPointerDown, onPointerMove, onPointerUp, ...props }) => {\n  const { orientation, disabled } = useSlider();\n\n  // Handle pointer events for the track\n  const handlePointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerDown) {\n      onPointerDown(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointerdown\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // Handle pointer move\n  const handlePointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerMove) {\n      onPointerMove(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointermove\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // Handle pointer up\n  const handlePointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerUp) {\n      onPointerUp(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointerup\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  return (\n    <div\n      className={`blox-slider-track ${className}`}\n      data-blox-slider-track=\"\"\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      onPointerUp={handlePointerUp}\n      style={{\n        position: \"relative\",\n        width: orientation === \"horizontal\" ? \"100%\" : `var(--blox-slider-thickness, ${STYLES.Slider.thickness})`,\n        height: orientation === \"horizontal\" ? `var(--blox-slider-thickness, ${STYLES.Slider.thickness})` : `100%`,\n        borderRadius: `var(--blox-slider-border-radius, ${STYLES.Slider.borderRadius})`,\n        backgroundColor: `var(--blox-slider-track-color, ${STYLES.Slider.track.color})`,\n        ...props.style,\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Range component - renamed to avoid conflict\nconst SliderRangeComponent: React.FC<SliderRangeProps> = ({ index = 0, children, className = \"\", ...props }) => {\n  const { orientation, disabled, inverted, ranges, min, max, valueToPercent } = useSlider();\n\n  // Get the range information\n  const range = ranges[index] || ranges[0];\n\n  // Calculate start and end percentages\n  const startPercent = valueToPercent(range.start);\n  const endPercent = valueToPercent(range.end);\n\n  // Determine range style based on orientation\n  const rangeStyle: React.CSSProperties = {\n    // position: \"absolute\", // Keep this\n    borderRadius: `var(--blox-slider-border-radius, ${STYLES.Slider.borderRadius})`,\n    backgroundColor: `var(--blox-slider-range-color, ${STYLES.Slider.range.color})`,\n  };\n\n  if (orientation === \"horizontal\") {\n    const leftPercent = Math.min(startPercent, endPercent);\n    const widthPercent = Math.abs(endPercent - startPercent);\n\n    rangeStyle.left = `${leftPercent}%`;\n    rangeStyle.width = `${widthPercent}%`;\n    rangeStyle.height = \"100%\";\n  } else {\n    const bottomPercent = Math.min(startPercent, endPercent);\n    const heightPercent = Math.abs(endPercent - startPercent);\n\n    rangeStyle.bottom = `${bottomPercent}%`;\n    rangeStyle.height = `${heightPercent}%`;\n    rangeStyle.width = \"100%\";\n  }\n\n  return (\n    <div\n      className={`blox-slider-range ${className}`}\n      data-blox-slider-range=\"\"\n      data-range-index={index}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...rangeStyle,\n        ...props.style,\n        position: \"absolute\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Thumb component\nconst SliderThumb: React.FC<SliderThumbProps> = ({ index = 0, children, className = \"\", ...props }) => {\n  const { orientation, disabled, thumbPositions, isDragging, value, min, max, updateThumb, setDragging } = useSlider();\n\n  // Get this thumb's position\n  const thumbPosition = thumbPositions[index] || thumbPositions[0];\n\n  // Handler for thumb key down\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    // Let the parent handle keyboard navigation\n    // The event will bubble up to the root handler\n  };\n\n  // Calculate accessibility values\n  const valueNow = Array.isArray(value) ? value[index] : value;\n  const valueText = `${valueNow}`;\n\n  // Determine thumb style based on orientation\n  const thumbStyle: React.CSSProperties = {\n    position: `absolute`,\n    transform: `translate(-50%, -50%)`,\n    width: `var(--blox-slider-thumb-size, ${STYLES.Slider.thumb.size})`,\n    height: `var(--blox-slider-thumb-size, ${STYLES.Slider.thumb.size})`,\n    borderRadius: `var(--blox-slider-thumb-radius, ${STYLES.Slider.thumb.radius})`,\n    backgroundColor: `var(--blox-slider-thumb-color, ${STYLES.Slider.thumb.color})`,\n    boxShadow: `var(--blox-slider-thumb-shadow, ${STYLES.Slider.thumb.shadow})`,\n    cursor: disabled ? `not-allowed` : `grab`,\n    // Add grab cursor when dragging\n    ...(isDragging && { cursor: disabled ? \"not-allowed\" : \"grabbing\" }),\n  };\n\n  if (orientation === \"horizontal\") {\n    thumbStyle.left = `${thumbPosition.percent}%`;\n    thumbStyle.top = \"50%\";\n  } else {\n    thumbStyle.bottom = `${thumbPosition.percent}%`;\n    thumbStyle.left = \"50%\";\n  }\n\n  return (\n    <div\n      role=\"slider\"\n      tabIndex={disabled ? -1 : 0}\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={valueNow}\n      aria-valuetext={valueText}\n      aria-disabled={disabled}\n      aria-orientation={orientation}\n      className={`blox-slider-thumb ${className}`}\n      data-blox-slider-thumb=\"\"\n      data-thumb-index={index}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      onKeyDown={handleKeyDown}\n      style={{\n        ...thumbStyle,\n        ...props.style,\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Mark component\nconst SliderMark: React.FC<SliderMarkProps> = ({ value, children, className = \"\", ...props }) => {\n  const { orientation, disabled, min, max, valueToPercent } = useSlider();\n\n  // Calculate position percentage\n  const positionPercent = valueToPercent(value);\n\n  // Determine mark style based on orientation\n  const markStyle: React.CSSProperties = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  if (orientation === \"horizontal\") {\n    markStyle.left = `${positionPercent}%`;\n    markStyle.top = `100%`;\n    markStyle.transform = `translateX(-50%)`;\n    markStyle.marginTop = `var(--blox-slider-mark-spacing, ${STYLES.Slider.mark.spacing})`;\n  } else {\n    markStyle.bottom = `${positionPercent}%`;\n    markStyle.left = `100%`;\n    markStyle.transform = `translateY(50%)`;\n    markStyle.marginLeft = `var(--blox-slider-mark-spacing, ${STYLES.Slider.mark.spacing})`;\n  }\n\n  return (\n    <div\n      className={`blox-slider-mark ${className}`}\n      data-blox-slider-mark=\"\"\n      data-mark-value={value}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...markStyle,\n        ...props.style,\n      }}\n      {...props}>\n      {/* Mark line indicator */}\n      <div\n        className=\"blox-slider-mark-line\"\n        data-blox-slider-mark-line=\"\"\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"var(--blox-slider-mark-color, #e5e7eb)\",\n          width: orientation === \"horizontal\" ? \"2px\" : \"8px\",\n          height: orientation === \"horizontal\" ? \"8px\" : \"2px\",\n          transform: orientation === \"horizontal\" ? \"translateY(-100%)\" : \"translateX(-100%)\",\n        }}\n      />\n\n      {/* Mark label */}\n      {children && (\n        <div\n          className=\"blox-slider-mark-label\"\n          data-blox-slider-mark-label=\"\"\n          style={{\n            fontSize: `var(--blox-slider-mark-font-size, ${STYLES.Slider.mark.fontSize})`,\n            marginTop: orientation === `horizontal` ? `var(--blox-slider-mark-label-spacing, ${STYLES.Slider.mark.label.spacing})` : 0,\n            marginLeft: orientation === `vertical` ? `var(--blox-slider-mark-label-spacing, ${STYLES.Slider.mark.label.spacing})` : 0,\n          }}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Attach the original interfaces to maintain component structure\n// const SliderRange = SliderRangeComponent;\n\n// Attach subcomponents to Slider\nSlider.Track = SliderTrack;\nSlider.Range = SliderRangeComponent;\nSlider.Thumb = SliderThumb;\nSlider.Mark = SliderMark;\n\nexport default Slider;\n","// Checkbox.tsx\nimport React, { useRef, useEffect } from \"react\";\nimport { CheckboxProps } from \"./types\";\n\nconst Checkbox: React.FC<CheckboxProps> = ({ label, checked, defaultChecked, onChange, indeterminate = false, disabled = false, required = false, className = \"\", inputClassName = \"\", labelClassName = \"\", id, labelProps = {}, labelPosition = \"right\", helperText, errorMessage, hasError = false, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-checkbox-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // Reference to the input element\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Set indeterminate state on mount and update\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n\n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(event.target.checked, event);\n    }\n  };\n\n  // Determine whether we're controlled or uncontrolled\n  const isControlled = checked !== undefined;\n\n  return (\n    <div\n      className={`blox-checkbox-container ${className}`}\n      data-blox-checkbox=\"\"\n      data-checked={isControlled ? (checked ? \"true\" : \"false\") : undefined}\n      data-indeterminate={indeterminate ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <input\n        ref={inputRef}\n        type=\"checkbox\"\n        id={uniqueId}\n        checked={checked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={disabled}\n        required={required}\n        className={`blox-checkbox-input ${inputClassName}`}\n        data-blox-checkbox-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={helperText || errorMessage ? `${uniqueId}-description` : undefined}\n        {...props}\n      />\n\n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-checkbox-label ${labelClassName}`}\n          data-blox-checkbox-label=\"\"\n          {...labelProps}>\n          {label}\n        </label>\n      )}\n\n      {(helperText || errorMessage) && (\n        <div\n          id={`${uniqueId}-description`}\n          className={`blox-checkbox-description ${hasError ? \"blox-checkbox-error\" : \"\"}`}\n          data-blox-checkbox-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkbox;\n","// Switch.tsx\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { SwitchProps } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\nconst Switch: React.FC<SwitchProps> = ({ checked, defaultChecked = false, onChange, disabled = false, required = false, id, name, value = \"on\", label, labelPosition = \"right\", className = \"\", thumbClassName = \"\", trackClassName = \"\", labelClassName = \"\", helperText, errorMessage, hasError = false, inputProps = {}, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-switch-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // For uncontrolled mode\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\n\n  // Determine if we're in controlled mode\n  const isControlled = checked !== undefined;\n  const isChecked = isControlled ? checked : internalChecked;\n\n  // Handle change event\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) return;\n\n      const newChecked = event.target.checked;\n\n      if (!isControlled) {\n        setInternalChecked(newChecked);\n      }\n\n      if (onChange) {\n        onChange(newChecked);\n      }\n    },\n    [disabled, isControlled, onChange]\n  );\n\n  // Generate description ID if helper text or error message is provided\n  const descriptionId = helperText || errorMessage ? `${uniqueId}-description` : undefined;\n\n  return (\n    <div\n      className={`blox-switch-container ${className}`}\n      data-blox-switch=\"\"\n      data-checked={isChecked ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <label\n        htmlFor={uniqueId}\n        className=\"blox-switch-wrapper\"\n        data-blox-switch-wrapper=\"\"\n        style={{\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          cursor: disabled ? \"not-allowed\" : \"pointer\",\n          flexDirection: labelPosition === \"left\" ? \"row-reverse\" : \"row\",\n        }}\n        {...props}>\n        {/* Hidden input for accessibility and form submission */}\n        <input\n          type=\"checkbox\"\n          id={uniqueId}\n          name={name}\n          value={value}\n          checked={isChecked}\n          defaultChecked={!isControlled ? defaultChecked : undefined}\n          onChange={handleChange}\n          disabled={disabled}\n          required={required}\n          className=\"blox-switch-input\"\n          data-blox-switch-input=\"\"\n          aria-checked={isChecked}\n          aria-disabled={disabled}\n          aria-invalid={hasError}\n          aria-describedby={descriptionId}\n          style={{\n            border: \"0\",\n            clip: \"rect(0 0 0 0)\",\n            clipPath: \"inset(50%)\",\n            height: \"1px\",\n            margin: \"-1px\",\n            overflow: \"hidden\",\n            padding: \"0\",\n            position: \"absolute\",\n            whiteSpace: \"nowrap\",\n            width: \"1px\",\n            backgroundColor: `var(--blox-switch-input-bg-color, ${STYLES.Switch.input.bgColor}))`,\n          }}\n          {...inputProps}\n        />\n\n        {/* The visual switch component */}\n        <div\n          className={`blox-switch-track ${trackClassName}`}\n          data-blox-switch-track=\"\"\n          data-state={isChecked ? \"checked\" : \"unchecked\"}\n          data-disabled={disabled ? \"true\" : \"false\"}\n          style={{\n            position: \"relative\",\n            display: \"inline-flex\",\n            flexShrink: 0,\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            WebkitTapHighlightColor: \"transparent\",\n            // These are just base styles to ensure the component is visible\n            // The user should override these with their own styling\n            width: \"36px\",\n            height: \"20px\",\n            borderRadius: \"10px\",\n            backgroundColor: `var(--blox-switch-track-bg-color, ${STYLES.Switch.track.bgColor}))`,\n          }}>\n          <div\n            className={`blox-switch-thumb ${thumbClassName}`}\n            data-blox-switch-thumb=\"\"\n            data-state={isChecked ? \"checked\" : \"unchecked\"}\n            data-disabled={disabled ? \"true\" : \"false\"}\n            style={{\n              position: \"absolute\",\n              top: \"2px\",\n              left: \"2px\",\n              // These transform properties create the sliding effect\n              transform: isChecked ? \"translateX(16px)\" : \"translateX(0)\",\n              transition: \"transform 150ms\",\n              // These are just base styles to ensure the component is visible\n              width: \"16px\",\n              height: \"16px\",\n              borderRadius: \"8px\",\n              backgroundColor: `var(--blox-switch-thumb-bg-color, ${STYLES.Switch.thumb.bgColor}))`,\n            }}\n          />\n        </div>\n\n        {/* Label */}\n        {label && (\n          <span\n            className={`blox-switch-label ${labelClassName}`}\n            data-blox-switch-label=\"\"\n            style={{\n              marginLeft: labelPosition === \"right\" ? `var(--blox-switch-label-spacing, ${STYLES.Switch.label.spacing})` : `0`,\n              marginRight: labelPosition === `left` ? `var(--blox-switch-label-spacing, ${STYLES.Switch.label.spacing})` : `0`,\n            }}>\n            {label}\n          </span>\n        )}\n      </label>\n\n      {/* Helper text or error message */}\n      {(helperText || errorMessage) && (\n        <div\n          id={descriptionId}\n          className={`blox-switch-description ${hasError ? \"blox-switch-error\" : \"\"}`}\n          data-blox-switch-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}\n          style={{\n            marginTop: \"4px\",\n            fontSize: \"0.875em\",\n          }}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Switch;\n"],"names":["AccordionContext","createContext","activeIndices","toggleItem","isItemActive","AccordionItemContext","isActive","isDisabled","index","useAccordionItem","context","useContext","Error","Accordion","children","allowMultiple","defaultIndex","controlledActiveIndices","onChange","className","props","initialIndices","useMemo","internalActiveIndices","setInternalActiveIndices","useState","isControlled","undefined","useCallback","updatedIndices","includes","filter","i","contextValue","_jsx","Provider","value","React","Children","map","child","isValidElement","cloneElement","Item","providedIndex","useAccordion","console","warn","itemContextValue","Button","onClick","disabled","type","Panel","jsx","STYLES","input","bgColor","thumb","track","label","spacing","thickness","borderRadius","color","range","size","radius","shadow","mark","fontSize","boxShadow","maxHeight","body","padding","close","right","top","header","border","footer","gap","title","fontWeight","overlay","width","small","medium","large","full","droppable","outline","sortable","opacity","backgroundColor","bottom","left","minWidth","maxWidth","height","backdropColor","backdropBlur","contentBgColor","offset","DrawerCloseButton","onClose","Drawer","isOpen","placement","minHeight","closeOnEsc","closeOnOutsideClick","contentClassName","backdropClassName","zIndex","trapFocus","usePortal","showCloseButton","animated","lockScroll","renderCloseButton","closeButton","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","id","style","drawerRef","useRef","firstFocusableRef","drawerId","Math","random","toString","substr","current","useEffect","document","overflow","handleKeyDown","event","key","addEventListener","removeEventListener","focus","handleTabKey","focusableElements","querySelectorAll","length","firstElement","lastElement","shiftKey","activeElement","preventDefault","drawerContent","e","target","currentTarget","position","display","backdropFilter","_jsxs","ref","baseStyles","getDrawerStyles","tabIndex","createPortal","Header","Body","Footer","CloseButton","DropdownContext","toggle","open","useDropdown","Dropdown","controlledIsOpen","onOpenChange","onClickOutside","name","internalIsOpen","setInternalIsOpen","internalValue","setInternalValue","dropdownRef","handleClickOutside","contains","newState","selectedValue","onValueChange","newValue","widthStyle","Trigger","finalDisabled","Menu","selected","onSelect","isSelected","ModalCloseButton","Modal","closeOnOverlayClick","overlayClassName","ariaLabelledby","ariaDescribedby","isCentered","blockScroll","initialFocusRef","modalRef","previousFocusRef","modalId","handleFocusTrap","originalStyle","window","getComputedStyle","getAnimationClass","modalElement","alignItems","justifyContent","getSizeStyle","borderBottom","margin","background","cursor","borderTop","Content","RadioGroupContext","TableContext","data","columns","autoGenerateRowKey","TableHeader","TableBody","TableRow","TableHeaderCell","columnId","sorted","sortDirection","onSort","center","table","isSorted","sortColumn","effectiveSortDirection","handleSortClick","newDirection","textAlign","TableCell","TableEmpty","colSpan","effectiveColSpan","Table","getRowKey","getRowClassName","column","headerProps","row","rowIndex","rowKey","rowClassName","cellContent","cell","accessor","cellProps","Container","horizontalScroll","overflowX","Caption","Row","HeaderCell","Cell","Empty","Loading","TabsContext","activeTabId","setActiveTabId","orientation","useTabs","TabPanels","memo","Tabs","activeTab","defaultActiveTab","internalActiveTabId","setInternalActiveTabId","tabId","List","contextOrientation","finalOrientation","Tab","Panels","ToggleGroupContext","Toggle","pressed","defaultPressed","groupContext","isGrouped","internalPressed","setInternalPressed","isPressed","Array","isArray","updateValue","ToggleGroup","defaultValue","allowDeselect","currentValue","itemValue","valueArray","v","flexDirection","Group","SegmentedControlContext","SegmentedControl","controlDisabled","useSegmentedControl","DragDropContext","draggingItem","dragPosition","dropTargets","Map","sortableItems","registerDropTarget","unregisterDropTarget","registerSortableItem","unregisterSortableItem","startDrag","endDrag","getDragOverTarget","useDragDrop","Draggable","handle","preview","elementRef","isDragging","handleDragStart","nativeEvent","dragHandleProps","onMouseDown","onTouchStart","renderProps","userSelect","offsetHeight","DraggableRenderPropsContext","DraggableWithContext","BaseComponent","rest","Droppable","accept","onDrop","canDrop","isOver","overTarget","handleDrop","updateDropTarget","rect","getBoundingClientRect","isCurrentlyOver","canCurrentlyDrop","SortableItem","item","itemId","direction","updateSortableItem","draggableId","transition","DragDrop","onDragStart","onDragMove","onDragEnd","onDragCancel","setDraggingItem","setDragPosition","dropTargetsRef","sortableItemsRef","dragStartPositionRef","dragTargetRef","draggingRef","lastPositionRef","set","delete","values","x","y","initialX","initialY","MouseEvent","clientX","clientY","touches","coordinates","handleMouseMove","handleTouchMove","passive","handleDragEnd","newX","newY","newPosition","delta","over","touch","finalX","finalY","changedTouches","totalDelta","DragHandle","_Fragment","Fragment","DragOverlay","positionStyles","transform","pointerEvents","transformOrigin","Sortable","items","keyExtractor","onReorder","draggedIndex","setDraggedIndex","findIndex","targetIndex","newItems","draggedItem","splice","containerStyle","isBeingDragged","ContextMenuContext","useContextMenu","ContextMenu","onOpen","enableKeyboard","setIsOpen","setPosition","contextDisabled","onContextMenu","closeOnEscape","menuRef","styleRef","useLayoutEffect","requestAnimationFrame","menuRect","viewportWidth","innerWidth","viewportHeight","innerHeight","max","handleOutsideClick","closeOnSelect","icon","shortcut","jsxs","Separator","SliderContext","useSlider","Slider","min","step","inverted","showMarks","marks","rootRef","parseValues","sort","a","b","internalValues","setInternalValues","currentValues","setIsDragging","activeThumbIndex","thumbPositions","clampedValue","percent","ranges","result","push","start","end","percentToValue","round","valueToPercent","getClosestThumb","positionValue","closestDistance","abs","closestIndex","distance","updateThumb","newValues","handleTrackPointerDown","trackRect","thumbIndex","setPointerCapture","pointerId","handleTrackPointerMove","handleTrackPointerUp","releasePointerCapture","setDragging","directionProps","onKeyDown","focusedThumbIndex","_","querySelector","increment","SliderTrack","onPointerDown","onPointerMove","onPointerUp","SliderRangeComponent","SliderThumb","SliderMark","Object","entries","Number","parent","parentElement","customEvent","PointerEvent","bubbles","cancelable","dispatchEvent","stopPropagation","startPercent","endPercent","rangeStyle","leftPercent","widthPercent","bottomPercent","heightPercent","thumbPosition","valueNow","valueText","thumbStyle","positionPercent","markStyle","marginTop","marginLeft","Track","Range","Thumb","Mark","checked","defaultChecked","indeterminate","required","inputClassName","labelClassName","labelProps","labelPosition","helperText","errorMessage","hasError","uniqueId","substring","inputRef","htmlFor","speed","behavior","pauseOnHover","pauseOnFocus","repeat","duration","reverse","delay","containerRef","contentRef","isPaused","setIsPaused","marqueeId","actualDirection","getAnimationDirection","styleId","styleEl","getElementById","createElement","head","appendChild","keyframes","innerHTML","removeChild","repeatedChildren","marginRight","marginBottom","flexShrink","ariaLive","onMouseEnter","onMouseLeave","onFocus","onBlur","actualDuration","slow","normal","fast","animation","animationPlayState","getAnimationStyle","radioGroup","isWithinGroup","groupName","groupValue","groupOnChange","groupDisabled","groupRequired","finalRequired","finalName","isChecked","thumbClassName","trackClassName","inputProps","internalChecked","setInternalChecked","handleChange","newChecked","descriptionId","clip","clipPath","whiteSpace","WebkitTapHighlightColor","content","showDelay","hideDelay","showOnHover","showOnFocus","interactive","tooltipClassName","uncontrolledIsOpen","setUncontrolledIsOpen","triggerRef","tooltipRef","childRef","showTimeoutRef","hideTimeoutRef","currentPlacement","updatePosition","triggerRect","tooltipRect","spaceTop","spaceRight","spaceBottom","spaceLeft","finalPlacement","split","handleShow","clearTimeout","setTimeout","handleHide","handleTooltipMouseEnter","delayedUpdate","childElement","only","error","childProps","enhancedChild","node","trim","tooltipContent","renderTooltip"],"mappings":"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"}