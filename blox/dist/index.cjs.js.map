{"version":3,"file":"index.cjs.js","sources":["../src/components/Accordion/Accordion.tsx","../src/styles/defaultStyles.ts","../src/components/Drawer/Drawer.tsx","../src/components/Dropdown/Dropdown.tsx","../src/components/Marquee/Marquee.tsx","../src/components/Modal/Modal.tsx","../src/components/Radio/Radio.tsx","../src/components/Table/Table.tsx","../src/components/Tabs/Tabs.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/SegmentedControl/SegmentedControl.tsx","../src/components/DragDrop/DragDropContext.tsx","../src/components/DragDrop/Draggable.tsx","../src/components/DragDrop/Droppable.tsx","../src/components/DragDrop/Sortable.tsx","../src/components/DragDrop/index.ts","../src/components/DragDrop/DragOverlay.tsx","../src/components/ContextMenu/ContextMenu.tsx","../src/components/Slider/Slider.tsx","../src/components/Checkbox/Checkbox.tsx","../src/components/Switch/Switch.tsx"],"sourcesContent":["// Accordion.tsx\nimport React, { createContext, useContext, useState, useCallback, useMemo } from \"react\";\nimport { AccordionProps, AccordionContextType, AccordionItemProps, AccordionButtonProps, AccordionPanelProps, AccordionItemContextType, AccordionComposition } from \"./types\";\n\n// Create context for accordion state\nconst AccordionContext = createContext<AccordionContextType>({\n  activeIndices: [],\n  toggleItem: () => {},\n  isItemActive: () => false,\n});\n\n// Create context for each accordion item\nconst AccordionItemContext = createContext<AccordionItemContextType>({\n  isActive: false,\n  isDisabled: false,\n  index: -1,\n  toggleItem: () => {},\n});\n\n// Hook to use accordion context\nconst useAccordion = () => {\n  const context = useContext(AccordionContext);\n  if (!context) {\n    throw new Error(\"useAccordion must be used within an Accordion component\");\n  }\n  return context;\n};\n\n// Hook to use accordion item context\nconst useAccordionItem = () => {\n  const context = useContext(AccordionItemContext);\n  if (!context) {\n    throw new Error(\"useAccordionItem must be used within an AccordionItem component\");\n  }\n  return context;\n};\n\n// Accordion Item Component\nconst AccordionItem: React.FC<AccordionItemProps> = ({ children, isDisabled = false, index: providedIndex, className = \"\", ...props }) => {\n  const { activeIndices, toggleItem, isItemActive } = useAccordion();\n\n  // If index is not provided, we'll warn but not throw\n  const index = providedIndex ?? -1;\n  if (index === -1) {\n    console.warn(\"AccordionItem: index prop is required for proper functioning\");\n  }\n\n  const isActive = isItemActive(index);\n\n  // Context value for this item\n  const itemContextValue = useMemo(\n    () => ({\n      isActive,\n      isDisabled,\n      index,\n      toggleItem: () => toggleItem(index),\n    }),\n    [isActive, isDisabled, index, toggleItem]\n  );\n\n  return (\n    <AccordionItemContext.Provider value={itemContextValue}>\n      <div\n        className={`blox-accordion-item ${className}`}\n        data-blox-accordion-item=\"\"\n        data-active={isActive ? \"true\" : \"false\"}\n        data-disabled={isDisabled ? \"true\" : \"false\"}\n        {...props}>\n        {children}\n      </div>\n    </AccordionItemContext.Provider>\n  );\n};\n\n// Accordion Button Component\nconst AccordionButton: React.FC<AccordionButtonProps> = ({ children, className = \"\", ...props }) => {\n  const { isActive, isDisabled, toggleItem } = useAccordionItem();\n\n  return (\n    <button\n      className={`blox-accordion-button ${className}`}\n      onClick={() => !isDisabled && toggleItem()}\n      disabled={isDisabled}\n      aria-expanded={isActive}\n      data-blox-accordion-button=\"\"\n      data-active={isActive ? \"true\" : \"false\"}\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      type=\"button\"\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Accordion Panel Component\nconst AccordionPanel: React.FC<AccordionPanelProps> = ({ children, className = \"\", ...props }) => {\n  const { isActive } = useAccordionItem();\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      className={`blox-accordion-panel ${className}`}\n      data-blox-accordion-panel=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Accordion Component\nconst Accordion: React.FC<AccordionProps> & AccordionComposition = ({ children, allowMultiple = false, defaultIndex = [], activeIndices: controlledActiveIndices, onChange, className = \"\", ...props }) => {\n  // Convert single defaultIndex to array\n  const initialIndices = useMemo(() => {\n    if (typeof defaultIndex === \"number\") {\n      return [defaultIndex];\n    }\n    return defaultIndex as number[];\n  }, [defaultIndex]);\n\n  // State for active indices (for uncontrolled usage)\n  const [internalActiveIndices, setInternalActiveIndices] = useState<number[]>(initialIndices);\n\n  // Determine if we're controlled or not\n  const isControlled = controlledActiveIndices !== undefined;\n  const activeIndices = isControlled ? controlledActiveIndices : internalActiveIndices;\n\n  // Toggle accordion item\n  const toggleItem = useCallback(\n    (index: number) => {\n      const updatedIndices = activeIndices.includes(index) ? activeIndices.filter((i) => i !== index) : allowMultiple ? [...activeIndices, index] : [index];\n\n      // Update internal state for uncontrolled usage\n      if (!isControlled) {\n        setInternalActiveIndices(updatedIndices);\n      }\n\n      // Call onChange callback\n      onChange?.(updatedIndices);\n    },\n    [activeIndices, allowMultiple, isControlled, onChange]\n  );\n\n  // Check if an item is active\n  const isItemActive = useCallback(\n    (index: number) => {\n      return activeIndices.includes(index);\n    },\n    [activeIndices]\n  );\n\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      activeIndices,\n      toggleItem,\n      isItemActive,\n    }),\n    [activeIndices, toggleItem, isItemActive]\n  );\n\n  return (\n    <AccordionContext.Provider value={contextValue}>\n      <div\n        className={`blox-accordion ${className}`}\n        data-blox-accordion=\"\"\n        data-allow-multiple={allowMultiple ? \"true\" : \"false\"}\n        {...props}>\n        {React.Children.map(children, (child, index) => {\n          if (!React.isValidElement(child)) return child;\n\n          // Auto-inject index if not provided\n          return React.cloneElement(child as React.ReactElement<AccordionItemProps>, {\n            index: (child as React.ReactElement<AccordionItemProps>).props.index ?? index,\n          });\n        })}\n      </div>\n    </AccordionContext.Provider>\n  );\n};\n\n// Attach sub-components\nAccordion.Item = AccordionItem;\nAccordion.Button = AccordionButton;\nAccordion.Panel = AccordionPanel;\n\nexport default Accordion;\n","export let colors = {\n  primary: \"#007bff\",\n  secondary: \"#6c757d\",\n  success: \"#28a745\",\n  danger: \"#dc3545\",\n  warning: \"#ffc107\",\n  info: \"#17a2b8\",\n  light: \"#f8f9fa\",\n  dark: \"#343a40\",\n  white: \"#ffffff\",\n  black: \"#000000\",\n};\n\nexport let STYLES = {\n  Slider: {\n    thickness: \"4px\",\n    borderRadius: \"9999px\",\n    track: {\n      color: \"#e9ecef\",\n    },\n    range: {\n      color: \"#007bff\",\n    },\n    thumb: {\n      color: \"#007bff\",\n      size: \"16px\",\n      radius: \"9999px\",\n      shadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n    },\n    mark: {\n      color: \"#007bff\",\n      spacing: \"8px\",\n      radius: \"9999px\",\n      fontSize: \"0.75rem\",\n      label: {\n        spacing: \"4px\",\n      },\n    },\n  },\n  Modal: {\n    bgColor: \"#ffffff\",\n    borderRadius: \"4px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n    maxHeight: \"calc(100vh-32px)\",\n    body: {\n      padding: \"16px\",\n    },\n    close: {\n      right: \"16px\",\n      top: \"16px\",\n      color: \"#6c757d\",\n      padding: \"8px\",\n      borderRadius: \"4px\",\n    },\n    header: {\n      border: \"1px solid gray\",\n      padding: \"16px\",\n    },\n    footer: {\n      border: \"1px solid gray\",\n      padding: \"16px\",\n      gap: \"8px\",\n    },\n    title: {\n      fontSize: \"1.25rem\",\n      fontWeight: \"600\",\n      color: \"inherit\",\n    },\n    overlay: {\n      padding: \"16px\",\n      bgColor: \"rgba(0, 0, 0, 0.5)\",\n    },\n    width: {\n      small: \"300px\",\n      medium: \"600px\",\n      large: \"900px\",\n      full: \"100%\",\n    },\n  },\n  DragDrop: {\n    droppable: {\n      bgColor: \"#f8f9fa\",\n      outline: \"2px dashed #007bff\",\n    }\n  },\n  Drawer: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    minWidth: \"300px\",\n    maxWidth: \"600px\",\n    height: \"100%\",\n    backdropColor: \"rgba(0, 0, 0, 0.5)\",\n    backdropBlur: \"0px\",\n    contentBgColor: \"#ffffff\",\n  },\n  Tooltip: {\n    offset: \"8px\",\n  },\n};\n","// Drawer.tsx\nimport React, { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DrawerProps, DrawerComposition } from \"./types\";\nimport { STYLES } from \"@/styles/defaultStyles\";\n\n// Sub-components\nconst DrawerHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    className={`blox-drawer-header ${className}`}\n    data-blox-drawer-header=\"\"\n    {...props}>\n    {children}\n  </header>\n);\n\nconst DrawerBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-drawer-body ${className}`}\n    data-blox-drawer-body=\"\"\n    {...props}>\n    {children}\n  </div>\n);\n\nconst DrawerFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    className={`blox-drawer-footer ${className}`}\n    data-blox-drawer-footer=\"\"\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst DrawerCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    type=\"button\"\n    className={`blox-drawer-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close drawer\"\n    data-blox-drawer-close=\"\"\n    {...props}>\n    {children || \"×\"}\n  </button>\n);\n\nconst Drawer: React.FC<DrawerProps> & DrawerComposition = ({ children, isOpen, onClose, placement = \"right\", minWidth = \"250px\", maxWidth = \"100%\", minHeight = \"250px\", maxHeight = \"100%\", closeOnEsc = true, closeOnOutsideClick = true, contentClassName = \"\", backdropClassName = \"\", zIndex = 1000, trapFocus = true, usePortal = true, showCloseButton = true, animated = true, lockScroll = true, renderCloseButton, closeButton, role = \"dialog\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, id, style, className = \"\", ...props }) => {\n  const drawerRef = useRef<HTMLDivElement>(null);\n  const firstFocusableRef = useRef<HTMLDivElement>(null);\n\n  // Generate a unique ID for the drawer if not provided\n  const drawerId = useRef(id || `blox-drawer-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle body scroll locking\n  useEffect(() => {\n    if (isOpen && lockScroll) {\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return () => {\n      if (lockScroll) {\n        document.body.style.overflow = \"\";\n      }\n    };\n  }, [isOpen, lockScroll]);\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap management\n  useEffect(() => {\n    if (isOpen && trapFocus && drawerRef.current) {\n      // Focus the first focusable element\n      firstFocusableRef.current?.focus();\n\n      const handleTabKey = (event: KeyboardEvent) => {\n        if (event.key !== \"Tab\" || !drawerRef.current) return;\n\n        const focusableElements = drawerRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n        if (focusableElements.length === 0) return;\n\n        const firstElement = focusableElements[0] as HTMLElement;\n        const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n        // If shift+tab and on first element, move to last\n        if (event.shiftKey && document.activeElement === firstElement) {\n          lastElement.focus();\n          event.preventDefault();\n        }\n        // If tab and on last element, move to first\n        else if (!event.shiftKey && document.activeElement === lastElement) {\n          firstElement.focus();\n          event.preventDefault();\n        }\n      };\n\n      document.addEventListener(\"keydown\", handleTabKey);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleTabKey);\n      };\n    }\n  }, [isOpen, trapFocus]);\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (closeOnOutsideClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Calculate styles based on placement\n  const getDrawerStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      ...style,\n      position: \"absolute\",\n      backgroundColor: `var(--blox-drawer-content-bg-color, ${STYLES.Drawer.contentBgColor})`,\n    };\n\n    // Add size constraints based on placement\n    if (placement === \"left\" || placement === \"right\") {\n      baseStyles.top = `var(--blox-drawer-top, ${STYLES.Drawer.top})`;\n      baseStyles.bottom = `var(--blox-drawer-bottom, ${STYLES.Drawer.bottom})`;\n      baseStyles.minWidth = minWidth;\n      baseStyles.maxWidth = maxWidth;\n      baseStyles.height = `100%`;\n\n      if (placement === `left`) {\n        baseStyles.left = `var(--blox-drawer-left, ${STYLES.Drawer.left})`;\n      } else {\n        baseStyles.right = `var(--blox-drawer-right, ${STYLES.Drawer.right})`;\n      }\n    } else {\n      baseStyles.left = `var(--blox-drawer-left, ${STYLES.Drawer.left})`;\n      baseStyles.right = `var(--blox-drawer-right, ${STYLES.Drawer.right})`;\n      baseStyles.minHeight = minHeight;\n      baseStyles.maxHeight = maxHeight;\n      baseStyles.width = `100%`;\n\n      if (placement === `top`) {\n        baseStyles.top = `var(--blox-drawer-top, ${STYLES.Drawer.top})`;\n      } else {\n        baseStyles.bottom = `var(--blox-drawer-bottom, ${STYLES.Drawer.bottom})`;\n      }\n    }\n\n    return baseStyles;\n  };\n\n  // Don't render anything if drawer is not open\n  if (!isOpen) return null;\n\n  const drawerContent = (\n    <div\n      className={`blox-drawer-backdrop ${backdropClassName} ${animated ? \"blox-drawer-animated\" : \"\"}`}\n      data-blox-drawer-backdrop=\"\"\n      onClick={handleBackdropClick}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        zIndex: zIndex,\n        backdropFilter: `var(--blox-drawer-backdrop-blur, ${STYLES.Drawer.backdropBlur})`,\n        backgroundColor: `var(--blox-drawer-backdrop-color, ${STYLES.Drawer.backdropColor})`,\n      }}>\n      <div\n        ref={drawerRef}\n        className={`blox-drawer-content ${contentClassName} ${className}`}\n        data-blox-drawer-content=\"\"\n        data-blox-drawer-placement={placement}\n        style={getDrawerStyles()}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        id={drawerId}\n        {...props}>\n        {/* Hidden element for initial focus */}\n        <div\n          ref={firstFocusableRef}\n          tabIndex={-1}\n          style={{ outline: \"none\" }}\n        />\n\n        {showCloseButton && (renderCloseButton ? renderCloseButton({ onClick: onClose }) : <DrawerCloseButton onClose={onClose}>{closeButton}</DrawerCloseButton>)}\n\n        {children}\n      </div>\n    </div>\n  );\n\n  return usePortal && typeof document !== \"undefined\" ? createPortal(drawerContent, document.body) : drawerContent;\n};\n\n// Attach sub-components\nDrawer.Header = DrawerHeader;\nDrawer.Body = DrawerBody;\nDrawer.Footer = DrawerFooter;\nDrawer.CloseButton = DrawerCloseButton;\n\nexport default Drawer;\n","// Dropdown.tsx\nimport React, { useRef, useState, useEffect, createContext, useContext } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DropdownProps, DropdownTriggerProps, DropdownMenuProps, DropdownItemProps, DropdownContextValue, DropdownComposition } from \"./types\";\n\n// Create context for dropdown state\nconst DropdownContext = createContext<DropdownContextValue>({\n  isOpen: false,\n  toggle: () => {},\n  open: () => {},\n  close: () => {},\n  isDisabled: false,\n});\n\n// Hook to use dropdown context\nconst useDropdown = () => {\n  const context = useContext(DropdownContext);\n  if (!context) {\n    throw new Error(\"useDropdown must be used within a Dropdown component\");\n  }\n  return context;\n};\n\n// Dropdown Trigger Component\nconst DropdownTrigger: React.FC<DropdownTriggerProps> = ({ children, disabled, className = \"\", ...props }) => {\n  const { isOpen, toggle, isDisabled } = useDropdown();\n  const finalDisabled = disabled || isDisabled;\n\n  return (\n    <button\n      type=\"button\"\n      className={`blox-dropdown-trigger ${className}`}\n      onClick={toggle}\n      disabled={finalDisabled}\n      aria-haspopup=\"true\"\n      aria-expanded={isOpen}\n      data-blox-dropdown-trigger=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Dropdown Menu Component\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({ children, className = \"\", ...props }) => {\n  const { isOpen } = useDropdown();\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className={`blox-dropdown-menu ${className}`}\n      data-blox-dropdown-menu=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      role=\"menu\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dropdown Item Component\nconst DropdownItem: React.FC<DropdownItemProps> = ({ children, value, disabled = false, selected, onSelect, className = \"\", ...props }) => {\n  const { onValueChange, close, selectedValue } = useDropdown();\n  const isSelected = selected !== undefined ? selected : selectedValue === value;\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onValueChange) {\n      onValueChange(value);\n    }\n\n    close();\n  };\n\n  return (\n    <div\n      className={`blox-dropdown-item ${className}`}\n      onClick={handleClick}\n      data-blox-dropdown-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-selected={isSelected ? \"true\" : \"false\"}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Dropdown Component\nconst Dropdown: React.FC<DropdownProps> & DropdownComposition = ({ isOpen: controlledIsOpen, onOpenChange, value, onChange, disabled = false, children, placement = \"bottom-start\", className = \"\", width, onClickOutside, name, ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalIsOpen, setInternalIsOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState<string | number | undefined>(value);\n\n  // Reference to the dropdown container\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  // Determine if we're in controlled mode\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : internalIsOpen;\n\n  // Update internal value when value prop changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setInternalValue(value);\n    }\n  }, [value]);\n\n  // Toggle dropdown\n  const toggle = () => {\n    if (disabled) return;\n\n    const newState = !isOpen;\n\n    if (!isControlled) {\n      setInternalIsOpen(newState);\n    }\n\n    onOpenChange?.(newState);\n  };\n\n  // Open dropdown\n  const open = () => {\n    if (disabled || isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(true);\n    }\n\n    onOpenChange?.(true);\n  };\n\n  // Close dropdown\n  const close = () => {\n    if (!isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(false);\n    }\n\n    onOpenChange?.(false);\n  };\n\n  // Handle value change\n  const handleValueChange = (newValue: string | number) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(newValue);\n    } else {\n      setInternalValue(newValue);\n    }\n  };\n\n  // Handle click outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node) && isOpen) {\n        if (onClickOutside) {\n          onClickOutside();\n        } else {\n          close();\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen, onClickOutside]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    toggle,\n    open,\n    close,\n    selectedValue: value !== undefined ? value : internalValue,\n    onValueChange: handleValueChange,\n    isDisabled: disabled,\n  };\n\n  // Calculate width style\n  const widthStyle = width ? { width: width === true ? \"100%\" : width } : {};\n\n  return (\n    <DropdownContext.Provider value={contextValue}>\n      <div\n        ref={dropdownRef}\n        className={`blox-dropdown ${className}`}\n        data-blox-dropdown=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-placement={placement}\n        style={widthStyle}\n        {...props}>\n        {children}\n\n        {/* Hidden input for form submissions */}\n        {name && (\n          <input\n            type=\"hidden\"\n            name={name}\n            value={value !== undefined ? value : internalValue || \"\"}\n          />\n        )}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\n// Attach sub-components\nDropdown.Trigger = DropdownTrigger;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\n\nexport default Dropdown;\n","// Marquee.tsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport { MarqueeProps } from './types';\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  children,\n  direction = 'left',\n  speed = 'normal',\n  behavior = 'scroll',\n  pauseOnHover = true,\n  pauseOnFocus = true,\n  repeat = 2,\n  gap = 40,\n  duration,\n  reverse = false,\n  delay = 0,\n  className = '',\n  ...props\n}) => {\n  // Use refs to store references to DOM elements\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  \n  // State to track whether the animation is paused\n  const [isPaused, setIsPaused] = useState(false);\n  \n  // Generate a unique ID for this marquee instance (for CSS animations)\n  const marqueeId = useRef(`marquee-${Math.random().toString(36).substr(2, 9)}`);\n  \n  // Calculate the actual duration based on speed if not explicitly provided\n  const calculateDuration = () => {\n    if (duration !== undefined) return duration;\n    \n    // Speed factors in seconds\n    const speedFactors = {\n      slow: 30,\n      normal: 20,\n      fast: 10,\n    };\n    \n    return speedFactors[speed] || 20;\n  };\n  \n  // Determine the animation direction\n  const getAnimationDirection = () => {\n    if (reverse) {\n      switch (direction) {\n        case 'left': return 'right';\n        case 'right': return 'left';\n        case 'up': return 'down';\n        case 'down': return 'up';\n        default: return 'right';\n      }\n    }\n    return direction;\n  };\n  \n  // Create the animation keyframes based on direction\n  useEffect(() => {\n    const actualDirection = getAnimationDirection();\n    \n    // Only create keyframes once for this instance\n    const styleId = `style-${marqueeId.current}`;\n    let styleEl = document.getElementById(styleId) as HTMLStyleElement;\n    \n    if (!styleEl) {\n      styleEl = document.createElement('style');\n      styleEl.id = styleId;\n      document.head.appendChild(styleEl);\n    }\n    \n    // Define keyframes based on direction\n    let keyframes = '';\n    switch (actualDirection) {\n      case 'left':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(0); }\n            100% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'right':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateX(0); }\n          }\n        `;\n        break;\n      case 'up':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(0); }\n            100% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'down':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateY(0); }\n          }\n        `;\n        break;\n    }\n    \n    styleEl.innerHTML = keyframes;\n    \n    // Clean up the style element when component unmounts\n    return () => {\n      if (styleEl && document.head.contains(styleEl)) {\n        document.head.removeChild(styleEl);\n      }\n    };\n  }, [direction, gap, reverse]);\n  \n  // Create the animation style\n  const getAnimationStyle = () => {\n    const actualDuration = calculateDuration();\n    const animationName = marqueeId.current;\n    const animationIterationCount = 'infinite';\n    const animationDirection = behavior === 'alternate' ? 'alternate' : 'normal';\n    \n    return {\n      animation: `${animationName} ${actualDuration}s ${animationDirection} linear ${delay}s ${animationIterationCount}`,\n      animationPlayState: isPaused ? 'paused' : 'running',\n    };\n  };\n  \n  // Create array of repeated children\n  const repeatedChildren = [];\n  for (let i = 0; i < repeat; i++) {\n    repeatedChildren.push(\n      <div\n        key={i}\n        className=\"blox-marquee-item\"\n        data-blox-marquee-item=\"\"\n        style={{\n          ...(direction === 'left' || direction === 'right' \n            ? { marginRight: `${gap}px` } \n            : { marginBottom: `${gap}px` }),\n          flexShrink: 0,\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n  \n  // Event handlers for pausing\n  const handleMouseEnter = () => pauseOnHover && setIsPaused(true);\n  const handleMouseLeave = () => pauseOnHover && setIsPaused(false);\n  const handleFocus = () => pauseOnFocus && setIsPaused(true);\n  const handleBlur = () => pauseOnFocus && setIsPaused(false);\n  \n  // ARIA live settings based on behavior\n  const ariaLive = behavior === 'scroll' ? 'off' : 'polite';\n  \n  return (\n    <div\n      className={`blox-marquee ${className}`}\n      ref={containerRef}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      role=\"marquee\"\n      aria-live={ariaLive}\n      data-blox-marquee=\"\"\n      data-direction={direction}\n      data-behavior={behavior}\n      data-paused={isPaused ? 'true' : 'false'}\n      style={{\n        overflow: 'hidden',\n      }}\n      {...props}\n    >\n      <div\n        ref={contentRef}\n        className=\"blox-marquee-content\"\n        data-blox-marquee-content=\"\"\n        style={{\n          display: 'flex',\n          flexDirection: direction === 'left' || direction === 'right' ? 'row' : 'column',\n          ...getAnimationStyle(),\n        }}\n      >\n        {repeatedChildren}\n      </div>\n    </div>\n  );\n};\n\nexport default Marquee;","// Modal.tsx\nimport React, { useRef, useEffect, Children } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ModalProps, ModalComposition } from \"./types\";\nimport { STYLES } from \"@/styles/defaultStyles\";\n\n// Sub-components\nconst ModalContent: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-modal-content ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    data-blox-modal-header=\"\"\n    className={`blox-modal-header ${className}`}\n    {...props}>\n    {children}\n  </header>\n);\n\nconst ModalBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    data-blox-modal-body=\"\"\n    className={`blox-modal-body ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    data-blox-modal-footer=\"\"\n    className={`blox-modal-footer ${className}`}\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst ModalCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  children?: React.ReactNode;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    data-blox-modal-close-button=\"\"\n    type=\"button\"\n    className={`blox-modal-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close\"\n    {...props}>\n    {children || \"×\"}\n  </button>\n);\n\nconst Modal: React.FC<ModalProps> & ModalComposition = ({ children, isOpen, onClose, size = \"medium\", title, footer, closeOnEsc = true, closeOnOverlayClick = true, overlayClassName = \"\", contentClassName = \"\", ariaLabelledby, ariaDescribedby, zIndex = 1050, isCentered = true, blockScroll = true, showCloseButton = true, initialFocusRef, animated = true, ...props }) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  // Generate a unique ID for the modal\n  const modalId = useRef(`blox-modal-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap and management\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Save the element that had focus before opening the modal\n    previousFocusRef.current = document.activeElement as HTMLElement;\n\n    // Set focus to the specified element or the modal itself\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (modalRef.current) {\n      modalRef.current.focus();\n    }\n\n    const handleFocusTrap = (event: KeyboardEvent) => {\n      if (!modalRef.current || event.key !== \"Tab\") return;\n\n      const focusableElements = modalRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n      if (focusableElements.length === 0) return;\n\n      const firstElement = focusableElements[0] as HTMLElement;\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n      // If shift+tab and on first element, move to last\n      if (event.shiftKey && document.activeElement === firstElement) {\n        lastElement.focus();\n        event.preventDefault();\n      }\n      // If tab and on last element, move to first\n      else if (!event.shiftKey && document.activeElement === lastElement) {\n        firstElement.focus();\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleFocusTrap);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleFocusTrap);\n\n      // Restore focus when modal closes\n      if (previousFocusRef.current) {\n        previousFocusRef.current.focus();\n      }\n    };\n  }, [isOpen, initialFocusRef]);\n\n  // Prevent body scroll when modal is open\n  useEffect(() => {\n    if (!isOpen || !blockScroll) return;\n\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, [isOpen, blockScroll]);\n\n  const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (closeOnOverlayClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Don't render anything if modal is not open\n  if (!isOpen) return null;\n\n  // Size styles based on size prop\n  const getSizeStyle = () => {\n    switch (size) {\n      case `small`:\n        return { width: `var(--blox-modal-width-small, ${STYLES.Modal.width.small})` };\n      case `medium`:\n        return { width: `var(--blox-modal-width-medium, ${STYLES.Modal.width.medium})` };\n      case `large`:\n        return { width: `var(--blox-modal-width-large, ${STYLES.Modal.width.large})` };\n      case `full`:\n        return { width: `var(--blox-modal-width-full, ${STYLES.Modal.width.full})` };\n      default:\n        return { width: `var(--blox-modal-width-medium, ${STYLES.Modal.width.medium})` };\n    }\n  };\n\n  // Animation classes\n  const getAnimationClass = () => {\n    return animated ? \"blox-modal-animated\" : \"\";\n  };\n\n  // Create the modal element\n  const modalElement = (\n    <div\n      data-blox-modal-overlay=\"\"\n      className={`blox-modal-overlay ${getAnimationClass()} ${overlayClassName}`}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: isCentered ? \"center\" : \"flex-start\",\n        justifyContent: \"center\",\n        backgroundColor: `var(--blox-modal-overlay-bg, ${STYLES.Modal.overlay.bgColor})`,\n        zIndex: zIndex,\n        padding: `var(--blox-modal-overlay-padding, ${STYLES.Modal.overlay.padding})`,\n        overflow: \"auto\",\n      }}\n      onClick={handleOverlayClick}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby={ariaLabelledby || (title ? `${modalId}-title` : undefined)}\n      aria-describedby={ariaDescribedby}\n      {...props}>\n      <div\n        ref={modalRef}\n        className={`blox-modal ${getAnimationClass()} ${contentClassName}`}\n        style={{\n          position: \"relative\",\n          backgroundColor: `var(--blox-modal-bg, ${STYLES.Modal.bgColor})`,\n          borderRadius: `var(--blox-modal-border-radius, ${STYLES.Modal.borderRadius})`,\n          boxShadow: `var(--blox-modal-box-shadow, ${STYLES.Modal.boxShadow})`,\n          maxWidth: \"100%\",\n          maxHeight: `var(--blox-modal-max-height, ${STYLES.Modal.maxHeight})`,\n          overflow: \"auto\",\n          outline: \"none\",\n          ...getSizeStyle(),\n        }}\n        tabIndex={-1}>\n        {/* Modal header */}\n        {(title || showCloseButton) && (\n          <div\n            className=\"blox-modal-header\"\n            style={{\n              padding: `var(--blox-modal-header-padding, ${STYLES.Modal.header.padding})`,\n              borderBottom: title ? `var(--blox-modal-header-border, ${STYLES.Modal.header.border})` : \"none\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}>\n            {title && (\n              <h3\n                id={`${modalId}-title`}\n                className=\"blox-modal-title\"\n                style={{\n                  margin: 0,\n                  fontSize: `var(--blox-modal-title-font-size, ${STYLES.Modal.title.fontSize})`,\n                  fontWeight: `var(--blox-modal-title-font-weight, ${STYLES.Modal.title.fontWeight})`,\n                  color: `var(--blox-modal-title-color, ${STYLES.Modal.title.color})`,\n                }}>\n                {title}\n              </h3>\n            )}\n            {showCloseButton && (\n              <ModalCloseButton\n                onClose={onClose}\n                style={{\n                  position: title ? `relative` : `absolute`,\n                  right: title ? \"0\" : `var(--blox-modal-close-button-right, ${STYLES.Modal.close.right})`,\n                  top: title ? `0` : `var(--blox-modal-close-button-top,  ${STYLES.Modal.close.top})`,\n                  background: `transparent`,\n                  border: `none`,\n                  cursor: `pointer`,\n                  padding: `var(--blox-modal-close-button-padding,  ${STYLES.Modal.close.padding})`,\n                  color: `var(--blox-modal-close-button-color,  ${STYLES.Modal.close.color})`,\n                  borderRadius: `var(--blox-modal-close-button-border-radius,  ${STYLES.Modal.close.borderRadius})`,\n                }}\n              />\n            )}\n          </div>\n        )}\n\n        {/* Modal body */}\n        <div\n          className=\"blox-modal-body\"\n          style={{\n            padding: `var(--blox-modal-body-padding,  ${STYLES.Modal.body.padding})`,\n          }}>\n          {children}\n        </div>\n\n        {/* Modal footer */}\n        {footer && (\n          <div\n            className=\"blox-modal-footer\"\n            style={{\n              padding: `var(--blox-modal-footer-padding, ${STYLES.Modal.footer.padding})`,\n              borderTop: `var(--blox-modal-footer-border, ${STYLES.Modal.footer.border})`,\n              display: `flex`,\n              justifyContent: `flex-end`,\n              gap: `var(--blox-modal-footer-gap, ${STYLES.Modal.footer.gap})`,\n            }}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return createPortal(modalElement, document.body);\n};\n\n// Attach sub-components\nModal.Content = ModalContent;\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\nModal.CloseButton = ModalCloseButton;\n\nexport default Modal;\n","// Radio.tsx\nimport React, { useRef, useContext, createContext, useMemo } from \"react\";\nimport { RadioProps, RadioGroupProps } from \"./types\";\n\n// Create context for radio group\ninterface RadioGroupContextType {\n  name?: string;\n  value?: string;\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextType>({});\n\n// Main Radio component\nconst Radio: React.FC<RadioProps> = ({ label, value, checked, defaultChecked, onChange, disabled = false, required = false, className = \"\", inputClassName = \"\", labelClassName = \"\", id, name, labelProps = {}, labelPosition = \"right\", helperText, errorMessage, hasError = false, ...props }) => {\n  // Get values from radio group context if available\n  const radioGroup = useContext(RadioGroupContext);\n\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-radio-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // Use group props if available, otherwise use individual props\n  const isWithinGroup = !!radioGroup.name;\n  const groupName = radioGroup.name;\n  const groupValue = radioGroup.value;\n  const groupOnChange = radioGroup.onChange;\n  const groupDisabled = radioGroup.disabled;\n  const groupRequired = radioGroup.required;\n\n  // Determine final props\n  const finalDisabled = disabled || (isWithinGroup ? groupDisabled : false);\n  const finalRequired = required || (isWithinGroup ? groupRequired : false);\n  const finalName = isWithinGroup ? groupName : name;\n\n  // Determine whether the radio is checked (for controlled usage within a group)\n  const isChecked = isWithinGroup ? groupValue === value : checked;\n\n  // Determine whether we're controlled or uncontrolled\n  const isControlled = isWithinGroup ? groupValue !== undefined : checked !== undefined;\n\n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (finalDisabled) return;\n\n    if (isWithinGroup) {\n      groupOnChange?.(value, event);\n    } else {\n      onChange?.(value, event);\n    }\n  };\n\n  return (\n    <div\n      className={`blox-radio-container ${className}`}\n      data-blox-radio=\"\"\n      data-checked={isControlled ? (isChecked ? \"true\" : \"false\") : undefined}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={finalRequired ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <input\n        type=\"radio\"\n        id={uniqueId}\n        name={finalName}\n        value={value}\n        checked={isChecked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={finalDisabled}\n        required={finalRequired}\n        className={`blox-radio-input ${inputClassName}`}\n        data-blox-radio-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={helperText || errorMessage ? `${uniqueId}-description` : undefined}\n        {...props}\n      />\n\n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-radio-label ${labelClassName}`}\n          data-blox-radio-label=\"\"\n          {...labelProps}>\n          {label}\n        </label>\n      )}\n\n      {(helperText || errorMessage) && (\n        <div\n          id={`${uniqueId}-description`}\n          className={`blox-radio-description ${hasError ? \"blox-radio-error\" : \"\"}`}\n          data-blox-radio-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Radio Group Component\nconst RadioGroup: React.FC<RadioGroupProps> = ({ children, name, value, defaultValue, onChange, disabled = false, required = false, direction = \"vertical\", className = \"\", label, helperText, errorMessage, hasError = false, ...props }) => {\n  // Handle change event in the group\n  const handleChange = (radioValue: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(radioValue);\n  };\n\n  // Create context value\n  const contextValue = useMemo(\n    () => ({\n      name,\n      value,\n      onChange: handleChange,\n      disabled,\n      required,\n    }),\n    [name, value, disabled, required]\n  );\n\n  // Generate a unique ID for the group\n  const groupId = useRef(`blox-radio-group-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  return (\n    <RadioGroupContext.Provider value={contextValue}>\n      <div\n        className={`blox-radio-group ${className}`}\n        data-blox-radio-group=\"\"\n        data-direction={direction}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-error={hasError ? \"true\" : \"false\"}\n        role=\"radiogroup\"\n        aria-labelledby={label ? `${groupId}-label` : undefined}\n        aria-describedby={helperText || errorMessage ? `${groupId}-description` : undefined}\n        {...props}>\n        {label && (\n          <div\n            id={`${groupId}-label`}\n            className=\"blox-radio-group-label\"\n            data-blox-radio-group-label=\"\">\n            {label}\n          </div>\n        )}\n\n        <div\n          className=\"blox-radio-group-items\"\n          data-blox-radio-group-items=\"\">\n          {children}\n        </div>\n\n        {(helperText || errorMessage) && (\n          <div\n            id={`${groupId}-description`}\n            className={`blox-radio-group-description ${hasError ? \"blox-radio-group-error\" : \"\"}`}\n            data-blox-radio-group-description=\"\"\n            data-error={hasError ? \"true\" : \"false\"}>\n            {hasError ? errorMessage : helperText}\n          </div>\n        )}\n      </div>\n    </RadioGroupContext.Provider>\n  );\n};\nexport default Radio;\n","// Table.tsx\nimport React, { createContext, useContext, useCallback, useMemo } from \"react\";\nimport { TableProps, TableHeaderProps, TableBodyProps, TableRowProps, TableHeaderCellProps, TableCellProps, TableCaptionProps, TableContainerProps, TableEmptyStateProps, TableLoadingStateProps, TableContextValue, TableColumn, SortDirection, TableComposition } from \"./types\";\n\n// Create context for table state\nconst TableContext = createContext<TableContextValue<any>>({\n  data: [],\n  columns: [],\n  autoGenerateRowKey: true,\n});\n\n// Hook to use table context\nexport const useTable = () => {\n  const context = useContext(TableContext);\n  if (!context) {\n    throw new Error(\"useTable must be used within a Table component\");\n  }\n  return context;\n};\n\n// Table Container Component\nconst TableContainer: React.FC<TableContainerProps> = ({ children, horizontalScroll = false, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-table-container ${className}`}\n      data-blox-table-container=\"\"\n      data-horizontal-scroll={horizontalScroll}\n      style={{\n        overflowX: horizontalScroll ? \"auto\" : undefined,\n        width: \"100%\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Table Caption Component\nconst TableCaption: React.FC<TableCaptionProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <caption\n      className={`blox-table-caption ${className}`}\n      data-blox-table-caption=\"\"\n      {...props}>\n      {children}\n    </caption>\n  );\n};\n\n// Table Header Component\nconst TableHeader: React.FC<TableHeaderProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <thead\n      className={`blox-table-header ${className}`}\n      data-blox-table-header=\"\"\n      {...props}>\n      {children}\n    </thead>\n  );\n};\n\n// Table Body Component\nconst TableBody: React.FC<TableBodyProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tbody\n      className={`blox-table-body ${className}`}\n      data-blox-table-body=\"\"\n      {...props}>\n      {children}\n    </tbody>\n  );\n};\n\n// Table Row Component\nconst TableRow: React.FC<TableRowProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tr\n      className={`blox-table-row ${className}`}\n      data-blox-table-row=\"\"\n      {...props}>\n      {children}\n    </tr>\n  );\n};\n\n// Table Header Cell Component\nconst TableHeaderCell: React.FC<TableHeaderCellProps> = ({ children, columnId, sortable = false, sorted = false, sortDirection = \"none\", onSort, center = false, width, className = \"\", style, ...props }) => {\n  // Internal props for the context version\n  const table = useContext(TableContext);\n\n  // Determine if this column is sorted (when used within Table)\n  const isSorted = sorted || (columnId && table.sortColumn === columnId);\n  const effectiveSortDirection = isSorted ? sortDirection || table.sortDirection || \"none\" : \"none\";\n\n  // Handle sort click\n  const handleSortClick = useCallback(() => {\n    if (!sortable) return;\n\n    if (onSort && columnId) {\n      onSort(columnId);\n    } else if (table.onSort && columnId) {\n      let newDirection: SortDirection = \"asc\";\n\n      if (columnId === table.sortColumn) {\n        if (table.sortDirection === \"asc\") {\n          newDirection = \"desc\";\n        } else if (table.sortDirection === \"desc\") {\n          newDirection = \"none\";\n        }\n      }\n\n      table.onSort(columnId, newDirection);\n    }\n  }, [sortable, onSort, columnId, table]);\n\n  return (\n    <th\n      className={`blox-table-header-cell ${className}`}\n      data-blox-table-header-cell=\"\"\n      data-sortable={sortable}\n      data-sorted={isSorted}\n      data-sort-direction={effectiveSortDirection}\n      data-center={center}\n      onClick={sortable ? handleSortClick : undefined}\n      style={{\n        ...(width ? { width } : {}),\n        ...(center ? { textAlign: \"center\" } : {}),\n        cursor: sortable ? \"pointer\" : undefined,\n        ...style,\n      }}\n      {...props}>\n      {children}\n      {sortable && (\n        <span\n          className=\"blox-table-sort-icon\"\n          data-blox-table-sort-icon=\"\">\n          {effectiveSortDirection === \"asc\" && \"▲\"}\n          {effectiveSortDirection === \"desc\" && \"▼\"}\n          {effectiveSortDirection === \"none\" && \"⇅\"}\n        </span>\n      )}\n    </th>\n  );\n};\n\n// Table Cell Component\nconst TableCell: React.FC<TableCellProps> = ({ children, columnId, center = false, className = \"\", style, ...props }) => {\n  return (\n    <td\n      className={`blox-table-cell ${className}`}\n      data-blox-table-cell=\"\"\n      data-column-id={columnId}\n      data-center={center}\n      style={{\n        ...(center ? { textAlign: \"center\" } : {}),\n        ...style,\n      }}\n      {...props}>\n      {children}\n    </td>\n  );\n};\n\n// Table Empty State Component\nconst TableEmpty: React.FC<TableEmptyStateProps> = ({ children = \"No data available\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-empty ${className}`}\n      data-blox-table-empty=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-empty-cell\"\n        data-blox-table-empty-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Table Loading State Component\nconst TableLoading: React.FC<TableLoadingStateProps> = ({ children = \"Loading...\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-loading ${className}`}\n      data-blox-table-loading=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-loading-cell\"\n        data-blox-table-loading-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Main Table Component\nconst Table = <T extends Record<string, any> = any>({ data = [], columns = [], sortColumn, sortDirection = \"none\", onSort, autoGenerateRowKey = true, getRowKey, getRowClassName, children, className = \"\", ...props }: TableProps<T> & { children?: React.ReactNode }) => {\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      data,\n      columns,\n      sortColumn,\n      sortDirection,\n      onSort,\n      autoGenerateRowKey,\n      getRowKey,\n      getRowClassName,\n    }),\n    [data, columns, sortColumn, sortDirection, onSort, autoGenerateRowKey, getRowKey, getRowClassName]\n  );\n\n  // Render function for compositional usage vs. declarative\n  const renderContent = () => {\n    // If children are provided, use compositional pattern\n    if (children) {\n      return children;\n    }\n\n    // Otherwise, use declarative pattern with columns and data\n    return (\n      <>\n        <TableHeader>\n          <TableRow>\n            {columns.map((column) => (\n              <TableHeaderCell\n                key={column.id}\n                columnId={column.id}\n                sortable={column.sortable}\n                center={column.center}\n                width={column.width}\n                {...column.headerProps}>\n                {column.header}\n              </TableHeaderCell>\n            ))}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.length === 0 ? (\n            <TableEmpty colSpan={columns.length} />\n          ) : (\n            data.map((row, rowIndex) => {\n              const rowKey = getRowKey ? getRowKey(row, rowIndex) : autoGenerateRowKey ? `row-${rowIndex}` : undefined;\n\n              const rowClassName = getRowClassName ? getRowClassName(row, rowIndex) : \"\";\n\n              return (\n                <TableRow\n                  key={rowKey}\n                  className={rowClassName}>\n                  {columns.map((column) => {\n                    // Get cell content\n                    let cellContent;\n                    if (column.cell) {\n                      const value = column.accessor ? column.accessor(row, rowIndex) : row[column.id];\n                      cellContent = column.cell(value, row, rowIndex);\n                    } else if (column.accessor) {\n                      cellContent = column.accessor(row, rowIndex);\n                    } else {\n                      cellContent = row[column.id];\n                    }\n\n                    return (\n                      <TableCell\n                        key={`${rowKey}-${column.id}`}\n                        columnId={column.id}\n                        center={column.center}\n                        {...column.cellProps}>\n                        {cellContent}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })\n          )}\n        </TableBody>\n      </>\n    );\n  };\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <table\n        className={`blox-table ${className}`}\n        data-blox-table=\"\"\n        {...props}>\n        {renderContent()}\n      </table>\n    </TableContext.Provider>\n  );\n};\n\n// Attach sub-components\nTable.Container = TableContainer;\nTable.Caption = TableCaption;\nTable.Header = TableHeader;\nTable.Body = TableBody;\nTable.Row = TableRow;\nTable.HeaderCell = TableHeaderCell;\nTable.Cell = TableCell;\nTable.Empty = TableEmpty;\nTable.Loading = TableLoading;\n\nexport default Table;\n","// Tabs.tsx\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { TabsProps, TabListProps, TabProps, TabPanelsProps, TabPanelProps, TabsContextType, TabsComposition } from \"./types\";\n\n// Create context for tabs state\nconst TabsContext = createContext<TabsContextType>({\n  activeTabId: \"\",\n  setActiveTabId: () => {},\n  orientation: \"horizontal\",\n  animated: true,\n});\n\n// Hook to use tabs context\nconst useTabs = () => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"Tabs compound components must be used within a Tabs component\");\n  }\n  return context;\n};\n\n// TabList Component\nconst TabList: React.FC<TabListProps> = ({ children, orientation, className = \"\", ...props }) => {\n  const { orientation: contextOrientation } = useTabs();\n  const finalOrientation = orientation || contextOrientation;\n\n  return (\n    <div\n      className={`blox-tab-list ${className}`}\n      role=\"tablist\"\n      aria-orientation={finalOrientation}\n      data-blox-tab-list=\"\"\n      data-orientation={finalOrientation}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Tab Component\nconst Tab: React.FC<TabProps> = ({ id, children, disabled = false, className = \"\", ...props }) => {\n  const { activeTabId, setActiveTabId } = useTabs();\n  const isActive = activeTabId === id;\n\n  const handleClick = () => {\n    if (!disabled) {\n      setActiveTabId(id);\n    }\n  };\n\n  return (\n    <button\n      id={`blox-tab-${id}`}\n      role=\"tab\"\n      aria-selected={isActive}\n      aria-controls={`blox-tabpanel-${id}`}\n      tabIndex={isActive ? 0 : -1}\n      disabled={disabled}\n      onClick={handleClick}\n      className={`blox-tab ${className}`}\n      data-blox-tab=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// TabPanels Component\nconst TabPanels: React.FC<TabPanelsProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-tab-panels ${className}`}\n      data-blox-tab-panels=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// TabPanel Component\nconst TabPanel: React.FC<TabPanelProps> = ({ tabId, children, className = \"\", ...props }) => {\n  const { activeTabId, animated } = useTabs();\n  const isActive = activeTabId === tabId;\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      id={`blox-tabpanel-${tabId}`}\n      role=\"tabpanel\"\n      aria-labelledby={`blox-tab-${tabId}`}\n      className={`blox-tab-panel ${className}`}\n      data-blox-tab-panel=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-animated={animated ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Tabs Component\nconst Tabs: React.FC<TabsProps> & TabsComposition = ({ activeTab, defaultActiveTab, onChange, orientation = \"horizontal\", animated = true, children, className = \"\", ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalActiveTabId, setInternalActiveTabId] = useState<string>(() => {\n    // Try to find the first tab id from children if no default or active tab is provided\n    if (defaultActiveTab) return defaultActiveTab;\n\n    // This is just a fallback, preferably the user should provide defaultActiveTab\n    return \"\";\n  });\n\n  // Determine if we're in controlled mode\n  const isControlled = activeTab !== undefined;\n  const activeTabId = isControlled ? activeTab : internalActiveTabId;\n\n  // Handler for tab changes\n  const handleTabChange = (tabId: string) => {\n    if (!isControlled) {\n      setInternalActiveTabId(tabId);\n    }\n\n    if (onChange) {\n      onChange(tabId);\n    }\n  };\n\n  // Update internal active tab when activeTab prop changes (controlled mode)\n  useEffect(() => {\n    if (activeTab !== undefined) {\n      setInternalActiveTabId(activeTab);\n    }\n  }, [activeTab]);\n\n  // Context value\n  const contextValue = {\n    activeTabId,\n    setActiveTabId: handleTabChange,\n    orientation,\n    animated,\n  };\n\n  return (\n    <TabsContext.Provider value={contextValue}>\n      <div\n        className={`blox-tabs ${className}`}\n        data-blox-tabs=\"\"\n        data-orientation={orientation}\n        {...props}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  );\n};\n\n// Attach sub-components\nTabs.List = TabList;\nTabs.Tab = Tab;\nTabs.Panels = TabPanels;\nTabs.Panel = TabPanel;\n\nexport default Tabs;\n","// Tooltip.tsx\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { TooltipProps, TooltipPlacement } from \"./types\";\nimport { STYLES } from \"@/styles/defaultStyles\";\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, isOpen: controlledIsOpen, placement = \"bottom\", offset = 8, showDelay = 0, hideDelay = 0, showOnHover = true, showOnFocus = true, id, closeOnEsc = true, interactive = false, zIndex = 1000, isDisabled = false, tooltipClassName = \"\", minWidth, maxWidth, className = \"\", children, ...rest }) => {\n  // For controlled/uncontrolled usage\n  const [uncontrolledIsOpen, setUncontrolledIsOpen] = useState(false);\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : uncontrolledIsOpen;\n\n  // Refs for DOM elements\n  const triggerRef = useRef<HTMLElement | null>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const childRef = useRef<HTMLElement | null>(null);\n\n  // Timers for delay\n  const showTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State for position\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0,\n    currentPlacement: placement,\n  });\n\n  // Save a reference to the child element\n  useEffect(() => {\n    if (childRef.current && React.isValidElement(children)) {\n      triggerRef.current = childRef.current;\n    }\n  }, [children]);\n\n  // Calculate tooltip position based on trigger element and placement\n  const updatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current || !isOpen) return;\n\n    const triggerRect = triggerRef.current.getBoundingClientRect();\n    const tooltipRect = tooltipRef.current.getBoundingClientRect();\n\n    // Available space in different directions\n    const spaceTop = triggerRect.top;\n    const spaceRight = window.innerWidth - triggerRect.right;\n    const spaceBottom = window.innerHeight - triggerRect.bottom;\n    const spaceLeft = triggerRect.left;\n\n    // Determine best placement based on available space\n    let finalPlacement: TooltipPlacement = placement;\n    const primaryPlacement = placement.split(\"-\")[0] as \"top\" | \"right\" | \"bottom\" | \"left\";\n\n    // Check if preferred placement has enough space, otherwise flip to opposite side\n    switch (primaryPlacement) {\n      case \"top\":\n        if (spaceTop < tooltipRect.height + offset && spaceBottom > tooltipRect.height + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"bottom-start\" : placement.includes(\"end\") ? \"bottom-end\" : \"bottom\";\n        }\n        break;\n      case \"right\":\n        if (spaceRight < tooltipRect.width + offset && spaceLeft > tooltipRect.width + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"left-start\" : placement.includes(\"end\") ? \"left-end\" : \"left\";\n        }\n        break;\n      case \"bottom\":\n        if (spaceBottom < tooltipRect.height + offset && spaceTop > tooltipRect.height + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"top-start\" : placement.includes(\"end\") ? \"top-end\" : \"top\";\n        }\n        break;\n      case \"left\":\n        if (spaceLeft < tooltipRect.width + offset && spaceRight > tooltipRect.width + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"right-start\" : placement.includes(\"end\") ? \"right-end\" : \"right\";\n        }\n        break;\n    }\n\n    // Calculate position based on final placement\n    let x = 0;\n    let y = 0;\n\n    switch (finalPlacement) {\n      case \"top\":\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"top-start\":\n        x = triggerRect.left;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"top-end\":\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"right\":\n        x = triggerRect.right + offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case \"right-start\":\n        x = triggerRect.right + offset;\n        y = triggerRect.top;\n        break;\n      case \"right-end\":\n        x = triggerRect.right + offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n      case \"bottom\":\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"bottom-start\":\n        x = triggerRect.left;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"bottom-end\":\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"left\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case \"left-start\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top;\n        break;\n      case \"left-end\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n    }\n\n    // Keep tooltip within viewport bounds\n    // Adjust x position\n    if (x < 10) {\n      x = 10;\n    } else if (x + tooltipRect.width > window.innerWidth - 10) {\n      x = window.innerWidth - tooltipRect.width - 10;\n    }\n\n    // Adjust y position\n    if (y < 10) {\n      y = 10;\n    } else if (y + tooltipRect.height > window.innerHeight - 10) {\n      y = window.innerHeight - tooltipRect.height - 10;\n    }\n\n    setPosition({\n      x,\n      y,\n      currentPlacement: finalPlacement,\n    });\n  }, [isOpen, placement, offset]);\n\n  // Handle showing the tooltip\n  const handleShow = useCallback(() => {\n    if (isDisabled) return;\n\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n\n    if (!isControlled) {\n      if (showDelay) {\n        showTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(true);\n        }, showDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(true);\n      }\n    }\n  }, [isControlled, isDisabled, showDelay]);\n\n  // Handle hiding the tooltip\n  const handleHide = useCallback(() => {\n    if (isDisabled) return;\n\n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current);\n      showTimeoutRef.current = null;\n    }\n\n    if (!isControlled) {\n      if (hideDelay) {\n        hideTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(false);\n        }, hideDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(false);\n      }\n    }\n  }, [isControlled, isDisabled, hideDelay]);\n\n  // Prevent hiding when interacting with tooltip\n  const handleTooltipMouseEnter = useCallback(() => {\n    if (interactive && hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n  }, [interactive]);\n\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        handleHide();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, closeOnEsc, handleHide]);\n\n  // Update position when tooltip opens or window resizes\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Update position immediately\n    updatePosition();\n\n    // And then after a short delay to ensure content is fully rendered\n    const delayedUpdate = setTimeout(updatePosition, 10);\n\n    // Update on resize\n    window.addEventListener(\"resize\", updatePosition);\n    window.addEventListener(\"scroll\", updatePosition, true);\n\n    return () => {\n      clearTimeout(delayedUpdate);\n      window.removeEventListener(\"resize\", updatePosition);\n      window.removeEventListener(\"scroll\", updatePosition, true);\n    };\n  }, [isOpen, updatePosition]);\n\n  // Clear timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) clearTimeout(showTimeoutRef.current);\n      if (hideTimeoutRef.current) clearTimeout(hideTimeoutRef.current);\n    };\n  }, []);\n\n  // Render tooltip\n  const renderTooltip = () => {\n    if (!isOpen) return null;\n\n    const tooltipContent = (\n      <div\n        ref={tooltipRef}\n        role=\"tooltip\"\n        id={id}\n        className={`blox-tooltip ${tooltipClassName}`}\n        style={\n          {\n            position: \"fixed\",\n            left: `${position.x}px`,\n            top: `${position.y}px`,\n            zIndex,\n            minWidth: minWidth,\n            maxWidth: maxWidth,\n            \"--blox-tooltip-min-width\": typeof minWidth === \"number\" ? `${minWidth}px` : minWidth,\n            \"--blox-tooltip-max-width\": typeof maxWidth === \"number\" ? `${maxWidth}px` : maxWidth,\n            \"--blox-tooltip-offset\": `${offset || STYLES.Tooltip.offset}px`,\n            \"--blox-tooltip-placement\": position.currentPlacement,\n          } as React.CSSProperties\n        }\n        onMouseEnter={handleTooltipMouseEnter}\n        onMouseLeave={interactive ? handleHide : undefined}\n        data-placement={position.currentPlacement}>\n        {content}\n      </div>\n    );\n\n    return createPortal(tooltipContent, document.body);\n  };\n\n  // Clone the child element and attach event handlers\n  const childElement = React.Children.only(children);\n\n  if (!React.isValidElement(childElement)) {\n    console.error(\"Tooltip children must be a valid React element\");\n    return <>{children}</>;\n  }\n\n  const childProps: React.HTMLAttributes<HTMLElement> = {};\n\n  if (showOnHover) {\n    childProps.onMouseEnter = (e) => {\n      handleShow();\n      childElement.props.onMouseEnter?.(e);\n    };\n\n    childProps.onMouseLeave = (e) => {\n      handleHide();\n      childElement.props.onMouseLeave?.(e);\n    };\n  }\n\n  if (showOnFocus) {\n    childProps.onFocus = (e) => {\n      handleShow();\n      childElement.props.onFocus?.(e);\n    };\n\n    childProps.onBlur = (e) => {\n      handleHide();\n      childElement.props.onBlur?.(e);\n    };\n  }\n\n  // Add the ref to the child element\n  const enhancedChild = React.cloneElement(childElement, {\n    ...childProps,\n    ref: (node: HTMLElement) => {\n      // Forward the ref to the child if it has one\n      if (typeof childElement.ref === \"function\") {\n        childElement.ref(node);\n      } else if (childElement.ref) {\n        (childElement.ref as React.MutableRefObject<HTMLElement>).current = node;\n      }\n\n      childRef.current = node;\n      triggerRef.current = node;\n    },\n    className: `${childElement.props.className || \"\"} ${className}`.trim(),\n  });\n\n  return (\n    <>\n      {enhancedChild}\n      {renderTooltip()}\n    </>\n  );\n};\n\nexport default Tooltip;\n","// SegmentedControl.tsx\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport {\n  SegmentedControlProps,\n  SegmentItemProps,\n  SegmentedControlContextType,\n  SegmentedControlComposition\n} from './types';\n\n// Create context for segmented control state\nconst SegmentedControlContext = createContext<SegmentedControlContextType>({\n  selectedValue: null,\n  onChange: () => {},\n  allowDeselect: false,\n  disabled: false\n});\n\n// Hook to use segmented control context\nconst useSegmentedControl = () => {\n  const context = useContext(SegmentedControlContext);\n  if (!context) {\n    throw new Error('useSegmentedControl must be used within a SegmentedControl component');\n  }\n  return context;\n};\n\n// Segment Item Component\nconst SegmentItem: React.FC<SegmentItemProps> = ({ \n  value, \n  disabled = false, \n  children, \n  className = '',\n  ...props \n}) => {\n  const { selectedValue, onChange, allowDeselect, disabled: controlDisabled } = useSegmentedControl();\n  const isSelected = selectedValue === value;\n  const isDisabled = disabled || controlDisabled;\n  \n  const handleClick = () => {\n    if (isDisabled) return;\n    \n    if (isSelected && allowDeselect) {\n      onChange('');\n    } else if (!isSelected) {\n      onChange(value);\n    }\n  };\n  \n  return (\n    <button\n      type=\"button\"\n      role=\"radio\"\n      aria-checked={isSelected}\n      disabled={isDisabled}\n      className={`blox-segment-item ${className}`}\n      data-blox-segment-item=\"\"\n      data-state={isSelected ? 'selected' : 'unselected'}\n      data-disabled={isDisabled ? 'true' : 'false'}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\n// Main SegmentedControl Component\nconst SegmentedControl: React.FC<SegmentedControlProps> & SegmentedControlComposition = ({\n  value,\n  defaultValue = '',\n  onChange,\n  allowDeselect = false,\n  disabled = false,\n  children,\n  className = '',\n  ...props\n}) => {\n  // For internal state (uncontrolled mode)\n  const [internalValue, setInternalValue] = useState<string>(defaultValue);\n  \n  // Determine if we're in controlled mode\n  const isControlled = value !== undefined;\n  const selectedValue = isControlled ? value : internalValue;\n  \n  // Handle value change\n  const handleChange = useCallback((newValue: string) => {\n    if (!isControlled) {\n      setInternalValue(newValue);\n    }\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  }, [isControlled, onChange]);\n  \n  // Context value\n  const contextValue = {\n    selectedValue,\n    onChange: handleChange,\n    allowDeselect,\n    disabled\n  };\n  \n  return (\n    <SegmentedControlContext.Provider value={contextValue}>\n      <div \n        role=\"radiogroup\"\n        className={`blox-segmented-control ${className}`}\n        data-blox-segmented-control=\"\"\n        data-disabled={disabled ? 'true' : 'false'}\n        {...props}\n      >\n        {children}\n      </div>\n    </SegmentedControlContext.Provider>\n  );\n};\n\n// Attach sub-components\nSegmentedControl.Item = SegmentItem;\n\nexport default SegmentedControl;","// DragDropContext.tsx\nimport React, { createContext, useContext, useRef, useState, useEffect, useCallback } from \"react\";\nimport { DragContextValue, DragDropProviderProps, DragItem, Coordinates, DropTargetInfo, SortableItemInfo, DragStartEvent, DragMoveEvent, DragEndEvent } from \"./types\";\n\n// Create context with default values\nconst DragDropContext = createContext<DragContextValue>({\n  draggingItem: null,\n  dragPosition: null,\n  dropTargets: new Map(),\n  sortableItems: new Map(),\n  registerDropTarget: () => {},\n  unregisterDropTarget: () => {},\n  registerSortableItem: () => {},\n  unregisterSortableItem: () => {},\n  startDrag: () => {},\n  endDrag: () => {},\n  getDragOverTarget: () => null,\n});\n\n// Hook to use the drag and drop context\nexport const useDragDrop = () => useContext(DragDropContext);\n\n// Provider component\nexport const DragDropProvider: React.FC<DragDropProviderProps> = ({ children, onDragStart, onDragMove, onDragEnd, onDragCancel }) => {\n  // State for tracking the currently dragged item\n  const [draggingItem, setDraggingItem] = useState<DragItem | null>(null);\n\n  // State for tracking the current position of the drag\n  const [dragPosition, setDragPosition] = useState<Coordinates | null>(null);\n\n  // Refs for tracking drop targets and sortable items\n  const dropTargetsRef = useRef(new Map<string, DropTargetInfo>());\n  const sortableItemsRef = useRef(new Map<string, SortableItemInfo>());\n\n  // Refs for tracking drag state\n  const dragStartPositionRef = useRef<Coordinates | null>(null);\n  const dragTargetRef = useRef<HTMLElement | null>(null);\n  const draggingRef = useRef<boolean>(false);\n  const lastPositionRef = useRef<Coordinates | null>(null);\n\n  // Register a drop target\n  const registerDropTarget = useCallback((target: DropTargetInfo) => {\n    dropTargetsRef.current.set(target.id, target);\n  }, []);\n\n  // Unregister a drop target\n  const unregisterDropTarget = useCallback((id: string) => {\n    dropTargetsRef.current.delete(id);\n  }, []);\n\n  // Register a sortable item\n  const registerSortableItem = useCallback((item: SortableItemInfo) => {\n    sortableItemsRef.current.set(item.id, item);\n  }, []);\n\n  // Unregister a sortable item\n  const unregisterSortableItem = useCallback((id: string) => {\n    sortableItemsRef.current.delete(id);\n  }, []);\n\n  // Get the current drop target the cursor is over\n  const getDragOverTarget = useCallback((): DropTargetInfo | null => {\n    if (!dragPosition) return null;\n\n    // Check each drop target to see if cursor is inside\n    for (const target of dropTargetsRef.current.values()) {\n      const { rect } = target;\n      if (dragPosition.x >= rect.left && dragPosition.x <= rect.right && dragPosition.y >= rect.top && dragPosition.y <= rect.bottom) {\n        return target;\n      }\n    }\n\n    return null;\n  }, [dragPosition]);\n\n  // Start dragging an item\n  const startDrag = useCallback(\n    (item: DragItem, nativeEvent: MouseEvent | TouchEvent) => {\n      const target = nativeEvent.target as HTMLElement;\n\n      // Store the element that was clicked/touched\n      dragTargetRef.current = target;\n\n      // Calculate initial position\n      let initialX: number;\n      let initialY: number;\n\n      if (nativeEvent instanceof MouseEvent) {\n        initialX = nativeEvent.clientX;\n        initialY = nativeEvent.clientY;\n      } else {\n        // TouchEvent\n        initialX = nativeEvent.touches[0].clientX;\n        initialY = nativeEvent.touches[0].clientY;\n      }\n\n      // Set initial position\n      dragStartPositionRef.current = { x: initialX, y: initialY };\n      setDragPosition({ x: initialX, y: initialY });\n\n      // Set dragging state\n      draggingRef.current = true;\n      setDraggingItem(item);\n      lastPositionRef.current = { x: initialX, y: initialY };\n\n      // Emit drag start event\n      if (onDragStart) {\n        onDragStart({\n          item,\n          coordinates: { x: initialX, y: initialY },\n          target,\n          nativeEvent,\n        });\n      }\n\n      // Add document event listeners for drag move and end\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n      document.addEventListener(\"mouseup\", handleDragEnd);\n      document.addEventListener(\"touchend\", handleDragEnd);\n      document.addEventListener(\"keydown\", handleKeyDown);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    },\n    [onDragStart]\n  );\n\n  // Handle mouse move during drag\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid text selection\n      e.preventDefault();\n\n      // Calculate new position\n      const newX = e.clientX;\n      const newY = e.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle touch move during drag\n  const handleTouchMove = useCallback(\n    (e: TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid scrolling\n      e.preventDefault();\n\n      // Calculate new position\n      const touch = e.touches[0];\n      const newX = touch.clientX;\n      const newY = touch.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle drag end\n  const handleDragEnd = useCallback(\n    (e: MouseEvent | TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !draggingItem || !lastPositionRef.current) return;\n\n      // Calculate final position\n      let finalX: number;\n      let finalY: number;\n\n      if (e instanceof MouseEvent) {\n        finalX = e.clientX;\n        finalY = e.clientY;\n      } else {\n        // TouchEvent\n        if (e.changedTouches.length) {\n          finalX = e.changedTouches[0].clientX;\n          finalY = e.changedTouches[0].clientY;\n        } else {\n          // Fallback to last known position\n          finalX = lastPositionRef.current.x;\n          finalY = lastPositionRef.current.y;\n        }\n      }\n\n      // Calculate total delta from start\n      const totalDelta = {\n        x: finalX - (dragStartPositionRef.current?.x || 0),\n        y: finalY - (dragStartPositionRef.current?.y || 0),\n      };\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag end event\n      if (onDragEnd) {\n        onDragEnd({\n          item: draggingItem,\n          coordinates: { x: finalX, y: finalY },\n          delta: totalDelta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n\n      // Clean up\n      endDrag();\n    },\n    [draggingItem, onDragEnd, getDragOverTarget]\n  );\n\n  // Handle keydown (for cancellation with Escape)\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        if (onDragCancel) {\n          onDragCancel();\n        }\n        endDrag();\n      }\n    },\n    [onDragCancel]\n  );\n\n  // End drag and clean up\n  const endDrag = useCallback(() => {\n    // Reset drag state\n    draggingRef.current = false;\n    dragStartPositionRef.current = null;\n    dragTargetRef.current = null;\n    lastPositionRef.current = null;\n\n    setDraggingItem(null);\n    setDragPosition(null);\n\n    // Remove event listeners\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n    document.removeEventListener(\"touchmove\", handleTouchMove);\n    document.removeEventListener(\"mouseup\", handleDragEnd);\n    document.removeEventListener(\"touchend\", handleDragEnd);\n    document.removeEventListener(\"keydown\", handleKeyDown);\n\n    // Re-enable text selection\n    document.body.style.userSelect = \"\";\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Clean up listeners when component unmounts\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleDragEnd);\n      document.removeEventListener(\"touchend\", handleDragEnd);\n      document.removeEventListener(\"keydown\", handleKeyDown);\n\n      // Re-enable text selection\n      document.body.style.userSelect = \"\";\n    };\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Context value\n  const contextValue: DragContextValue = {\n    draggingItem,\n    dragPosition,\n    dropTargets: dropTargetsRef.current,\n    sortableItems: sortableItemsRef.current,\n    registerDropTarget,\n    unregisterDropTarget,\n    registerSortableItem,\n    unregisterSortableItem,\n    startDrag,\n    endDrag,\n    getDragOverTarget,\n  };\n\n  return <DragDropContext.Provider value={contextValue}>{children}</DragDropContext.Provider>;\n};\n","// Draggable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DraggableProps, DraggableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const Draggable: React.FC<DraggableProps> = ({ id, type = \"default\", data, disabled = false, handle = false, preview, children, style, className = \"\", ...props }) => {\n  const { draggingItem, startDrag } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Check if this item is currently being dragged\n  const isDragging = draggingItem?.id === id && draggingItem?.type === type;\n\n  // Handler for starting drag operation\n  const handleDragStart = useCallback(\n    (e: React.MouseEvent | React.TouchEvent) => {\n      if (disabled || !elementRef.current) return;\n\n      // Prevent default behavior to avoid browser's native drag and drop\n      e.preventDefault();\n\n      // Create the drag item\n      const item = {\n        id,\n        type,\n        data,\n      };\n\n      // Start the drag operation\n      startDrag(item, e.nativeEvent);\n    },\n    [id, type, data, disabled, startDrag]\n  );\n\n  // Event handler props for drag handle\n  const dragHandleProps = {\n    onMouseDown: handleDragStart,\n    onTouchStart: handleDragStart,\n  };\n\n  // Props to pass to render function\n  const renderProps: DraggableRenderProps = {\n    isDragging,\n    dragHandleProps,\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-draggable ${className}`}\n      data-blox-draggable=\"\"\n      data-draggable-id={id}\n      data-draggable-type={type}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...style,\n        // Apply some styles when dragging\n        opacity: isDragging ? 0.5 : 1,\n        // Apply cursor style\n        cursor: disabled ? \"not-allowed\" : handle ? \"grab\" : \"move\",\n        // Prevent text selection during drag (for better UX)\n        userSelect: \"none\",\n        // Make element positioned so we can position the preview\n        position: \"relative\",\n        // Avoid layout shifts by setting a height when dragging\n        ...(isDragging && { height: elementRef.current?.offsetHeight }),\n      }}\n      {...(!handle && !disabled ? dragHandleProps : {})}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n\n// Handle component for partial draggable areas\nexport const DragHandle: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className = \"\", ...props }) => {\n  const renderProps = React.useContext(DraggableRenderPropsContext);\n\n  if (!renderProps) {\n    console.warn(\"DragHandle must be used within a Draggable component\");\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      className={`blox-drag-handle ${className}`}\n      data-blox-drag-handle=\"\"\n      style={{ cursor: \"grab\" }}\n      {...renderProps.dragHandleProps}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Create a context to pass render props down to DragHandle\nconst DraggableRenderPropsContext = React.createContext<DraggableRenderProps | null>(null);\n\n// Alternative implementation of Draggable that uses context to pass props to DragHandle\nexport const DraggableWithContext: React.FC<DraggableProps> = (props) => {\n  const BaseComponent = Draggable;\n  const { children, ...rest } = props;\n\n  return <BaseComponent {...rest}>{(renderProps) => <DraggableRenderPropsContext.Provider value={renderProps}>{typeof children === \"function\" ? children(renderProps) : children}</DraggableRenderPropsContext.Provider>}</BaseComponent>;\n};\n","// Droppable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DroppableProps, DroppableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { STYLES } from \"@/styles/defaultStyles\";\n\nexport const Droppable: React.FC<DroppableProps> = ({\n  id,\n  type = \"default\",\n  data,\n  disabled = false,\n  accept,\n  children,\n  style,\n  className = \"\",\n  onDrop,\n  // isActive, // Remove from props destructuring\n  ...props\n}) => {\n  const { draggingItem, dragPosition, registerDropTarget, unregisterDropTarget, getDragOverTarget } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Determine if the current drag item can be dropped here\n  const canDrop = useCallback(() => {\n    if (!draggingItem || disabled) return false;\n\n    if (accept === undefined) {\n      // If no accept prop, accept everything\n      return true;\n    }\n\n    if (typeof accept === \"function\") {\n      // If accept is a function, use it\n      return accept(draggingItem);\n    }\n\n    // Handle string or array of strings\n    const acceptTypes = Array.isArray(accept) ? accept : [accept];\n    return acceptTypes.includes(draggingItem.type);\n  }, [draggingItem, disabled, accept]);\n\n  // Determine if the droppable is currently being hovered over\n  const isOver = useCallback(() => {\n    if (!draggingItem || !dragPosition || !canDrop()) return false;\n\n    const overTarget = getDragOverTarget();\n    return overTarget?.id === id;\n  }, [draggingItem, dragPosition, id, canDrop, getDragOverTarget]);\n\n  // Handle drop event\n  const handleDrop = useCallback(() => {\n    if (onDrop && isOver() && canDrop()) {\n      onDrop();\n    }\n  }, [onDrop, isOver, canDrop]);\n\n  // Register this droppable with the context\n  useEffect(() => {\n    if (!elementRef.current) return;\n\n    const updateDropTarget = () => {\n      if (elementRef.current) {\n        const rect = elementRef.current.getBoundingClientRect();\n        registerDropTarget({\n          id,\n          type,\n          data,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateDropTarget();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateDropTarget);\n    window.addEventListener(\"scroll\", updateDropTarget);\n\n    return () => {\n      unregisterDropTarget(id);\n      window.removeEventListener(\"resize\", updateDropTarget);\n      window.removeEventListener(\"scroll\", updateDropTarget);\n    };\n  }, [id, type, data, registerDropTarget, unregisterDropTarget]);\n\n  // Listen for drop events\n  useEffect(() => {\n    const isCurrentlyOver = isOver();\n    const canCurrentlyDrop = canDrop();\n\n    if (isCurrentlyOver && canCurrentlyDrop && !draggingItem) {\n      handleDrop();\n    }\n  }, [draggingItem, isOver, canDrop, handleDrop]);\n\n  // Props to pass to render function\n  const renderProps: DroppableRenderProps = {\n    isOver: isOver(),\n    canDrop: canDrop(),\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-droppable ${className}`}\n      data-blox-droppable=\"\"\n      data-droppable-id={id}\n      data-droppable-type={type}\n      data-over={isOver() ? \"true\" : \"false\"}\n      data-can-drop={canDrop() ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      // Add data attribute instead of prop\n      data-is-active={props[\"data-is-active\"] || \"false\"}\n      style={{\n        ...style,\n        // Add visual feedback when dragging over\n        ...(isOver() &&\n          canDrop() && {\n            outline: `var(--blox-dragdrop-droppable-oultine, ${STYLES.DragDrop.droppable.outline})`,\n            backgroundColor: `var(--blox-dragdrop-droppable-bg-color, ${STYLES.DragDrop.droppable.bgColor})`,\n          }),\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n","// Sortable.tsx\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { SortableProps, SortableItemProps, SortableItemRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { DraggableWithContext } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\n\n// Sortable List Component\nexport const Sortable: React.FC<SortableProps> = ({ items, keyExtractor, onReorder, direction = \"vertical\", children, style, className = \"\", ...props }) => {\n  const { draggingItem } = useDragDrop();\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\n\n  // Determine if an item is currently being dragged\n  const isDragging = draggedIndex !== null;\n\n  // Find the index of the dragged item\n  useEffect(() => {\n    if (!draggingItem) {\n      setDraggedIndex(null);\n      return;\n    }\n\n    const index = items.findIndex((item) => keyExtractor(item) === draggingItem.id);\n    if (index !== -1) {\n      setDraggedIndex(index);\n    }\n  }, [draggingItem, items, keyExtractor]);\n\n  // Handle reordering when an item is dropped\n  const handleDrop = (itemId: string, targetIndex: number) => {\n    if (draggedIndex === null) return;\n\n    // Skip if dropping at the same position\n    if (draggedIndex === targetIndex) return;\n\n    // Create a copy of the items array\n    const newItems = [...items];\n\n    // Remove the dragged item\n    const [draggedItem] = newItems.splice(draggedIndex, 1);\n\n    // Insert the dragged item at the target position\n    newItems.splice(targetIndex, 0, draggedItem);\n\n    // Call the onReorder callback with the new order\n    onReorder(newItems);\n  };\n\n  // Container style based on direction\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: direction === \"vertical\" ? \"column\" : \"row\",\n    position: \"relative\",\n    ...style,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={`blox-sortable ${className}`}\n      data-blox-sortable=\"\"\n      style={containerStyle}\n      {...props}>\n      {items.map((item, index) => {\n        const itemId = keyExtractor(item);\n        const isBeingDragged = draggedIndex === index;\n\n        // Render each sortable item\n        return (\n          <SortableItem\n            key={itemId}\n            item={item}\n            itemId={itemId}\n            index={index}\n            isDragging={isBeingDragged}\n            onDrop={handleDrop}\n            direction={direction}>\n            {(renderProps) => children(item, renderProps)}\n          </SortableItem>\n        );\n      })}\n    </div>\n  );\n};\n\n// Individual Sortable Item\nconst SortableItem: React.FC<SortableItemProps> = ({ item, itemId, index, isDragging, onDrop, direction, children }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { registerSortableItem, unregisterSortableItem } = useDragDrop();\n\n  // Register this item with the drag drop context\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const updateSortableItem = () => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect();\n        registerSortableItem({\n          id: itemId,\n          index,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateSortableItem();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateSortableItem);\n    window.addEventListener(\"scroll\", updateSortableItem);\n\n    return () => {\n      unregisterSortableItem(itemId);\n      window.removeEventListener(\"resize\", updateSortableItem);\n      window.removeEventListener(\"scroll\", updateSortableItem);\n    };\n  }, [itemId, index, registerSortableItem, unregisterSortableItem]);\n\n  // Handle when another item is dropped on this item\n  const handleDropOnItem = () => {\n    onDrop(itemId, index);\n  };\n\n  // Prepare render props for the children\n  const renderProps: SortableItemRenderProps = {\n    isDragging,\n    dragHandleProps: {\n      draggableId: itemId,\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-pressed\": isDragging,\n      \"aria-label\": `Drag to reorder item ${index + 1}`,\n    },\n  };\n\n  return (\n    <Droppable\n      id={`droppable-${itemId}`}\n      onDrop={handleDropOnItem}\n      // Remove isActive prop - it's causing a DOM warning\n      className=\"blox-sortable-droppable\"\n      style={{\n        margin: direction === \"vertical\" ? \"2px 0\" : \"0 2px\",\n      }}\n      data-is-active=\"true\" // Use data attribute instead\n    >\n      <DraggableWithContext\n        id={itemId}\n        type=\"sortable-item\"\n        data={item}\n        className=\"blox-sortable-item\"\n        style={{\n          opacity: isDragging ? 0.5 : 1,\n          cursor: \"grab\",\n          transition: \"all 0.2s ease\",\n          backgroundColor: isDragging ? \"rgba(0, 0, 0, 0.05)\" : \"transparent\",\n          borderRadius: \"4px\",\n        }}>\n        {children(renderProps)}\n      </DraggableWithContext>\n    </Droppable>\n  );\n};\n\nexport default Sortable;","// index.ts - Barrel file for DragDrop components\nimport { DragDropProvider, useDragDrop } from \"./DragDropContext\";\nimport { Draggable, DraggableWithContext, DragHandle } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\nimport { DragOverlay } from \"./DragOverlay\";\nimport { Sortable } from \"./Sortable\";\n\n// Re-export all components and hooks\nexport {\n  // Context and Provider\n  DragDropProvider,\n  useDragDrop,\n\n  // Core Components\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n};\n\n// Re-export types\nexport type {\n  // Coordinates and Items\n  Coordinates,\n  DragItem,\n\n  // Events\n  DragStartEvent,\n  DragMoveEvent,\n  DragEndEvent,\n\n  // Target Information\n  DropTargetInfo,\n  SortableItemInfo,\n\n  // Context Value\n  DragContextValue,\n\n  // Component Props\n  DragDropProviderProps,\n  DraggableProps,\n  DraggableRenderProps,\n  DragHandleProps,\n  DroppableProps,\n  DroppableRenderProps,\n  DragOverlayProps,\n  SortableProps,\n  SortableItemProps,\n  SortableItemRenderProps,\n} from \"./types\";\n\n// Default export as a namespace\nexport const DragDrop = {\n  Provider: DragDropProvider,\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n  useDragDrop,\n};\n\nexport default DragDrop;\n","// DragOverlay.tsx\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DragOverlayProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const DragOverlay: React.FC<DragOverlayProps> = ({ children, style, className = \"\", ...props }) => {\n  const { draggingItem, dragPosition } = useDragDrop();\n\n  // Don't render anything if not currently dragging\n  if (!draggingItem || !dragPosition) {\n    return null;\n  }\n\n  // Calculate position styles\n  const positionStyles = {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    transform: `translate(${dragPosition.x}px, ${dragPosition.y}px)`,\n    pointerEvents: \"none\", // Make overlay non-interactive\n    zIndex: 9999,\n    transformOrigin: \"0 0\",\n  } as React.CSSProperties;\n\n  // Render the overlay as a portal\n  return createPortal(\n    <div\n      className={`blox-drag-overlay ${className}`}\n      data-blox-drag-overlay=\"\"\n      style={{\n        ...positionStyles,\n        ...style,\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children({ item: draggingItem }) : children}\n    </div>,\n    // Append to body to ensure it's above everything\n    document.body\n  );\n};\n","// ContextMenu.tsx\nimport React, { useState, useRef, useEffect, createContext, useContext, useCallback, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ContextMenuProps, ContextMenuTriggerProps, ContextMenuContentProps, ContextMenuItemProps, ContextMenuGroupProps, ContextMenuSeparatorProps, ContextMenuContextValue, ContextMenuComposition } from \"./types\";\n\n// Create context for context menu state\nconst ContextMenuContext = createContext<ContextMenuContextValue>({\n  isOpen: false,\n  open: () => {},\n  close: () => {},\n  position: { x: 0, y: 0 },\n  disabled: false,\n});\n\n// Hook to use context menu context\nconst useContextMenu = () => {\n  const context = useContext(ContextMenuContext);\n  if (!context) {\n    throw new Error(\"useContextMenu must be used within a ContextMenu component\");\n  }\n  return context;\n};\n\n// ContextMenu Trigger Component\nconst ContextMenuTrigger: React.FC<ContextMenuTriggerProps> = ({ children, disabled = false, className = \"\", ...props }) => {\n  const { open, disabled: contextDisabled } = useContextMenu();\n  const isDisabled = disabled || contextDisabled;\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    if (isDisabled) return;\n\n    // Prevent the default context menu\n    event.preventDefault();\n\n    // Open our custom context menu\n    open(event);\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-trigger ${className}`}\n      data-blox-context-menu-trigger=\"\"\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      onContextMenu={handleContextMenu}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Content Component\nconst ContextMenuContent: React.FC<ContextMenuContentProps> = ({ children, closeOnOutsideClick = true, closeOnEscape = true, offset = [0, 0], width, maxHeight, className = \"\", ...props }) => {\n  const { isOpen, close, position } = useContextMenu();\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // Create a ref to store calculated styles to avoid re-renders\n  const styleRef = useRef({\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: 1000,\n    width: width,\n    maxHeight: maxHeight,\n    overflow: maxHeight ? \"auto\" : undefined,\n  });\n\n  // Calculate position only once when menu opens or position changes\n  useLayoutEffect(() => {\n    if (!isOpen) return;\n\n    // Initial position based on cursor + offset\n    let x = position.x + offset[0];\n    let y = position.y + offset[1];\n\n    // After one frame, adjust if needed\n    requestAnimationFrame(() => {\n      if (!menuRef.current) return;\n\n      const menuRect = menuRef.current.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // Check if menu would go off the right edge\n      if (x + menuRect.width > viewportWidth) {\n        x = viewportWidth - menuRect.width - 5; // 5px buffer\n      }\n\n      // Check if menu would go off the bottom edge\n      if (y + menuRect.height > viewportHeight) {\n        y = viewportHeight - menuRect.height - 5; // 5px buffer\n      }\n\n      // Ensure menu doesn't go off the left or top edges\n      x = Math.max(5, x);\n      y = Math.max(5, y);\n\n      // Apply directly to the DOM element to avoid re-renders\n      if (menuRef.current) {\n        menuRef.current.style.left = `${x}px`;\n        menuRef.current.style.top = `${y}px`;\n      }\n    });\n\n    // Store initial position in style ref\n    styleRef.current = {\n      ...styleRef.current,\n      left: `${position.x + offset[0]}px`,\n      top: `${position.y + offset[1]}px`,\n    };\n  }, [isOpen, position.x, position.y, offset[0], offset[1]]);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    if (!isOpen || !closeOnOutsideClick) return;\n\n    const handleOutsideClick = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        close();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, [isOpen, close, closeOnOutsideClick]);\n\n  // Close menu when pressing Escape\n  useEffect(() => {\n    if (!isOpen || !closeOnEscape) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        close();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, close, closeOnEscape]);\n\n  if (!isOpen) return null;\n\n  // Render the menu with Portal\n  return createPortal(\n    <div\n      ref={menuRef}\n      className={`blox-context-menu-content ${className}`}\n      data-blox-context-menu-content=\"\"\n      style={{\n        position: \"fixed\",\n        ...styleRef.current,\n      }}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      {...props}>\n      {children}\n    </div>,\n    document.body\n  );\n};\n\n// ContextMenu Item Component\nconst ContextMenuItem: React.FC<ContextMenuItemProps> = ({ children, disabled = false, onSelect, closeOnSelect = true, icon, shortcut, className = \"\", ...props }) => {\n  const { close } = useContextMenu();\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect();\n    }\n\n    if (closeOnSelect) {\n      close();\n    }\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-item ${className}`}\n      data-blox-context-menu-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onClick={handleClick}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {icon && (\n        <span\n          className=\"blox-context-menu-item-icon\"\n          data-blox-context-menu-item-icon=\"\">\n          {icon}\n        </span>\n      )}\n\n      <span\n        className=\"blox-context-menu-item-label\"\n        data-blox-context-menu-item-label=\"\">\n        {children}\n      </span>\n\n      {shortcut && (\n        <span\n          className=\"blox-context-menu-item-shortcut\"\n          data-blox-context-menu-item-shortcut=\"\">\n          {shortcut}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// ContextMenu Group Component\nconst ContextMenuGroup: React.FC<ContextMenuGroupProps> = ({ children, label, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-group ${className}`}\n      data-blox-context-menu-group=\"\"\n      role=\"group\"\n      aria-label={label}\n      {...props}>\n      {label && (\n        <div\n          className=\"blox-context-menu-group-label\"\n          data-blox-context-menu-group-label=\"\">\n          {label}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Separator Component\nconst ContextMenuSeparator: React.FC<ContextMenuSeparatorProps> = ({ className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-separator ${className}`}\n      data-blox-context-menu-separator=\"\"\n      role=\"separator\"\n      {...props}\n    />\n  );\n};\n\n// Main ContextMenu Component\nconst ContextMenu: React.FC<ContextMenuProps> & ContextMenuComposition = ({ children, onOpen, onClose, disabled = false, enableKeyboard = true, ...props }) => {\n  // State for tracking open state and position\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  // Open the context menu\n  const open = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) return;\n\n      if (\"clientX\" in event) {\n        setPosition({ x: event.clientX, y: event.clientY });\n      }\n\n      setIsOpen(true);\n\n      if (onOpen) {\n        onOpen(event);\n      }\n    },\n    [disabled, onOpen]\n  );\n\n  // Close the context menu\n  const close = useCallback(() => {\n    setIsOpen(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    if (!enableKeyboard) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Implement keyboard shortcuts to open the context menu if desired\n      // For example, Shift+F10 or the context menu key\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [enableKeyboard]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    open,\n    close,\n    position,\n    disabled,\n  };\n\n  return (\n    <ContextMenuContext.Provider value={contextValue}>\n      <div\n        className=\"blox-context-menu\"\n        data-blox-context-menu=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        {...props}>\n        {children}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n};\n\n// Attach sub-components\nContextMenu.Trigger = ContextMenuTrigger;\nContextMenu.Content = ContextMenuContent;\nContextMenu.Item = ContextMenuItem;\nContextMenu.Group = ContextMenuGroup;\nContextMenu.Separator = ContextMenuSeparator;\n\nexport default ContextMenu;\n","// Slider.tsx\nimport React, { useState, useRef, useEffect, useCallback, createContext, useContext, useMemo } from \"react\";\nimport { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps, SliderMarkProps, SliderContextValue, ThumbPosition, SliderRange, SliderComposition } from \"./types\";\nimport { STYLES } from \"../../styles/defaultStyles\";\n\n// Create context for the slider\nconst SliderContext = createContext<SliderContextValue | null>(null);\n\n// Hook to use slider context\nconst useSlider = () => {\n  const context = useContext(SliderContext);\n  if (!context) {\n    throw new Error(\"Slider components must be used within a Slider\");\n  }\n  return context;\n};\n\n/**\n * @description Slider component for selecting a range of values. *Experimental component*\n */\n// Slider component\nconst Slider: React.FC<SliderProps> & SliderComposition = ({ value, defaultValue = 0, onChange, onDragStart, onDragEnd, min = 0, max = 100, step = 1, disabled = false, orientation = \"horizontal\", className = \"\", inverted = false, showMarks = false, marks, label, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, children, ...props }) => {\n  // Reference to the root element\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  // Parse and normalize the values\n  const parseValues = (input: number | number[]): number[] => {\n    if (typeof input === \"number\") {\n      return [input];\n    }\n    return [...input].sort((a, b) => a - b);\n  };\n\n  // Internal state for controlled/uncontrolled usage\n  const [internalValues, setInternalValues] = useState<number[]>(() => {\n    return parseValues(defaultValue);\n  });\n\n  // Determine if we're controlled or uncontrolled\n  const isControlled = value !== undefined;\n  const currentValues = isControlled ? parseValues(value) : internalValues;\n\n  // Track whether any thumb is being dragged\n  const [isDragging, setIsDragging] = useState(false);\n  const activeThumbIndex = useRef<number | null>(null);\n\n  // Calculate thumb positions\n  const thumbPositions = useMemo<ThumbPosition[]>(() => {\n    return currentValues.map((value, index) => {\n      // Clamp value to min/max\n      const clampedValue = Math.min(Math.max(value, min), max);\n\n      // Calculate percentage\n      const percent = ((clampedValue - min) / (max - min)) * 100;\n\n      return {\n        value: clampedValue,\n        index,\n        percent: inverted ? 100 - percent : percent,\n      };\n    });\n  }, [currentValues, min, max, inverted]);\n\n  // Calculate ranges between thumbs\n  const ranges = useMemo<SliderRange[]>(() => {\n    const result: SliderRange[] = [];\n\n    // For single thumb, range is from min to value\n    if (currentValues.length === 1) {\n      result.push({\n        start: min,\n        end: currentValues[0],\n      });\n    } else {\n      // For multiple thumbs, create ranges between each pair of values\n      // First range from min to first value\n      result.push({\n        start: min,\n        end: currentValues[0],\n      });\n\n      // Ranges between thumbs\n      for (let i = 0; i < currentValues.length - 1; i++) {\n        result.push({\n          start: currentValues[i],\n          end: currentValues[i + 1],\n        });\n      }\n\n      // Last range from last value to max\n      result.push({\n        start: currentValues[currentValues.length - 1],\n        end: max,\n      });\n    }\n\n    return result;\n  }, [currentValues, min, max]);\n\n  // Convert percentage (0-100) to a value\n  const percentToValue = useCallback(\n    (percent: number): number => {\n      // Adjust for inverted slider\n      const adjustedPercent = inverted ? 100 - percent : percent;\n\n      // Convert to range value\n      let value = (adjustedPercent / 100) * (max - min) + min;\n\n      // Apply step\n      if (step > 0) {\n        value = Math.round(value / step) * step;\n      }\n\n      // Ensure value is within bounds\n      return Math.min(Math.max(value, min), max);\n    },\n    [min, max, step, inverted]\n  );\n\n  // Convert value to percentage (0-100)\n  const valueToPercent = useCallback(\n    (value: number): number => {\n      // Ensure value is within bounds\n      const clampedValue = Math.min(Math.max(value, min), max);\n\n      // Convert to percentage\n      const percent = ((clampedValue - min) / (max - min)) * 100;\n\n      // Adjust for inverted slider\n      return inverted ? 100 - percent : percent;\n    },\n    [min, max, inverted]\n  );\n\n  // Get the closest thumb index to a given position\n  const getClosestThumb = useCallback(\n    (position: number): number => {\n      if (currentValues.length === 1) return 0;\n\n      // Convert position to value\n      const positionValue = percentToValue(position);\n\n      // Find the closest thumb\n      let closestDistance = Math.abs(currentValues[0] - positionValue);\n      let closestIndex = 0;\n\n      for (let i = 1; i < currentValues.length; i++) {\n        const distance = Math.abs(currentValues[i] - positionValue);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestIndex = i;\n        }\n      }\n\n      return closestIndex;\n    },\n    [currentValues, percentToValue]\n  );\n\n  // Update a specific thumb value\n  const updateThumb = useCallback(\n    (index: number, newValue: number) => {\n      // Clamp value to min/max\n      const clampedValue = Math.min(Math.max(newValue, min), max);\n\n      // Create new values array\n      let newValues = [...currentValues];\n      newValues[index] = clampedValue;\n\n      // Keep thumbs in order (prevent crossover)\n      if (index > 0 && newValues[index] < newValues[index - 1]) {\n        newValues[index] = newValues[index - 1];\n      }\n      if (index < newValues.length - 1 && newValues[index] > newValues[index + 1]) {\n        newValues[index] = newValues[index + 1];\n      }\n\n      // Update state for uncontrolled component\n      if (!isControlled) {\n        setInternalValues(newValues);\n      }\n\n      // Call onChange handler\n      if (onChange) {\n        onChange(newValues.length === 1 ? newValues[0] : newValues);\n      }\n    },\n    [currentValues, min, max, isControlled, onChange]\n  );\n\n  // Handle pointer down event on track\n  const handleTrackPointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    // Get position relative to track\n    const trackRect = event.currentTarget.getBoundingClientRect();\n    const position = orientation === \"horizontal\" ? ((event.clientX - trackRect.left) / trackRect.width) * 100 : ((event.clientY - trackRect.top) / trackRect.height) * 100;\n\n    // Find closest thumb and activate it\n    const thumbIndex = getClosestThumb(position);\n    activeThumbIndex.current = thumbIndex;\n\n    // Move the thumb to this position\n    updateThumb(thumbIndex, percentToValue(position));\n\n    // Start dragging\n    setIsDragging(true);\n\n    // Call onDragStart handler\n    if (onDragStart) {\n      onDragStart(currentValues.length === 1 ? currentValues[0] : currentValues);\n    }\n\n    // Capture pointer events\n    event.currentTarget.setPointerCapture(event.pointerId);\n  };\n\n  // Handle pointer move event\n  const handleTrackPointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled || !isDragging || activeThumbIndex.current === null) return;\n\n    // Get position relative to track\n    const trackRect = event.currentTarget.getBoundingClientRect();\n    const position = orientation === \"horizontal\" ? ((event.clientX - trackRect.left) / trackRect.width) * 100 : ((event.clientY - trackRect.top) / trackRect.height) * 100;\n\n    // Update thumb position\n    updateThumb(activeThumbIndex.current, percentToValue(position));\n  };\n\n  // Handle pointer up event\n  const handleTrackPointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled || !isDragging) return;\n\n    // End dragging\n    setIsDragging(false);\n    activeThumbIndex.current = null;\n\n    // Call onDragEnd handler\n    if (onDragEnd) {\n      onDragEnd(currentValues.length === 1 ? currentValues[0] : currentValues);\n    }\n\n    // Release pointer capture\n    event.currentTarget.releasePointerCapture(event.pointerId);\n  };\n\n  // Handle keyboard navigation\n  const handleRootKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    // Find focused thumb\n    const focusedThumbIndex = currentValues.findIndex((_, i) => document.activeElement === rootRef.current?.querySelector(`[data-thumb-index=\"${i}\"]`));\n\n    if (focusedThumbIndex === -1) return;\n\n    // Determine the increment amount\n    const increment = event.shiftKey ? step * 10 : step;\n    let newValue = currentValues[focusedThumbIndex];\n\n    switch (event.key) {\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? -increment : increment);\n        event.preventDefault();\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? increment : -increment);\n        event.preventDefault();\n        break;\n      case \"Home\":\n        newValue = min;\n        event.preventDefault();\n        break;\n      case \"End\":\n        newValue = max;\n        event.preventDefault();\n        break;\n      case \"PageUp\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? -increment * 10 : increment * 10);\n        event.preventDefault();\n        break;\n      case \"PageDown\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? increment * 10 : -increment * 10);\n        event.preventDefault();\n        break;\n      default:\n        return;\n    }\n\n    // Update thumb position\n    updateThumb(focusedThumbIndex, newValue);\n  };\n\n  // Create the context value\n  const contextValue: SliderContextValue = {\n    value: currentValues.length === 1 ? currentValues[0] : currentValues,\n    min,\n    max,\n    step,\n    disabled,\n    orientation,\n    inverted,\n    isDragging,\n    thumbPositions,\n    ranges,\n    updateThumb,\n    setDragging: setIsDragging,\n    getClosestThumb,\n    valueToPercent,\n    percentToValue,\n  };\n\n  // Determine the track direction CSS variables\n  const directionProps: React.CSSProperties = {\n    position: \"relative\",\n    \"--blox-slider-direction\": orientation === \"horizontal\" ? \"row\" : \"column\",\n    \"--blox-slider-length\": \"100%\",\n    \"--blox-slider-track-size\": orientation === \"horizontal\" ? \"100%\" : \"100%\",\n    \"--blox-slider-track-thickness\": orientation === \"horizontal\" ? \"var(--blox-slider-thickness, 4px)\" : \"var(--blox-slider-thickness, 4px)\",\n  };\n\n  // Custom render function using render props\n  const renderContent = () => {\n    if (typeof children === \"function\") {\n      return <div style={{ position: \"relative\" }}>{children(contextValue)}</div>;\n    }\n\n    return (\n      children || (\n        <div style={{ position: \"relative\" }}>\n          <SliderTrack\n            onPointerDown={handleTrackPointerDown}\n            onPointerMove={handleTrackPointerMove}\n            onPointerUp={handleTrackPointerUp}>\n            {currentValues.length > 1 &&\n              currentValues.map((_, index) => (\n                <SliderRangeComponent\n                  key={`range-${index}`}\n                  index={index}\n                />\n              ))}\n            {currentValues.length === 1 && <SliderRangeComponent />}\n          </SliderTrack>\n\n          {currentValues.map((_, index) => (\n            <SliderThumb\n              key={`thumb-${index}`}\n              index={index}\n            />\n          ))}\n\n          {showMarks && (\n            <>\n              {/* Default marks at min and max */}\n              {!marks && (\n                <>\n                  <SliderMark value={min} />\n                  <SliderMark value={max} />\n                </>\n              )}\n\n              {/* Custom marks if provided */}\n              {marks &&\n                Object.entries(marks).map(([value, label]) => (\n                  <SliderMark\n                    key={`mark-${value}`}\n                    value={Number(value)}>\n                    {label}\n                  </SliderMark>\n                ))}\n            </>\n          )}\n        </div>\n      )\n    );\n  };\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <div\n        ref={rootRef}\n        role=\"group\"\n        aria-disabled={disabled}\n        aria-label={label || ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        tabIndex={-1}\n        onKeyDown={handleRootKeyDown}\n        className={`blox-slider ${className}`}\n        data-blox-slider=\"\"\n        data-orientation={orientation}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-inverted={inverted ? \"true\" : \"false\"}\n        style={{\n          width: \"100%\", // Add this\n          height: orientation === \"vertical\" ? \"100%\" : \"auto\", // Add this\n          ...directionProps,\n          ...props.style,\n        }}\n        {...props}>\n        {renderContent()}\n      </div>\n    </SliderContext.Provider>\n  );\n};\n\n// Slider Track component\nconst SliderTrack: React.FC<SliderTrackProps> = ({ children, className = \"\", onPointerDown, onPointerMove, onPointerUp, ...props }) => {\n  const { orientation, disabled } = useSlider();\n\n  // Handle pointer events for the track\n  const handlePointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerDown) {\n      onPointerDown(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointerdown\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // Handle pointer move\n  const handlePointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerMove) {\n      onPointerMove(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointermove\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // Handle pointer up\n  const handlePointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerUp) {\n      onPointerUp(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointerup\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  return (\n    <div\n      className={`blox-slider-track ${className}`}\n      data-blox-slider-track=\"\"\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      onPointerUp={handlePointerUp}\n      style={{\n        position: \"relative\",\n        width: orientation === \"horizontal\" ? \"100%\" : `var(--blox-slider-thickness, ${STYLES.Slider.thickness})`,\n        height: orientation === \"horizontal\" ? `var(--blox-slider-thickness, ${STYLES.Slider.thickness})` : `100%`,\n        borderRadius: `var(--blox-slider-border-radius, ${STYLES.Slider.borderRadius})`,\n        backgroundColor: `var(--blox-slider-track-color, ${STYLES.Slider.track.color})`,\n        ...props.style,\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Range component - renamed to avoid conflict\nconst SliderRangeComponent: React.FC<SliderRangeProps> = ({ index = 0, children, className = \"\", ...props }) => {\n  const { orientation, disabled, inverted, ranges, min, max, valueToPercent } = useSlider();\n\n  // Get the range information\n  const range = ranges[index] || ranges[0];\n\n  // Calculate start and end percentages\n  const startPercent = valueToPercent(range.start);\n  const endPercent = valueToPercent(range.end);\n\n  // Determine range style based on orientation\n  const rangeStyle: React.CSSProperties = {\n    // position: \"absolute\", // Keep this\n    borderRadius: `var(--blox-slider-border-radius, ${STYLES.Slider.borderRadius})`,\n    backgroundColor: `var(--blox-slider-range-color, ${STYLES.Slider.range.color})`,\n  };\n\n  if (orientation === \"horizontal\") {\n    const leftPercent = Math.min(startPercent, endPercent);\n    const widthPercent = Math.abs(endPercent - startPercent);\n\n    rangeStyle.left = `${leftPercent}%`;\n    rangeStyle.width = `${widthPercent}%`;\n    rangeStyle.height = \"100%\";\n  } else {\n    const bottomPercent = Math.min(startPercent, endPercent);\n    const heightPercent = Math.abs(endPercent - startPercent);\n\n    rangeStyle.bottom = `${bottomPercent}%`;\n    rangeStyle.height = `${heightPercent}%`;\n    rangeStyle.width = \"100%\";\n  }\n\n  return (\n    <div\n      className={`blox-slider-range ${className}`}\n      data-blox-slider-range=\"\"\n      data-range-index={index}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...rangeStyle,\n        ...props.style,\n        position: \"absolute\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Thumb component\nconst SliderThumb: React.FC<SliderThumbProps> = ({ index = 0, children, className = \"\", ...props }) => {\n  const { orientation, disabled, thumbPositions, isDragging, value, min, max, updateThumb, setDragging } = useSlider();\n\n  // Get this thumb's position\n  const thumbPosition = thumbPositions[index] || thumbPositions[0];\n\n  // Handler for thumb key down\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    // Let the parent handle keyboard navigation\n    // The event will bubble up to the root handler\n  };\n\n  // Calculate accessibility values\n  const valueNow = Array.isArray(value) ? value[index] : value;\n  const valueText = `${valueNow}`;\n\n  // Determine thumb style based on orientation\n  const thumbStyle: React.CSSProperties = {\n    position: `absolute`,\n    transform: `translate(-50%, -50%)`,\n    width: `var(--blox-slider-thumb-size, ${STYLES.Slider.thumb.size})`,\n    height: `var(--blox-slider-thumb-size, ${STYLES.Slider.thumb.size})`,\n    borderRadius: `var(--blox-slider-thumb-radius, ${STYLES.Slider.thumb.radius})`,\n    backgroundColor: `var(--blox-slider-thumb-color, ${STYLES.Slider.thumb.color})`,\n    boxShadow: `var(--blox-slider-thumb-shadow, ${STYLES.Slider.thumb.shadow})`,\n    cursor: disabled ? `not-allowed` : `grab`,\n    // Add grab cursor when dragging\n    ...(isDragging && { cursor: disabled ? \"not-allowed\" : \"grabbing\" }),\n  };\n\n  if (orientation === \"horizontal\") {\n    thumbStyle.left = `${thumbPosition.percent}%`;\n    thumbStyle.top = \"50%\";\n  } else {\n    thumbStyle.bottom = `${thumbPosition.percent}%`;\n    thumbStyle.left = \"50%\";\n  }\n\n  return (\n    <div\n      role=\"slider\"\n      tabIndex={disabled ? -1 : 0}\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={valueNow}\n      aria-valuetext={valueText}\n      aria-disabled={disabled}\n      aria-orientation={orientation}\n      className={`blox-slider-thumb ${className}`}\n      data-blox-slider-thumb=\"\"\n      data-thumb-index={index}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      onKeyDown={handleKeyDown}\n      style={{\n        ...thumbStyle,\n        ...props.style,\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Mark component\nconst SliderMark: React.FC<SliderMarkProps> = ({ value, children, className = \"\", ...props }) => {\n  const { orientation, disabled, min, max, valueToPercent } = useSlider();\n\n  // Calculate position percentage\n  const positionPercent = valueToPercent(value);\n\n  // Determine mark style based on orientation\n  const markStyle: React.CSSProperties = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  if (orientation === \"horizontal\") {\n    markStyle.left = `${positionPercent}%`;\n    markStyle.top = `100%`;\n    markStyle.transform = `translateX(-50%)`;\n    markStyle.marginTop = `var(--blox-slider-mark-spacing, ${STYLES.Slider.mark.spacing})`;\n  } else {\n    markStyle.bottom = `${positionPercent}%`;\n    markStyle.left = `100%`;\n    markStyle.transform = `translateY(50%)`;\n    markStyle.marginLeft = `var(--blox-slider-mark-spacing, ${STYLES.Slider.mark.spacing})`;\n  }\n\n  return (\n    <div\n      className={`blox-slider-mark ${className}`}\n      data-blox-slider-mark=\"\"\n      data-mark-value={value}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...markStyle,\n        ...props.style,\n      }}\n      {...props}>\n      {/* Mark line indicator */}\n      <div\n        className=\"blox-slider-mark-line\"\n        data-blox-slider-mark-line=\"\"\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"var(--blox-slider-mark-color, #e5e7eb)\",\n          width: orientation === \"horizontal\" ? \"2px\" : \"8px\",\n          height: orientation === \"horizontal\" ? \"8px\" : \"2px\",\n          transform: orientation === \"horizontal\" ? \"translateY(-100%)\" : \"translateX(-100%)\",\n        }}\n      />\n\n      {/* Mark label */}\n      {children && (\n        <div\n          className=\"blox-slider-mark-label\"\n          data-blox-slider-mark-label=\"\"\n          style={{\n            fontSize: `var(--blox-slider-mark-font-size, ${STYLES.Slider.mark.fontSize})`,\n            marginTop: orientation === `horizontal` ? `var(--blox-slider-mark-label-spacing, ${STYLES.Slider.mark.label.spacing})` : 0,\n            marginLeft: orientation === `vertical` ? `var(--blox-slider-mark-label-spacing, ${STYLES.Slider.mark.label.spacing})` : 0,\n          }}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Attach the original interfaces to maintain component structure\n// const SliderRange = SliderRangeComponent;\n\n// Attach subcomponents to Slider\nSlider.Track = SliderTrack;\nSlider.Range = SliderRangeComponent;\nSlider.Thumb = SliderThumb;\nSlider.Mark = SliderMark;\n\nexport default Slider;\n","// Checkbox.tsx\nimport React, { useRef, useEffect } from \"react\";\nimport { CheckboxProps } from \"./types\";\n\nconst Checkbox: React.FC<CheckboxProps> = ({ label, checked, defaultChecked, onChange, indeterminate = false, disabled = false, required = false, className = \"\", inputClassName = \"\", labelClassName = \"\", id, labelProps = {}, labelPosition = \"right\", helperText, errorMessage, hasError = false, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-checkbox-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // Reference to the input element\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Set indeterminate state on mount and update\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n\n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(event.target.checked, event);\n    }\n  };\n\n  // Determine whether we're controlled or uncontrolled\n  const isControlled = checked !== undefined;\n\n  return (\n    <div\n      className={`blox-checkbox-container ${className}`}\n      data-blox-checkbox=\"\"\n      data-checked={isControlled ? (checked ? \"true\" : \"false\") : undefined}\n      data-indeterminate={indeterminate ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <input\n        ref={inputRef}\n        type=\"checkbox\"\n        id={uniqueId}\n        checked={checked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={disabled}\n        required={required}\n        className={`blox-checkbox-input ${inputClassName}`}\n        data-blox-checkbox-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={helperText || errorMessage ? `${uniqueId}-description` : undefined}\n        {...props}\n      />\n\n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-checkbox-label ${labelClassName}`}\n          data-blox-checkbox-label=\"\"\n          {...labelProps}>\n          {label}\n        </label>\n      )}\n\n      {(helperText || errorMessage) && (\n        <div\n          id={`${uniqueId}-description`}\n          className={`blox-checkbox-description ${hasError ? \"blox-checkbox-error\" : \"\"}`}\n          data-blox-checkbox-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkbox;\n","// Switch.tsx\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { SwitchProps } from \"./types\";\n\nconst Switch: React.FC<SwitchProps> = ({ checked, defaultChecked = false, onChange, disabled = false, required = false, id, name, value = \"on\", label, labelPosition = \"right\", className = \"\", thumbClassName = \"\", trackClassName = \"\", labelClassName = \"\", helperText, errorMessage, hasError = false, inputProps = {}, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-switch-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // For uncontrolled mode\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\n\n  // Determine if we're in controlled mode\n  const isControlled = checked !== undefined;\n  const isChecked = isControlled ? checked : internalChecked;\n\n  // Handle change event\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) return;\n\n      const newChecked = event.target.checked;\n\n      if (!isControlled) {\n        setInternalChecked(newChecked);\n      }\n\n      if (onChange) {\n        onChange(newChecked);\n      }\n    },\n    [disabled, isControlled, onChange]\n  );\n\n  // Generate description ID if helper text or error message is provided\n  const descriptionId = helperText || errorMessage ? `${uniqueId}-description` : undefined;\n\n  return (\n    <div\n      className={`blox-switch-container ${className}`}\n      data-blox-switch=\"\"\n      data-checked={isChecked ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <label\n        htmlFor={uniqueId}\n        className=\"blox-switch-wrapper\"\n        data-blox-switch-wrapper=\"\"\n        style={{\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          cursor: disabled ? \"not-allowed\" : \"pointer\",\n          flexDirection: labelPosition === \"left\" ? \"row-reverse\" : \"row\",\n        }}\n        {...props}>\n        {/* Hidden input for accessibility and form submission */}\n        <input\n          type=\"checkbox\"\n          id={uniqueId}\n          name={name}\n          value={value}\n          checked={isChecked}\n          defaultChecked={!isControlled ? defaultChecked : undefined}\n          onChange={handleChange}\n          disabled={disabled}\n          required={required}\n          className=\"blox-switch-input\"\n          data-blox-switch-input=\"\"\n          aria-checked={isChecked}\n          aria-disabled={disabled}\n          aria-invalid={hasError}\n          aria-describedby={descriptionId}\n          style={{\n            border: \"0\",\n            clip: \"rect(0 0 0 0)\",\n            clipPath: \"inset(50%)\",\n            height: \"1px\",\n            margin: \"-1px\",\n            overflow: \"hidden\",\n            padding: \"0\",\n            position: \"absolute\",\n            whiteSpace: \"nowrap\",\n            width: \"1px\",\n          }}\n          {...inputProps}\n        />\n\n        {/* The visual switch component */}\n        <div\n          className={`blox-switch-track ${trackClassName}`}\n          data-blox-switch-track=\"\"\n          data-state={isChecked ? \"checked\" : \"unchecked\"}\n          data-disabled={disabled ? \"true\" : \"false\"}\n          style={{\n            position: \"relative\",\n            display: \"inline-flex\",\n            flexShrink: 0,\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            WebkitTapHighlightColor: \"transparent\",\n            // These are just base styles to ensure the component is visible\n            // The user should override these with their own styling\n            width: \"36px\",\n            height: \"20px\",\n            borderRadius: \"10px\",\n          }}>\n          <div\n            className={`blox-switch-thumb ${thumbClassName}`}\n            data-blox-switch-thumb=\"\"\n            data-state={isChecked ? \"checked\" : \"unchecked\"}\n            data-disabled={disabled ? \"true\" : \"false\"}\n            style={{\n              position: \"absolute\",\n              top: \"2px\",\n              left: \"2px\",\n              // These transform properties create the sliding effect\n              transform: isChecked ? \"translateX(16px)\" : \"translateX(0)\",\n              transition: \"transform 150ms\",\n              // These are just base styles to ensure the component is visible\n              width: \"16px\",\n              height: \"16px\",\n              borderRadius: \"8px\",\n            }}\n          />\n        </div>\n\n        {/* Label */}\n        {label && (\n          <span\n            className={`blox-switch-label ${labelClassName}`}\n            data-blox-switch-label=\"\"\n            style={{\n              marginLeft: labelPosition === \"right\" ? \"8px\" : \"0\",\n              marginRight: labelPosition === \"left\" ? \"8px\" : \"0\",\n            }}>\n            {label}\n          </span>\n        )}\n      </label>\n\n      {/* Helper text or error message */}\n      {(helperText || errorMessage) && (\n        <div\n          id={descriptionId}\n          className={`blox-switch-description ${hasError ? \"blox-switch-error\" : \"\"}`}\n          data-blox-switch-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}\n          style={{\n            marginTop: \"4px\",\n            fontSize: \"0.875em\",\n          }}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Switch;\n"],"names":["AccordionContext","createContext","activeIndices","toggleItem","isItemActive","AccordionItemContext","isActive","isDisabled","index","useAccordionItem","context","useContext","Error","Accordion","children","allowMultiple","defaultIndex","controlledActiveIndices","onChange","className","props","initialIndices","useMemo","internalActiveIndices","setInternalActiveIndices","useState","isControlled","undefined","useCallback","updatedIndices","includes","filter","i","contextValue","_jsx","Provider","value","React","Children","map","child","isValidElement","cloneElement","Item","providedIndex","useAccordion","console","warn","itemContextValue","Button","onClick","disabled","type","Panel","jsx","STYLES","thickness","borderRadius","track","color","range","thumb","size","radius","shadow","mark","spacing","fontSize","label","bgColor","boxShadow","maxHeight","body","padding","close","right","top","header","border","footer","gap","title","fontWeight","overlay","width","small","medium","large","full","droppable","outline","bottom","left","minWidth","maxWidth","height","backdropColor","backdropBlur","contentBgColor","offset","DrawerCloseButton","onClose","Drawer","isOpen","placement","minHeight","closeOnEsc","closeOnOutsideClick","contentClassName","backdropClassName","zIndex","trapFocus","usePortal","showCloseButton","animated","lockScroll","renderCloseButton","closeButton","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","id","style","drawerRef","useRef","firstFocusableRef","drawerId","Math","random","toString","substr","current","useEffect","document","overflow","handleKeyDown","event","key","addEventListener","removeEventListener","focus","handleTabKey","focusableElements","querySelectorAll","length","firstElement","lastElement","shiftKey","activeElement","preventDefault","drawerContent","e","target","currentTarget","position","display","backdropFilter","backgroundColor","_jsxs","ref","baseStyles","getDrawerStyles","tabIndex","createPortal","Header","Body","Footer","CloseButton","DropdownContext","toggle","open","useDropdown","Dropdown","controlledIsOpen","onOpenChange","onClickOutside","name","internalIsOpen","setInternalIsOpen","internalValue","setInternalValue","dropdownRef","handleClickOutside","contains","newState","selectedValue","onValueChange","newValue","widthStyle","Trigger","finalDisabled","Menu","selected","onSelect","isSelected","ModalCloseButton","Modal","closeOnOverlayClick","overlayClassName","ariaLabelledby","ariaDescribedby","isCentered","blockScroll","initialFocusRef","modalRef","previousFocusRef","modalId","handleFocusTrap","originalStyle","window","getComputedStyle","getAnimationClass","modalElement","alignItems","justifyContent","getSizeStyle","borderBottom","margin","background","cursor","borderTop","Content","RadioGroupContext","TableContext","data","columns","autoGenerateRowKey","TableHeader","TableBody","TableRow","TableHeaderCell","columnId","sortable","sorted","sortDirection","onSort","center","table","isSorted","sortColumn","effectiveSortDirection","handleSortClick","newDirection","textAlign","TableCell","TableEmpty","colSpan","effectiveColSpan","Table","getRowKey","getRowClassName","column","headerProps","row","rowIndex","rowKey","rowClassName","cellContent","cell","accessor","cellProps","Container","horizontalScroll","overflowX","Caption","Row","HeaderCell","Cell","Empty","Loading","TabsContext","activeTabId","setActiveTabId","orientation","useTabs","Tabs","activeTab","defaultActiveTab","internalActiveTabId","setInternalActiveTabId","tabId","List","contextOrientation","finalOrientation","Tab","Panels","SegmentedControlContext","allowDeselect","SegmentedControl","defaultValue","controlDisabled","useSegmentedControl","DragDropContext","draggingItem","dragPosition","dropTargets","Map","sortableItems","registerDropTarget","unregisterDropTarget","registerSortableItem","unregisterSortableItem","startDrag","endDrag","getDragOverTarget","useDragDrop","Draggable","handle","preview","elementRef","isDragging","handleDragStart","nativeEvent","dragHandleProps","onMouseDown","onTouchStart","renderProps","opacity","userSelect","offsetHeight","DraggableRenderPropsContext","DraggableWithContext","BaseComponent","rest","Droppable","accept","onDrop","canDrop","Array","isArray","isOver","overTarget","handleDrop","updateDropTarget","rect","getBoundingClientRect","isCurrentlyOver","canCurrentlyDrop","SortableItem","item","itemId","direction","updateSortableItem","draggableId","transition","DragDrop","onDragStart","onDragMove","onDragEnd","onDragCancel","setDraggingItem","setDragPosition","dropTargetsRef","sortableItemsRef","dragStartPositionRef","dragTargetRef","draggingRef","lastPositionRef","set","delete","values","x","y","initialX","initialY","MouseEvent","clientX","clientY","touches","coordinates","handleMouseMove","handleTouchMove","passive","handleDragEnd","newX","newY","newPosition","delta","over","touch","finalX","finalY","changedTouches","totalDelta","DragHandle","_Fragment","Fragment","DragOverlay","positionStyles","transform","pointerEvents","transformOrigin","Sortable","items","keyExtractor","onReorder","draggedIndex","setDraggedIndex","findIndex","targetIndex","newItems","draggedItem","splice","containerStyle","flexDirection","isBeingDragged","ContextMenuContext","useContextMenu","ContextMenu","onOpen","enableKeyboard","setIsOpen","setPosition","contextDisabled","onContextMenu","closeOnEscape","menuRef","styleRef","useLayoutEffect","requestAnimationFrame","menuRect","viewportWidth","innerWidth","viewportHeight","innerHeight","max","handleOutsideClick","closeOnSelect","icon","shortcut","jsxs","Group","Separator","SliderContext","useSlider","Slider","min","step","inverted","showMarks","marks","rootRef","parseValues","input","sort","a","b","internalValues","setInternalValues","currentValues","setIsDragging","activeThumbIndex","thumbPositions","clampedValue","percent","ranges","result","push","start","end","percentToValue","round","valueToPercent","getClosestThumb","positionValue","closestDistance","abs","closestIndex","distance","updateThumb","newValues","handleTrackPointerDown","trackRect","thumbIndex","setPointerCapture","pointerId","handleTrackPointerMove","handleTrackPointerUp","releasePointerCapture","setDragging","directionProps","onKeyDown","focusedThumbIndex","_","querySelector","increment","SliderTrack","onPointerDown","onPointerMove","onPointerUp","SliderRangeComponent","SliderThumb","SliderMark","Object","entries","Number","parent","parentElement","customEvent","PointerEvent","bubbles","cancelable","dispatchEvent","stopPropagation","startPercent","endPercent","rangeStyle","leftPercent","widthPercent","bottomPercent","heightPercent","thumbPosition","valueNow","valueText","thumbStyle","positionPercent","markStyle","marginTop","marginLeft","Track","Range","Thumb","Mark","checked","defaultChecked","indeterminate","required","inputClassName","labelClassName","labelProps","labelPosition","helperText","errorMessage","hasError","uniqueId","substring","inputRef","htmlFor","speed","behavior","pauseOnHover","pauseOnFocus","repeat","duration","reverse","delay","containerRef","contentRef","isPaused","setIsPaused","marqueeId","actualDirection","getAnimationDirection","styleId","styleEl","getElementById","createElement","head","appendChild","keyframes","innerHTML","removeChild","repeatedChildren","marginRight","marginBottom","flexShrink","ariaLive","onMouseEnter","onMouseLeave","onFocus","onBlur","actualDuration","slow","normal","fast","animation","animationPlayState","getAnimationStyle","radioGroup","isWithinGroup","groupName","groupValue","groupOnChange","groupDisabled","groupRequired","finalRequired","finalName","isChecked","thumbClassName","trackClassName","inputProps","internalChecked","setInternalChecked","handleChange","newChecked","descriptionId","clip","clipPath","whiteSpace","WebkitTapHighlightColor","content","showDelay","hideDelay","showOnHover","showOnFocus","interactive","tooltipClassName","uncontrolledIsOpen","setUncontrolledIsOpen","triggerRef","tooltipRef","childRef","showTimeoutRef","hideTimeoutRef","currentPlacement","updatePosition","triggerRect","tooltipRect","spaceTop","spaceRight","spaceBottom","spaceLeft","finalPlacement","split","handleShow","clearTimeout","setTimeout","handleHide","handleTooltipMouseEnter","delayedUpdate","childElement","only","error","childProps","enhancedChild","node","trim","tooltipContent","renderTooltip"],"mappings":"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"}