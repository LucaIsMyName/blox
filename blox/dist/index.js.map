{"version":3,"file":"index.js","sources":["../src/components/Accordion/Accordion.tsx","../src/components/Checkbox/Checkbox.tsx","../src/components/Drawer/Drawer.tsx","../src/components/Dropdown/Dropdown.tsx","../src/components/Marquee/Marquee.tsx","../src/components/Modal/Modal.tsx","../src/components/Radio/Radio.tsx","../src/components/Table/Table.tsx","../src/components/Tabs/Tabs.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/SegmentedControl/SegmentedControl.tsx","../src/components/DragDrop/DragDropContext.tsx","../src/components/DragDrop/Draggable.tsx","../src/components/DragDrop/Droppable.tsx","../src/components/DragDrop/Sortable.tsx","../src/components/DragDrop/index.ts","../src/components/DragDrop/DragOverlay.tsx","../src/components/Switch/Switch.tsx","../src/components/ContextMenu/ContextMenu.tsx"],"sourcesContent":["// Accordion.tsx\nimport React, { createContext, useContext, useState, useCallback, useMemo } from 'react';\nimport { \n  AccordionProps, \n  AccordionContextType, \n  AccordionItemProps, \n  AccordionButtonProps, \n  AccordionPanelProps,\n  AccordionItemContextType,\n  AccordionComposition\n} from './types';\n\n// Create context for accordion state\nconst AccordionContext = createContext<AccordionContextType>({\n  activeIndices: [],\n  toggleItem: () => {},\n  isItemActive: () => false,\n});\n\n// Create context for each accordion item\nconst AccordionItemContext = createContext<AccordionItemContextType>({\n  isActive: false,\n  isDisabled: false,\n  index: -1,\n  toggleItem: () => {},\n});\n\n// Hook to use accordion context\nconst useAccordion = () => {\n  const context = useContext(AccordionContext);\n  if (!context) {\n    throw new Error('useAccordion must be used within an Accordion component');\n  }\n  return context;\n};\n\n// Hook to use accordion item context\nconst useAccordionItem = () => {\n  const context = useContext(AccordionItemContext);\n  if (!context) {\n    throw new Error('useAccordionItem must be used within an AccordionItem component');\n  }\n  return context;\n};\n\n// Accordion Item Component\nconst AccordionItem: React.FC<AccordionItemProps> = ({ \n  children, \n  isDisabled = false, \n  index: providedIndex,\n  className = '',\n  ...props \n}) => {\n  const { activeIndices, toggleItem, isItemActive } = useAccordion();\n  \n  // If index is not provided, we'll warn but not throw\n  const index = providedIndex ?? -1;\n  if (index === -1) {\n    console.warn('AccordionItem: index prop is required for proper functioning');\n  }\n  \n  const isActive = isItemActive(index);\n  \n  // Context value for this item\n  const itemContextValue = useMemo(() => ({\n    isActive,\n    isDisabled,\n    index,\n    toggleItem: () => toggleItem(index),\n  }), [isActive, isDisabled, index, toggleItem]);\n  \n  return (\n    <AccordionItemContext.Provider value={itemContextValue}>\n      <div \n        className={`blox-accordion-item ${className}`}\n        data-blox-accordion-item=\"\"\n        data-active={isActive ? 'true' : 'false'}\n        data-disabled={isDisabled ? 'true' : 'false'}\n        {...props}\n      >\n        {children}\n      </div>\n    </AccordionItemContext.Provider>\n  );\n};\n\n// Accordion Button Component\nconst AccordionButton: React.FC<AccordionButtonProps> = ({ \n  children, \n  className = '',\n  ...props \n}) => {\n  const { isActive, isDisabled, toggleItem } = useAccordionItem();\n  \n  return (\n    <button\n      className={`blox-accordion-button ${className}`}\n      onClick={() => !isDisabled && toggleItem()}\n      disabled={isDisabled}\n      aria-expanded={isActive}\n      data-blox-accordion-button=\"\"\n      data-active={isActive ? 'true' : 'false'}\n      data-disabled={isDisabled ? 'true' : 'false'}\n      type=\"button\"\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\n// Accordion Panel Component\nconst AccordionPanel: React.FC<AccordionPanelProps> = ({ \n  children, \n  className = '',\n  ...props \n}) => {\n  const { isActive } = useAccordionItem();\n  \n  if (!isActive) return null;\n  \n  return (\n    <div \n      className={`blox-accordion-panel ${className}`}\n      data-blox-accordion-panel=\"\"\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\n// Main Accordion Component\nconst Accordion: React.FC<AccordionProps> & AccordionComposition = ({ \n  children, \n  allowMultiple = false, \n  defaultIndex = [], \n  activeIndices: controlledActiveIndices,\n  onChange,\n  className = '',\n  ...props \n}) => {\n  // Convert single defaultIndex to array\n  const initialIndices = useMemo(() => {\n    if (typeof defaultIndex === 'number') {\n      return [defaultIndex];\n    }\n    return defaultIndex as number[];\n  }, [defaultIndex]);\n  \n  // State for active indices (for uncontrolled usage)\n  const [internalActiveIndices, setInternalActiveIndices] = useState<number[]>(initialIndices);\n  \n  // Determine if we're controlled or not\n  const isControlled = controlledActiveIndices !== undefined;\n  const activeIndices = isControlled ? controlledActiveIndices : internalActiveIndices;\n  \n  // Toggle accordion item\n  const toggleItem = useCallback((index: number) => {\n    const updatedIndices = activeIndices.includes(index)\n      ? activeIndices.filter((i) => i !== index)\n      : allowMultiple \n        ? [...activeIndices, index] \n        : [index];\n    \n    // Update internal state for uncontrolled usage\n    if (!isControlled) {\n      setInternalActiveIndices(updatedIndices);\n    }\n    \n    // Call onChange callback\n    onChange?.(updatedIndices);\n  }, [activeIndices, allowMultiple, isControlled, onChange]);\n  \n  // Check if an item is active\n  const isItemActive = useCallback((index: number) => {\n    return activeIndices.includes(index);\n  }, [activeIndices]);\n  \n  // Context value\n  const contextValue = useMemo(() => ({\n    activeIndices,\n    toggleItem,\n    isItemActive,\n  }), [activeIndices, toggleItem, isItemActive]);\n  \n  return (\n    <AccordionContext.Provider value={contextValue}>\n      <div \n        className={`blox-accordion ${className}`}\n        data-blox-accordion=\"\"\n        data-allow-multiple={allowMultiple ? 'true' : 'false'}\n        {...props}\n      >\n        {React.Children.map(children, (child, index) => {\n          if (!React.isValidElement(child)) return child;\n          \n          // Auto-inject index if not provided\n          return React.cloneElement(child as React.ReactElement<AccordionItemProps>, {\n            index: (child as React.ReactElement<AccordionItemProps>).props.index ?? index,\n          });\n        })}\n      </div>\n    </AccordionContext.Provider>\n  );\n};\n\n// Attach sub-components\nAccordion.Item = AccordionItem;\nAccordion.Button = AccordionButton;\nAccordion.Panel = AccordionPanel;\n\nexport default Accordion;","// Checkbox.tsx\nimport React, { useRef, useEffect } from 'react';\nimport { CheckboxProps } from './types';\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  label,\n  checked,\n  defaultChecked,\n  onChange,\n  indeterminate = false,\n  disabled = false,\n  required = false,\n  className = '',\n  inputClassName = '',\n  labelClassName = '',\n  id,\n  labelProps = {},\n  labelPosition = 'right',\n  helperText,\n  errorMessage,\n  hasError = false,\n  ...props\n}) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-checkbox-${Math.random().toString(36).substring(2, 9)}`).current;\n  \n  // Reference to the input element\n  const inputRef = useRef<HTMLInputElement>(null);\n  \n  // Set indeterminate state on mount and update\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n  \n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    if (onChange) {\n      onChange(event.target.checked, event);\n    }\n  };\n  \n  // Determine whether we're controlled or uncontrolled\n  const isControlled = checked !== undefined;\n  \n  return (\n    <div \n      className={`blox-checkbox-container ${className}`}\n      data-blox-checkbox=\"\"\n      data-checked={isControlled ? (checked ? 'true' : 'false') : undefined}\n      data-indeterminate={indeterminate ? 'true' : 'false'}\n      data-disabled={disabled ? 'true' : 'false'}\n      data-error={hasError ? 'true' : 'false'}\n      data-required={required ? 'true' : 'false'}\n      data-label-position={labelPosition}\n    >\n      <input\n        ref={inputRef}\n        type=\"checkbox\"\n        id={uniqueId}\n        checked={checked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={disabled}\n        required={required}\n        className={`blox-checkbox-input ${inputClassName}`}\n        data-blox-checkbox-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={\n          (helperText || errorMessage) ? \n            `${uniqueId}-description` : \n            undefined\n        }\n        {...props}\n      />\n      \n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-checkbox-label ${labelClassName}`}\n          data-blox-checkbox-label=\"\"\n          {...labelProps}\n        >\n          {label}\n        </label>\n      )}\n      \n      {(helperText || errorMessage) && (\n        <div \n          id={`${uniqueId}-description`}\n          className={`blox-checkbox-description ${hasError ? 'blox-checkbox-error' : ''}`}\n          data-blox-checkbox-description=\"\"\n          data-error={hasError ? 'true' : 'false'}\n        >\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkbox;","// Drawer.tsx\nimport React, { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DrawerProps, DrawerComposition } from \"./types\";\n\n// Sub-components\nconst DrawerHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    className={`blox-drawer-header ${className}`}\n    data-blox-drawer-header=\"\"\n    {...props}>\n    {children}\n  </header>\n);\n\nconst DrawerBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-drawer-body ${className}`}\n    data-blox-drawer-body=\"\"\n    {...props}>\n    {children}\n  </div>\n);\n\nconst DrawerFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    className={`blox-drawer-footer ${className}`}\n    data-blox-drawer-footer=\"\"\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst DrawerCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    type=\"button\"\n    className={`blox-drawer-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close drawer\"\n    data-blox-drawer-close=\"\"\n    {...props}>\n    {children || (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\">\n        <line\n          x1=\"18\"\n          y1=\"6\"\n          x2=\"6\"\n          y2=\"18\"></line>\n        <line\n          x1=\"6\"\n          y1=\"6\"\n          x2=\"18\"\n          y2=\"18\"></line>\n      </svg>\n    )}\n  </button>\n);\n\nconst Drawer: React.FC<DrawerProps> & DrawerComposition = ({ children, isOpen, onClose, placement = \"right\", minWidth = \"250px\", maxWidth = \"100%\", minHeight = \"250px\", maxHeight = \"100%\", closeOnEsc = true, closeOnOutsideClick = true, contentClassName = \"\", backdropClassName = \"\", zIndex = 1000, trapFocus = true, usePortal = true, showCloseButton = true, animated = true, lockScroll = true, renderCloseButton, closeButton, role = \"dialog\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, id, style, className = \"\", ...props }) => {\n  const drawerRef = useRef<HTMLDivElement>(null);\n  const firstFocusableRef = useRef<HTMLDivElement>(null);\n\n  // Generate a unique ID for the drawer if not provided\n  const drawerId = useRef(id || `blox-drawer-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle body scroll locking\n  useEffect(() => {\n    if (isOpen && lockScroll) {\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return () => {\n      if (lockScroll) {\n        document.body.style.overflow = \"\";\n      }\n    };\n  }, [isOpen, lockScroll]);\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap management\n  useEffect(() => {\n    if (isOpen && trapFocus && drawerRef.current) {\n      // Focus the first focusable element\n      firstFocusableRef.current?.focus();\n\n      const handleTabKey = (event: KeyboardEvent) => {\n        if (event.key !== \"Tab\" || !drawerRef.current) return;\n\n        const focusableElements = drawerRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n        if (focusableElements.length === 0) return;\n\n        const firstElement = focusableElements[0] as HTMLElement;\n        const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n        // If shift+tab and on first element, move to last\n        if (event.shiftKey && document.activeElement === firstElement) {\n          lastElement.focus();\n          event.preventDefault();\n        }\n        // If tab and on last element, move to first\n        else if (!event.shiftKey && document.activeElement === lastElement) {\n          firstElement.focus();\n          event.preventDefault();\n        }\n      };\n\n      document.addEventListener(\"keydown\", handleTabKey);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleTabKey);\n      };\n    }\n  }, [isOpen, trapFocus]);\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (closeOnOutsideClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Calculate styles based on placement\n  const getDrawerStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      ...style,\n      position: \"absolute\",\n      backgroundColor: \"var(--blox-drawer-content-bg-color, white)\",\n    };\n\n    // Add size constraints based on placement\n    if (placement === \"left\" || placement === \"right\") {\n      baseStyles.top = \"var(--blox-drawer-top, 0)\";\n      baseStyles.bottom = \"var(--blox-drawer-bottom, 0)\";\n      baseStyles.minWidth = minWidth;\n      baseStyles.maxWidth = maxWidth;\n      baseStyles.height = \"100%\";\n\n      if (placement === \"left\") {\n        baseStyles.left = \"var(--blox-drawer-left, 0)\";\n      } else {\n        baseStyles.right = \"var(--blox-drawer-right, 0)\";\n      }\n    } else {\n      baseStyles.left = \"var(--blox-drawer-left, 0)\";\n      baseStyles.right = \"var(--blox-drawer-right, 0)\";\n      baseStyles.minHeight = minHeight;\n      baseStyles.maxHeight = maxHeight;\n      baseStyles.width = \"100%\";\n\n      if (placement === \"top\") {\n        baseStyles.top = \"var(--blox-drawer-top, 0)\";\n      } else {\n        baseStyles.bottom = \"var(--blox-drawer-bottom, 0)\";\n      }\n    }\n\n    return baseStyles;\n  };\n\n  // Don't render anything if drawer is not open\n  if (!isOpen) return null;\n\n  const drawerContent = (\n    <div\n      className={`blox-drawer-backdrop ${backdropClassName} ${animated ? \"blox-drawer-animated\" : \"\"}`}\n      data-blox-drawer-backdrop=\"\"\n      onClick={handleBackdropClick}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        zIndex: zIndex,\n        backdropFilter: \"var(--blox-drawer-backdrop-blur, 0px)\",\n        backgroundColor: \"var(--blox-drawer-backdrop-color, rgba(0, 0, 0, 0.5))\",\n      }}>\n      <div\n        ref={drawerRef}\n        className={`blox-drawer-content ${contentClassName} ${className}`}\n        data-blox-drawer-content=\"\"\n        data-blox-drawer-placement={placement}\n        style={getDrawerStyles()}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        id={drawerId}\n        {...props}>\n        {/* Hidden element for initial focus */}\n        <div\n          ref={firstFocusableRef}\n          tabIndex={-1}\n          style={{ outline: \"none\" }}\n        />\n\n        {showCloseButton && (renderCloseButton ? renderCloseButton({ onClick: onClose }) : <DrawerCloseButton onClose={onClose}>{closeButton}</DrawerCloseButton>)}\n\n        {children}\n      </div>\n    </div>\n  );\n\n  return usePortal && typeof document !== \"undefined\" ? createPortal(drawerContent, document.body) : drawerContent;\n};\n\n// Attach sub-components\nDrawer.Header = DrawerHeader;\nDrawer.Body = DrawerBody;\nDrawer.Footer = DrawerFooter;\nDrawer.CloseButton = DrawerCloseButton;\n\nexport default Drawer;\n","// Dropdown.tsx\nimport React, { useRef, useState, useEffect, createContext, useContext } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DropdownProps, DropdownTriggerProps, DropdownMenuProps, DropdownItemProps, DropdownContextValue, DropdownComposition } from \"./types\";\n\n// Create context for dropdown state\nconst DropdownContext = createContext<DropdownContextValue>({\n  isOpen: false,\n  toggle: () => {},\n  open: () => {},\n  close: () => {},\n  isDisabled: false,\n});\n\n// Hook to use dropdown context\nconst useDropdown = () => {\n  const context = useContext(DropdownContext);\n  if (!context) {\n    throw new Error(\"useDropdown must be used within a Dropdown component\");\n  }\n  return context;\n};\n\n// Dropdown Trigger Component\nconst DropdownTrigger: React.FC<DropdownTriggerProps> = ({ children, disabled, className = \"\", ...props }) => {\n  const { isOpen, toggle, isDisabled } = useDropdown();\n  const finalDisabled = disabled || isDisabled;\n\n  return (\n    <button\n      type=\"button\"\n      className={`blox-dropdown-trigger ${className}`}\n      onClick={toggle}\n      disabled={finalDisabled}\n      aria-haspopup=\"true\"\n      aria-expanded={isOpen}\n      data-blox-dropdown-trigger=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Dropdown Menu Component\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({ children, className = \"\", ...props }) => {\n  const { isOpen } = useDropdown();\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className={`blox-dropdown-menu ${className}`}\n      data-blox-dropdown-menu=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      role=\"menu\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dropdown Item Component\nconst DropdownItem: React.FC<DropdownItemProps> = ({ children, value, disabled = false, selected, onSelect, className = \"\", ...props }) => {\n  const { onValueChange, close, selectedValue } = useDropdown();\n  const isSelected = selected !== undefined ? selected : selectedValue === value;\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onValueChange) {\n      onValueChange(value);\n    }\n\n    close();\n  };\n\n  return (\n    <div\n      className={`blox-dropdown-item ${className}`}\n      onClick={handleClick}\n      data-blox-dropdown-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-selected={isSelected ? \"true\" : \"false\"}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Dropdown Component\nconst Dropdown: React.FC<DropdownProps> & DropdownComposition = ({ isOpen: controlledIsOpen, onOpenChange, value, onChange, disabled = false, children, placement = \"bottom-start\", className = \"\", width, onClickOutside, name, ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalIsOpen, setInternalIsOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState<string | number | undefined>(value);\n\n  // Reference to the dropdown container\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  // Determine if we're in controlled mode\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : internalIsOpen;\n\n  // Update internal value when value prop changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setInternalValue(value);\n    }\n  }, [value]);\n\n  // Toggle dropdown\n  const toggle = () => {\n    if (disabled) return;\n\n    const newState = !isOpen;\n\n    if (!isControlled) {\n      setInternalIsOpen(newState);\n    }\n\n    onOpenChange?.(newState);\n  };\n\n  // Open dropdown\n  const open = () => {\n    if (disabled || isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(true);\n    }\n\n    onOpenChange?.(true);\n  };\n\n  // Close dropdown\n  const close = () => {\n    if (!isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(false);\n    }\n\n    onOpenChange?.(false);\n  };\n\n  // Handle value change\n  const handleValueChange = (newValue: string | number) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(newValue);\n    } else {\n      setInternalValue(newValue);\n    }\n  };\n\n  // Handle click outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node) && isOpen) {\n        if (onClickOutside) {\n          onClickOutside();\n        } else {\n          close();\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen, onClickOutside]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    toggle,\n    open,\n    close,\n    selectedValue: value !== undefined ? value : internalValue,\n    onValueChange: handleValueChange,\n    isDisabled: disabled,\n  };\n\n  // Calculate width style\n  const widthStyle = width ? { width: width === true ? \"100%\" : width } : {};\n\n  return (\n    <DropdownContext.Provider value={contextValue}>\n      <div\n        ref={dropdownRef}\n        className={`blox-dropdown ${className}`}\n        data-blox-dropdown=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-placement={placement}\n        style={widthStyle}\n        {...props}>\n        {children}\n\n        {/* Hidden input for form submissions */}\n        {name && (\n          <input\n            type=\"hidden\"\n            name={name}\n            value={value !== undefined ? value : internalValue || \"\"}\n          />\n        )}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\n// Attach sub-components\nDropdown.Trigger = DropdownTrigger;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\n\nexport default Dropdown;\n","// Marquee.tsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport { MarqueeProps } from './types';\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  children,\n  direction = 'left',\n  speed = 'normal',\n  behavior = 'scroll',\n  pauseOnHover = true,\n  pauseOnFocus = true,\n  repeat = 2,\n  gap = 40,\n  duration,\n  reverse = false,\n  delay = 0,\n  className = '',\n  ...props\n}) => {\n  // Use refs to store references to DOM elements\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  \n  // State to track whether the animation is paused\n  const [isPaused, setIsPaused] = useState(false);\n  \n  // Generate a unique ID for this marquee instance (for CSS animations)\n  const marqueeId = useRef(`marquee-${Math.random().toString(36).substr(2, 9)}`);\n  \n  // Calculate the actual duration based on speed if not explicitly provided\n  const calculateDuration = () => {\n    if (duration !== undefined) return duration;\n    \n    // Speed factors in seconds\n    const speedFactors = {\n      slow: 30,\n      normal: 20,\n      fast: 10,\n    };\n    \n    return speedFactors[speed] || 20;\n  };\n  \n  // Determine the animation direction\n  const getAnimationDirection = () => {\n    if (reverse) {\n      switch (direction) {\n        case 'left': return 'right';\n        case 'right': return 'left';\n        case 'up': return 'down';\n        case 'down': return 'up';\n        default: return 'right';\n      }\n    }\n    return direction;\n  };\n  \n  // Create the animation keyframes based on direction\n  useEffect(() => {\n    const actualDirection = getAnimationDirection();\n    \n    // Only create keyframes once for this instance\n    const styleId = `style-${marqueeId.current}`;\n    let styleEl = document.getElementById(styleId) as HTMLStyleElement;\n    \n    if (!styleEl) {\n      styleEl = document.createElement('style');\n      styleEl.id = styleId;\n      document.head.appendChild(styleEl);\n    }\n    \n    // Define keyframes based on direction\n    let keyframes = '';\n    switch (actualDirection) {\n      case 'left':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(0); }\n            100% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'right':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateX(0); }\n          }\n        `;\n        break;\n      case 'up':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(0); }\n            100% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'down':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateY(0); }\n          }\n        `;\n        break;\n    }\n    \n    styleEl.innerHTML = keyframes;\n    \n    // Clean up the style element when component unmounts\n    return () => {\n      if (styleEl && document.head.contains(styleEl)) {\n        document.head.removeChild(styleEl);\n      }\n    };\n  }, [direction, gap, reverse]);\n  \n  // Create the animation style\n  const getAnimationStyle = () => {\n    const actualDuration = calculateDuration();\n    const animationName = marqueeId.current;\n    const animationIterationCount = 'infinite';\n    const animationDirection = behavior === 'alternate' ? 'alternate' : 'normal';\n    \n    return {\n      animation: `${animationName} ${actualDuration}s ${animationDirection} linear ${delay}s ${animationIterationCount}`,\n      animationPlayState: isPaused ? 'paused' : 'running',\n    };\n  };\n  \n  // Create array of repeated children\n  const repeatedChildren = [];\n  for (let i = 0; i < repeat; i++) {\n    repeatedChildren.push(\n      <div\n        key={i}\n        className=\"blox-marquee-item\"\n        data-blox-marquee-item=\"\"\n        style={{\n          ...(direction === 'left' || direction === 'right' \n            ? { marginRight: `${gap}px` } \n            : { marginBottom: `${gap}px` }),\n          flexShrink: 0,\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n  \n  // Event handlers for pausing\n  const handleMouseEnter = () => pauseOnHover && setIsPaused(true);\n  const handleMouseLeave = () => pauseOnHover && setIsPaused(false);\n  const handleFocus = () => pauseOnFocus && setIsPaused(true);\n  const handleBlur = () => pauseOnFocus && setIsPaused(false);\n  \n  // ARIA live settings based on behavior\n  const ariaLive = behavior === 'scroll' ? 'off' : 'polite';\n  \n  return (\n    <div\n      className={`blox-marquee ${className}`}\n      ref={containerRef}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      role=\"marquee\"\n      aria-live={ariaLive}\n      data-blox-marquee=\"\"\n      data-direction={direction}\n      data-behavior={behavior}\n      data-paused={isPaused ? 'true' : 'false'}\n      style={{\n        overflow: 'hidden',\n      }}\n      {...props}\n    >\n      <div\n        ref={contentRef}\n        className=\"blox-marquee-content\"\n        data-blox-marquee-content=\"\"\n        style={{\n          display: 'flex',\n          flexDirection: direction === 'left' || direction === 'right' ? 'row' : 'column',\n          ...getAnimationStyle(),\n        }}\n      >\n        {repeatedChildren}\n      </div>\n    </div>\n  );\n};\n\nexport default Marquee;","// Modal.tsx\nimport React, { useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ModalProps, ModalComposition } from \"./types\";\n\n// Sub-components\nconst ModalContent: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-modal-content ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    className={`blox-modal-header ${className}`}\n    {...props}>\n    {children}\n  </header>\n);\n\nconst ModalBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-modal-body ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    className={`blox-modal-footer ${className}`}\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst ModalCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", ...props }) => (\n  <button\n    type=\"button\"\n    className={`blox-modal-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close\"\n    {...props}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\">\n      <line\n        x1=\"18\"\n        y1=\"6\"\n        x2=\"6\"\n        y2=\"18\"></line>\n      <line\n        x1=\"6\"\n        y1=\"6\"\n        x2=\"18\"\n        y2=\"18\"></line>\n    </svg>\n  </button>\n);\n\nconst Modal: React.FC<ModalProps> & ModalComposition = ({ children, isOpen, onClose, size = \"medium\", title, footer, closeOnEsc = true, closeOnOverlayClick = true, overlayClassName = \"\", contentClassName = \"\", ariaLabelledby, ariaDescribedby, zIndex = 1050, isCentered = true, blockScroll = true, showCloseButton = true, initialFocusRef, animated = true, ...props }) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  // Generate a unique ID for the modal\n  const modalId = useRef(`blox-modal-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap and management\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Save the element that had focus before opening the modal\n    previousFocusRef.current = document.activeElement as HTMLElement;\n\n    // Set focus to the specified element or the modal itself\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (modalRef.current) {\n      modalRef.current.focus();\n    }\n\n    const handleFocusTrap = (event: KeyboardEvent) => {\n      if (!modalRef.current || event.key !== \"Tab\") return;\n\n      const focusableElements = modalRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n      if (focusableElements.length === 0) return;\n\n      const firstElement = focusableElements[0] as HTMLElement;\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n      // If shift+tab and on first element, move to last\n      if (event.shiftKey && document.activeElement === firstElement) {\n        lastElement.focus();\n        event.preventDefault();\n      }\n      // If tab and on last element, move to first\n      else if (!event.shiftKey && document.activeElement === lastElement) {\n        firstElement.focus();\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleFocusTrap);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleFocusTrap);\n\n      // Restore focus when modal closes\n      if (previousFocusRef.current) {\n        previousFocusRef.current.focus();\n      }\n    };\n  }, [isOpen, initialFocusRef]);\n\n  // Prevent body scroll when modal is open\n  useEffect(() => {\n    if (!isOpen || !blockScroll) return;\n\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, [isOpen, blockScroll]);\n\n  const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (closeOnOverlayClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Don't render anything if modal is not open\n  if (!isOpen) return null;\n\n  // Size styles based on size prop\n  const getSizeStyle = () => {\n    switch (size) {\n      case \"small\":\n        return { width: \"var(--blox-modal-width-small, 400px)\" };\n      case \"medium\":\n        return { width: \"var(--blox-modal-width-medium, 600px)\" };\n      case \"large\":\n        return { width: \"var(--blox-modal-width-large, 800px)\" };\n      case \"full\":\n        return { width: \"var(--blox-modal-width-full, calc(100% - 32px))\" };\n      default:\n        return { width: \"var(--blox-modal-width-medium, 600px)\" };\n    }\n  };\n\n  // Animation classes\n  const getAnimationClass = () => {\n    return animated ? \"blox-modal-animated\" : \"\";\n  };\n\n  // Create the modal element\n  const modalElement = (\n    <div\n      className={`blox-modal-overlay ${getAnimationClass()} ${overlayClassName}`}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: isCentered ? \"center\" : \"flex-start\",\n        justifyContent: \"center\",\n        backgroundColor: \"var(--blox-modal-overlay-bg, rgba(0, 0, 0, 0.5))\",\n        zIndex: zIndex,\n        padding: \"var(--blox-modal-overlay-padding, 16px)\",\n        overflow: \"auto\",\n      }}\n      onClick={handleOverlayClick}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby={ariaLabelledby || (title ? `${modalId}-title` : undefined)}\n      aria-describedby={ariaDescribedby}\n      {...props}>\n      <div\n        ref={modalRef}\n        className={`blox-modal ${getAnimationClass()} ${contentClassName}`}\n        style={{\n          position: \"relative\",\n          backgroundColor: \"var(--blox-modal-bg, white)\",\n          borderRadius: \"var(--blox-modal-border-radius, 4px)\",\n          boxShadow: \"var(--blox-modal-box-shadow, 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08))\",\n          maxWidth: \"100%\",\n          maxHeight: \"var(--blox-modal-max-height, calc(100vh - 32px))\",\n          overflow: \"auto\",\n          outline: \"none\",\n          ...getSizeStyle(),\n        }}\n        tabIndex={-1}>\n        {/* Modal header */}\n        {(title || showCloseButton) && (\n          <div\n            className=\"blox-modal-header\"\n            style={{\n              padding: \"var(--blox-modal-header-padding, 16px)\",\n              borderBottom: title ? \"var(--blox-modal-header-border, 1px solid #e0e0e0)\" : \"none\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}>\n            {title && (\n              <h3\n                id={`${modalId}-title`}\n                className=\"blox-modal-title\"\n                style={{\n                  margin: 0,\n                  fontSize: \"var(--blox-modal-title-font-size, 1.25rem)\",\n                  fontWeight: \"var(--blox-modal-title-font-weight, 500)\",\n                  color: \"var(--blox-modal-title-color, inherit)\",\n                }}>\n                {title}\n              </h3>\n            )}\n            {showCloseButton && (\n              <ModalCloseButton\n                onClose={onClose}\n                style={{\n                  position: title ? \"relative\" : \"absolute\",\n                  right: title ? \"0\" : \"var(--blox-modal-close-button-right, 16px)\",\n                  top: title ? \"0\" : \"var(--blox-modal-close-button-top, 16px)\",\n                  background: \"transparent\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  padding: \"var(--blox-modal-close-button-padding, 4px)\",\n                  color: \"var(--blox-modal-close-button-color, #666)\",\n                  borderRadius: \"var(--blox-modal-close-button-border-radius, 50%)\",\n                }}\n              />\n            )}\n          </div>\n        )}\n\n        {/* Modal body */}\n        <div\n          className=\"blox-modal-body\"\n          style={{\n            padding: \"var(--blox-modal-body-padding, 16px)\",\n          }}>\n          {children}\n        </div>\n\n        {/* Modal footer */}\n        {footer && (\n          <div\n            className=\"blox-modal-footer\"\n            style={{\n              padding: \"var(--blox-modal-footer-padding, 16px)\",\n              borderTop: \"var(--blox-modal-footer-border, 1px solid #e0e0e0)\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: \"var(--blox-modal-footer-gap, 8px)\",\n            }}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return createPortal(modalElement, document.body);\n};\n\n// Attach sub-components\nModal.Content = ModalContent;\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\nModal.CloseButton = ModalCloseButton;\n\nexport default Modal;\n","// Radio.tsx\nimport React, { useRef, useContext, createContext, useMemo } from 'react';\nimport { RadioProps, RadioGroupProps } from './types';\n\n// Create context for radio group\ninterface RadioGroupContextType {\n  name?: string;\n  value?: string;\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextType>({});\n\n// Main Radio component\nconst Radio: React.FC<RadioProps> = ({\n  label,\n  value,\n  checked,\n  defaultChecked,\n  onChange,\n  disabled = false,\n  required = false,\n  className = '',\n  inputClassName = '',\n  labelClassName = '',\n  id,\n  name,\n  labelProps = {},\n  labelPosition = 'right',\n  helperText,\n  errorMessage,\n  hasError = false,\n  ...props\n}) => {\n  // Get values from radio group context if available\n  const radioGroup = useContext(RadioGroupContext);\n  \n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-radio-${Math.random().toString(36).substring(2, 9)}`).current;\n  \n  // Use group props if available, otherwise use individual props\n  const isWithinGroup = !!radioGroup.name;\n  const groupName = radioGroup.name;\n  const groupValue = radioGroup.value;\n  const groupOnChange = radioGroup.onChange;\n  const groupDisabled = radioGroup.disabled;\n  const groupRequired = radioGroup.required;\n  \n  // Determine final props\n  const finalDisabled = disabled || (isWithinGroup ? groupDisabled : false);\n  const finalRequired = required || (isWithinGroup ? groupRequired : false);\n  const finalName = isWithinGroup ? groupName : name;\n  \n  // Determine whether the radio is checked (for controlled usage within a group)\n  const isChecked = isWithinGroup \n    ? groupValue === value \n    : checked;\n  \n  // Determine whether we're controlled or uncontrolled\n  const isControlled = isWithinGroup\n    ? groupValue !== undefined\n    : checked !== undefined;\n  \n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (finalDisabled) return;\n    \n    if (isWithinGroup) {\n      groupOnChange?.(value, event);\n    } else {\n      onChange?.(value, event);\n    }\n  };\n  \n  return (\n    <div \n      className={`blox-radio-container ${className}`}\n      data-blox-radio=\"\"\n      data-checked={isControlled ? (isChecked ? 'true' : 'false') : undefined}\n      data-disabled={finalDisabled ? 'true' : 'false'}\n      data-error={hasError ? 'true' : 'false'}\n      data-required={finalRequired ? 'true' : 'false'}\n      data-label-position={labelPosition}\n    >\n      <input\n        type=\"radio\"\n        id={uniqueId}\n        name={finalName}\n        value={value}\n        checked={isChecked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={finalDisabled}\n        required={finalRequired}\n        className={`blox-radio-input ${inputClassName}`}\n        data-blox-radio-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={\n          (helperText || errorMessage) ? \n            `${uniqueId}-description` : \n            undefined\n        }\n        {...props}\n      />\n      \n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-radio-label ${labelClassName}`}\n          data-blox-radio-label=\"\"\n          {...labelProps}\n        >\n          {label}\n        </label>\n      )}\n      \n      {(helperText || errorMessage) && (\n        <div \n          id={`${uniqueId}-description`}\n          className={`blox-radio-description ${hasError ? 'blox-radio-error' : ''}`}\n          data-blox-radio-description=\"\"\n          data-error={hasError ? 'true' : 'false'}\n        >\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Radio Group Component\nconst RadioGroup: React.FC<RadioGroupProps> = ({\n  children,\n  name,\n  value,\n  defaultValue,\n  onChange,\n  disabled = false,\n  required = false,\n  direction = 'vertical',\n  className = '',\n  label,\n  helperText,\n  errorMessage,\n  hasError = false,\n  ...props\n}) => {\n  // Handle change event in the group\n  const handleChange = (radioValue: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(radioValue);\n  };\n  \n  // Create context value\n  const contextValue = useMemo(() => ({\n    name,\n    value,\n    onChange: handleChange,\n    disabled,\n    required,\n  }), [name, value, disabled, required]);\n  \n  // Generate a unique ID for the group\n  const groupId = useRef(`blox-radio-group-${Math.random().toString(36).substring(2, 9)}`).current;\n  \n  return (\n    <RadioGroupContext.Provider value={contextValue}>\n      <div \n        className={`blox-radio-group ${className}`}\n        data-blox-radio-group=\"\"\n        data-direction={direction}\n        data-disabled={disabled ? 'true' : 'false'}\n        data-error={hasError ? 'true' : 'false'}\n        role=\"radiogroup\"\n        aria-labelledby={label ? `${groupId}-label` : undefined}\n        aria-describedby={\n          (helperText || errorMessage) ? \n            `${groupId}-description` : \n            undefined\n        }\n        {...props}\n      >\n        {label && (\n          <div \n            id={`${groupId}-label`}\n            className=\"blox-radio-group-label\"\n            data-blox-radio-group-label=\"\"\n          >\n            {label}\n          </div>\n        )}\n        \n        <div \n          className=\"blox-radio-group-items\"\n          data-blox-radio-group-items=\"\"\n        >\n          {children}\n        </div>\n        \n        {(helperText || errorMessage) && (\n          <div \n            id={`${groupId}-description`}\n            className={`blox-radio-group-description ${hasError ? 'blox-radio-group-error' : ''}`}\n            data-blox-radio-group-description=\"\"\n            data-error={hasError ? 'true' : 'false'}\n          >\n            {hasError ? errorMessage : helperText}\n          </div>\n        )}\n      </div>\n    </RadioGroupContext.Provider>\n  );\n};\n\n// Attach RadioGroup as a property of Radio\nRadio.Group = RadioGroup;\n\nexport default Radio;","// Table.tsx\nimport React, { createContext, useContext, useCallback, useMemo } from \"react\";\nimport { TableProps, TableHeaderProps, TableBodyProps, TableRowProps, TableHeaderCellProps, TableCellProps, TableCaptionProps, TableContainerProps, TableEmptyStateProps, TableLoadingStateProps, TableContextValue, TableColumn, SortDirection, TableComposition } from \"./types\";\n\n// Create context for table state\nconst TableContext = createContext<TableContextValue<any>>({\n  data: [],\n  columns: [],\n  autoGenerateRowKey: true,\n});\n\n// Hook to use table context\nconst useTable = () => {\n  const context = useContext(TableContext);\n  if (!context) {\n    throw new Error(\"useTable must be used within a Table component\");\n  }\n  return context;\n};\n\n// Table Container Component\nconst TableContainer: React.FC<TableContainerProps> = ({ children, horizontalScroll = false, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-table-container ${className}`}\n      data-blox-table-container=\"\"\n      data-horizontal-scroll={horizontalScroll}\n      style={{\n        overflowX: horizontalScroll ? \"auto\" : undefined,\n        width: \"100%\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Table Caption Component\nconst TableCaption: React.FC<TableCaptionProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <caption\n      className={`blox-table-caption ${className}`}\n      data-blox-table-caption=\"\"\n      {...props}>\n      {children}\n    </caption>\n  );\n};\n\n// Table Header Component\nconst TableHeader: React.FC<TableHeaderProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <thead\n      className={`blox-table-header ${className}`}\n      data-blox-table-header=\"\"\n      {...props}>\n      {children}\n    </thead>\n  );\n};\n\n// Table Body Component\nconst TableBody: React.FC<TableBodyProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tbody\n      className={`blox-table-body ${className}`}\n      data-blox-table-body=\"\"\n      {...props}>\n      {children}\n    </tbody>\n  );\n};\n\n// Table Row Component\nconst TableRow: React.FC<TableRowProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tr\n      className={`blox-table-row ${className}`}\n      data-blox-table-row=\"\"\n      {...props}>\n      {children}\n    </tr>\n  );\n};\n\n// Table Header Cell Component\nconst TableHeaderCell: React.FC<TableHeaderCellProps> = ({ children, columnId, sortable = false, sorted = false, sortDirection = \"none\", onSort, center = false, width, className = \"\", style, ...props }) => {\n  // Internal props for the context version\n  const table = useContext(TableContext);\n\n  // Determine if this column is sorted (when used within Table)\n  const isSorted = sorted || (columnId && table.sortColumn === columnId);\n  const effectiveSortDirection = isSorted ? sortDirection || table.sortDirection || \"none\" : \"none\";\n\n  // Handle sort click\n  const handleSortClick = useCallback(() => {\n    if (!sortable) return;\n\n    if (onSort && columnId) {\n      onSort(columnId);\n    } else if (table.onSort && columnId) {\n      let newDirection: SortDirection = \"asc\";\n\n      if (columnId === table.sortColumn) {\n        if (table.sortDirection === \"asc\") {\n          newDirection = \"desc\";\n        } else if (table.sortDirection === \"desc\") {\n          newDirection = \"none\";\n        }\n      }\n\n      table.onSort(columnId, newDirection);\n    }\n  }, [sortable, onSort, columnId, table]);\n\n  return (\n    <th\n      className={`blox-table-header-cell ${className}`}\n      data-blox-table-header-cell=\"\"\n      data-sortable={sortable}\n      data-sorted={isSorted}\n      data-sort-direction={effectiveSortDirection}\n      data-center={center}\n      onClick={sortable ? handleSortClick : undefined}\n      style={{\n        ...(width ? { width } : {}),\n        ...(center ? { textAlign: \"center\" } : {}),\n        cursor: sortable ? \"pointer\" : undefined,\n        ...style,\n      }}\n      {...props}>\n      {children}\n      {sortable && (\n        <span\n          className=\"blox-table-sort-icon\"\n          data-blox-table-sort-icon=\"\">\n          {effectiveSortDirection === \"asc\" && \"▲\"}\n          {effectiveSortDirection === \"desc\" && \"▼\"}\n          {effectiveSortDirection === \"none\" && \"⇅\"}\n        </span>\n      )}\n    </th>\n  );\n};\n\n// Table Cell Component\nconst TableCell: React.FC<TableCellProps> = ({ children, columnId, center = false, className = \"\", style, ...props }) => {\n  return (\n    <td\n      className={`blox-table-cell ${className}`}\n      data-blox-table-cell=\"\"\n      data-column-id={columnId}\n      data-center={center}\n      style={{\n        ...(center ? { textAlign: \"center\" } : {}),\n        ...style,\n      }}\n      {...props}>\n      {children}\n    </td>\n  );\n};\n\n// Table Empty State Component\nconst TableEmpty: React.FC<TableEmptyStateProps> = ({ children = \"No data available\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-empty ${className}`}\n      data-blox-table-empty=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-empty-cell\"\n        data-blox-table-empty-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Table Loading State Component\nconst TableLoading: React.FC<TableLoadingStateProps> = ({ children = \"Loading...\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-loading ${className}`}\n      data-blox-table-loading=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-loading-cell\"\n        data-blox-table-loading-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Main Table Component\nconst Table = <T extends Record<string, any> = any>({ data = [], columns = [], sortColumn, sortDirection = \"none\", onSort, autoGenerateRowKey = true, getRowKey, getRowClassName, children, className = \"\", ...props }: TableProps<T> & { children?: React.ReactNode }) => {\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      data,\n      columns,\n      sortColumn,\n      sortDirection,\n      onSort,\n      autoGenerateRowKey,\n      getRowKey,\n      getRowClassName,\n    }),\n    [data, columns, sortColumn, sortDirection, onSort, autoGenerateRowKey, getRowKey, getRowClassName]\n  );\n\n  // Render function for compositional usage vs. declarative\n  const renderContent = () => {\n    // If children are provided, use compositional pattern\n    if (children) {\n      return children;\n    }\n\n    // Otherwise, use declarative pattern with columns and data\n    return (\n      <>\n        <TableHeader>\n          <TableRow>\n            {columns.map((column) => (\n              <TableHeaderCell\n                key={column.id}\n                columnId={column.id}\n                sortable={column.sortable}\n                center={column.center}\n                width={column.width}\n                {...column.headerProps}>\n                {column.header}\n              </TableHeaderCell>\n            ))}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.length === 0 ? (\n            <TableEmpty colSpan={columns.length} />\n          ) : (\n            data.map((row, rowIndex) => {\n              const rowKey = getRowKey ? getRowKey(row, rowIndex) : autoGenerateRowKey ? `row-${rowIndex}` : undefined;\n\n              const rowClassName = getRowClassName ? getRowClassName(row, rowIndex) : \"\";\n\n              return (\n                <TableRow\n                  key={rowKey}\n                  className={rowClassName}>\n                  {columns.map((column) => {\n                    // Get cell content\n                    let cellContent;\n                    if (column.cell) {\n                      const value = column.accessor ? column.accessor(row, rowIndex) : row[column.id];\n                      cellContent = column.cell(value, row, rowIndex);\n                    } else if (column.accessor) {\n                      cellContent = column.accessor(row, rowIndex);\n                    } else {\n                      cellContent = row[column.id];\n                    }\n\n                    return (\n                      <TableCell\n                        key={`${rowKey}-${column.id}`}\n                        columnId={column.id}\n                        center={column.center}\n                        {...column.cellProps}>\n                        {cellContent}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })\n          )}\n        </TableBody>\n      </>\n    );\n  };\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <table\n        className={`blox-table ${className}`}\n        data-blox-table=\"\"\n        {...props}>\n        {renderContent()}\n      </table>\n    </TableContext.Provider>\n  );\n};\n\n// Attach sub-components\nTable.Container = TableContainer;\nTable.Caption = TableCaption;\nTable.Header = TableHeader;\nTable.Body = TableBody;\nTable.Row = TableRow;\nTable.HeaderCell = TableHeaderCell;\nTable.Cell = TableCell;\nTable.Empty = TableEmpty;\nTable.Loading = TableLoading;\n\nexport default Table;\n","// Tabs.tsx\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { TabsProps, TabListProps, TabProps, TabPanelsProps, TabPanelProps, TabsContextType, TabsComposition } from \"./types\";\n\n// Create context for tabs state\nconst TabsContext = createContext<TabsContextType>({\n  activeTabId: \"\",\n  setActiveTabId: () => {},\n  orientation: \"horizontal\",\n  animated: true,\n});\n\n// Hook to use tabs context\nconst useTabs = () => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"Tabs compound components must be used within a Tabs component\");\n  }\n  return context;\n};\n\n// TabList Component\nconst TabList: React.FC<TabListProps> = ({ children, orientation, className = \"\", ...props }) => {\n  const { orientation: contextOrientation } = useTabs();\n  const finalOrientation = orientation || contextOrientation;\n\n  return (\n    <div\n      className={`blox-tab-list ${className}`}\n      role=\"tablist\"\n      aria-orientation={finalOrientation}\n      data-blox-tab-list=\"\"\n      data-orientation={finalOrientation}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Tab Component\nconst Tab: React.FC<TabProps> = ({ id, children, disabled = false, className = \"\", ...props }) => {\n  const { activeTabId, setActiveTabId } = useTabs();\n  const isActive = activeTabId === id;\n\n  const handleClick = () => {\n    if (!disabled) {\n      setActiveTabId(id);\n    }\n  };\n\n  return (\n    <button\n      id={`blox-tab-${id}`}\n      role=\"tab\"\n      aria-selected={isActive}\n      aria-controls={`blox-tabpanel-${id}`}\n      tabIndex={isActive ? 0 : -1}\n      disabled={disabled}\n      onClick={handleClick}\n      className={`blox-tab ${className}`}\n      data-blox-tab=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// TabPanels Component\nconst TabPanels: React.FC<TabPanelsProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-tab-panels ${className}`}\n      data-blox-tab-panels=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// TabPanel Component\nconst TabPanel: React.FC<TabPanelProps> = ({ tabId, children, className = \"\", ...props }) => {\n  const { activeTabId, animated } = useTabs();\n  const isActive = activeTabId === tabId;\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      id={`blox-tabpanel-${tabId}`}\n      role=\"tabpanel\"\n      aria-labelledby={`blox-tab-${tabId}`}\n      className={`blox-tab-panel ${className}`}\n      data-blox-tab-panel=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-animated={animated ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Tabs Component\nconst Tabs: React.FC<TabsProps> & TabsComposition = ({ activeTab, defaultActiveTab, onChange, orientation = \"horizontal\", animated = true, children, className = \"\", ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalActiveTabId, setInternalActiveTabId] = useState<string>(() => {\n    // Try to find the first tab id from children if no default or active tab is provided\n    if (defaultActiveTab) return defaultActiveTab;\n\n    // This is just a fallback, preferably the user should provide defaultActiveTab\n    return \"\";\n  });\n\n  // Determine if we're in controlled mode\n  const isControlled = activeTab !== undefined;\n  const activeTabId = isControlled ? activeTab : internalActiveTabId;\n\n  // Handler for tab changes\n  const handleTabChange = (tabId: string) => {\n    if (!isControlled) {\n      setInternalActiveTabId(tabId);\n    }\n\n    if (onChange) {\n      onChange(tabId);\n    }\n  };\n\n  // Update internal active tab when activeTab prop changes (controlled mode)\n  useEffect(() => {\n    if (activeTab !== undefined) {\n      setInternalActiveTabId(activeTab);\n    }\n  }, [activeTab]);\n\n  // Context value\n  const contextValue = {\n    activeTabId,\n    setActiveTabId: handleTabChange,\n    orientation,\n    animated,\n  };\n\n  return (\n    <TabsContext.Provider value={contextValue}>\n      <div\n        className={`blox-tabs ${className}`}\n        data-blox-tabs=\"\"\n        data-orientation={orientation}\n        {...props}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  );\n};\n\n// Attach sub-components\nTabs.List = TabList;\nTabs.Tab = Tab;\nTabs.Panels = TabPanels;\nTabs.Panel = TabPanel;\n\nexport default Tabs;\n","// Tooltip.tsx\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { TooltipProps, TooltipPlacement } from \"./types\";\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  content,\n  isOpen: controlledIsOpen,\n  placement = \"bottom\",\n  offset = 8,\n  showDelay = 0,\n  hideDelay = 0,\n  showOnHover = true,\n  showOnFocus = true,\n  id,\n  closeOnEsc = true,\n  interactive = false,\n  zIndex = 1000,\n  isDisabled = false,\n  tooltipClassName = \"\",\n  minWidth,\n  maxWidth,\n  className = \"\",\n  children,\n  ...rest\n}) => {\n  // For controlled/uncontrolled usage\n  const [uncontrolledIsOpen, setUncontrolledIsOpen] = useState(false);\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : uncontrolledIsOpen;\n\n  // Refs for DOM elements\n  const triggerRef = useRef<HTMLElement | null>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const childRef = useRef<HTMLElement | null>(null);\n  \n  // Timers for delay\n  const showTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // State for position\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0,\n    currentPlacement: placement\n  });\n\n  // Save a reference to the child element\n  useEffect(() => {\n    if (childRef.current && React.isValidElement(children)) {\n      triggerRef.current = childRef.current;\n    }\n  }, [children]);\n\n  // Calculate tooltip position based on trigger element and placement\n  const updatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current || !isOpen) return;\n\n    const triggerRect = triggerRef.current.getBoundingClientRect();\n    const tooltipRect = tooltipRef.current.getBoundingClientRect();\n\n    // Available space in different directions\n    const spaceTop = triggerRect.top;\n    const spaceRight = window.innerWidth - triggerRect.right;\n    const spaceBottom = window.innerHeight - triggerRect.bottom;\n    const spaceLeft = triggerRect.left;\n\n    // Determine best placement based on available space\n    let finalPlacement: TooltipPlacement = placement;\n    const primaryPlacement = placement.split('-')[0] as 'top' | 'right' | 'bottom' | 'left';\n\n    // Check if preferred placement has enough space, otherwise flip to opposite side\n    switch (primaryPlacement) {\n      case 'top':\n        if (spaceTop < tooltipRect.height + offset && spaceBottom > tooltipRect.height + offset) {\n          finalPlacement = placement.includes('start') \n            ? 'bottom-start' \n            : placement.includes('end') \n              ? 'bottom-end' \n              : 'bottom';\n        }\n        break;\n      case 'right':\n        if (spaceRight < tooltipRect.width + offset && spaceLeft > tooltipRect.width + offset) {\n          finalPlacement = placement.includes('start') \n            ? 'left-start' \n            : placement.includes('end') \n              ? 'left-end' \n              : 'left';\n        }\n        break;\n      case 'bottom':\n        if (spaceBottom < tooltipRect.height + offset && spaceTop > tooltipRect.height + offset) {\n          finalPlacement = placement.includes('start') \n            ? 'top-start' \n            : placement.includes('end') \n              ? 'top-end' \n              : 'top';\n        }\n        break;\n      case 'left':\n        if (spaceLeft < tooltipRect.width + offset && spaceRight > tooltipRect.width + offset) {\n          finalPlacement = placement.includes('start') \n            ? 'right-start' \n            : placement.includes('end') \n              ? 'right-end' \n              : 'right';\n        }\n        break;\n    }\n\n    // Calculate position based on final placement\n    let x = 0;\n    let y = 0;\n\n    switch (finalPlacement) {\n      case 'top':\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case 'top-start':\n        x = triggerRect.left;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case 'top-end':\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case 'right':\n        x = triggerRect.right + offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case 'right-start':\n        x = triggerRect.right + offset;\n        y = triggerRect.top;\n        break;\n      case 'right-end':\n        x = triggerRect.right + offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n      case 'bottom':\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.bottom + offset;\n        break;\n      case 'bottom-start':\n        x = triggerRect.left;\n        y = triggerRect.bottom + offset;\n        break;\n      case 'bottom-end':\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.bottom + offset;\n        break;\n      case 'left':\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case 'left-start':\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top;\n        break;\n      case 'left-end':\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n    }\n\n    // Keep tooltip within viewport bounds\n    // Adjust x position\n    if (x < 10) {\n      x = 10;\n    } else if (x + tooltipRect.width > window.innerWidth - 10) {\n      x = window.innerWidth - tooltipRect.width - 10;\n    }\n\n    // Adjust y position\n    if (y < 10) {\n      y = 10;\n    } else if (y + tooltipRect.height > window.innerHeight - 10) {\n      y = window.innerHeight - tooltipRect.height - 10;\n    }\n\n    setPosition({\n      x,\n      y,\n      currentPlacement: finalPlacement\n    });\n  }, [isOpen, placement, offset]);\n\n  // Handle showing the tooltip\n  const handleShow = useCallback(() => {\n    if (isDisabled) return;\n    \n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n    \n    if (!isControlled) {\n      if (showDelay) {\n        showTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(true);\n        }, showDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(true);\n      }\n    }\n  }, [isControlled, isDisabled, showDelay]);\n\n  // Handle hiding the tooltip\n  const handleHide = useCallback(() => {\n    if (isDisabled) return;\n    \n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current);\n      showTimeoutRef.current = null;\n    }\n    \n    if (!isControlled) {\n      if (hideDelay) {\n        hideTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(false);\n        }, hideDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(false);\n      }\n    }\n  }, [isControlled, isDisabled, hideDelay]);\n\n  // Prevent hiding when interacting with tooltip\n  const handleTooltipMouseEnter = useCallback(() => {\n    if (interactive && hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n  }, [interactive]);\n\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        handleHide();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, closeOnEsc, handleHide]);\n\n  // Update position when tooltip opens or window resizes\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Update position immediately\n    updatePosition();\n    \n    // And then after a short delay to ensure content is fully rendered\n    const delayedUpdate = setTimeout(updatePosition, 10);\n\n    // Update on resize\n    window.addEventListener('resize', updatePosition);\n    window.addEventListener('scroll', updatePosition, true);\n    \n    return () => {\n      clearTimeout(delayedUpdate);\n      window.removeEventListener('resize', updatePosition);\n      window.removeEventListener('scroll', updatePosition, true);\n    };\n  }, [isOpen, updatePosition]);\n\n  // Clear timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) clearTimeout(showTimeoutRef.current);\n      if (hideTimeoutRef.current) clearTimeout(hideTimeoutRef.current);\n    };\n  }, []);\n\n  // Render tooltip\n  const renderTooltip = () => {\n    if (!isOpen) return null;\n\n    const tooltipContent = (\n      <div\n        ref={tooltipRef}\n        role=\"tooltip\"\n        id={id}\n        className={`blox-tooltip ${tooltipClassName}`}\n        style={{\n          position: 'fixed',\n          left: `${position.x}px`,\n          top: `${position.y}px`,\n          zIndex,\n          minWidth: minWidth,\n          maxWidth: maxWidth,\n          '--blox-tooltip-min-width': typeof minWidth === 'number' ? `${minWidth}px` : minWidth,\n          '--blox-tooltip-max-width': typeof maxWidth === 'number' ? `${maxWidth}px` : maxWidth,\n          '--blox-tooltip-offset': `${offset}px`,\n          '--blox-tooltip-placement': position.currentPlacement,\n        } as React.CSSProperties}\n        onMouseEnter={handleTooltipMouseEnter}\n        onMouseLeave={interactive ? handleHide : undefined}\n        data-placement={position.currentPlacement}\n      >\n        {content}\n      </div>\n    );\n\n    return createPortal(tooltipContent, document.body);\n  };\n\n  // Clone the child element and attach event handlers\n  const childElement = React.Children.only(children);\n  \n  if (!React.isValidElement(childElement)) {\n    console.error('Tooltip children must be a valid React element');\n    return <>{children}</>;\n  }\n  \n  const childProps: React.HTMLAttributes<HTMLElement> = {};\n  \n  if (showOnHover) {\n    childProps.onMouseEnter = (e) => {\n      handleShow();\n      childElement.props.onMouseEnter?.(e);\n    };\n    \n    childProps.onMouseLeave = (e) => {\n      handleHide();\n      childElement.props.onMouseLeave?.(e);\n    };\n  }\n  \n  if (showOnFocus) {\n    childProps.onFocus = (e) => {\n      handleShow();\n      childElement.props.onFocus?.(e);\n    };\n    \n    childProps.onBlur = (e) => {\n      handleHide();\n      childElement.props.onBlur?.(e);\n    };\n  }\n  \n  // Add the ref to the child element\n  const enhancedChild = React.cloneElement(\n    childElement,\n    {\n      ...childProps,\n      ref: (node: HTMLElement) => {\n        // Forward the ref to the child if it has one\n        if (typeof childElement.ref === 'function') {\n          childElement.ref(node);\n        } else if (childElement.ref) {\n          (childElement.ref as React.MutableRefObject<HTMLElement>).current = node;\n        }\n        \n        childRef.current = node;\n        triggerRef.current = node;\n      },\n      className: `${childElement.props.className || ''} ${className}`.trim()\n    }\n  );\n\n  return (\n    <>\n      {enhancedChild}\n      {renderTooltip()}\n    </>\n  );\n};\n\nexport default Tooltip;","// SegmentedControl.tsx\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport {\n  SegmentedControlProps,\n  SegmentItemProps,\n  SegmentedControlContextType,\n  SegmentedControlComposition\n} from './types';\n\n// Create context for segmented control state\nconst SegmentedControlContext = createContext<SegmentedControlContextType>({\n  selectedValue: null,\n  onChange: () => {},\n  allowDeselect: false,\n  disabled: false\n});\n\n// Hook to use segmented control context\nconst useSegmentedControl = () => {\n  const context = useContext(SegmentedControlContext);\n  if (!context) {\n    throw new Error('useSegmentedControl must be used within a SegmentedControl component');\n  }\n  return context;\n};\n\n// Segment Item Component\nconst SegmentItem: React.FC<SegmentItemProps> = ({ \n  value, \n  disabled = false, \n  children, \n  className = '',\n  ...props \n}) => {\n  const { selectedValue, onChange, allowDeselect, disabled: controlDisabled } = useSegmentedControl();\n  const isSelected = selectedValue === value;\n  const isDisabled = disabled || controlDisabled;\n  \n  const handleClick = () => {\n    if (isDisabled) return;\n    \n    if (isSelected && allowDeselect) {\n      onChange('');\n    } else if (!isSelected) {\n      onChange(value);\n    }\n  };\n  \n  return (\n    <button\n      type=\"button\"\n      role=\"radio\"\n      aria-checked={isSelected}\n      disabled={isDisabled}\n      className={`blox-segment-item ${className}`}\n      data-blox-segment-item=\"\"\n      data-state={isSelected ? 'selected' : 'unselected'}\n      data-disabled={isDisabled ? 'true' : 'false'}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\n// Main SegmentedControl Component\nconst SegmentedControl: React.FC<SegmentedControlProps> & SegmentedControlComposition = ({\n  value,\n  defaultValue = '',\n  onChange,\n  allowDeselect = false,\n  disabled = false,\n  children,\n  className = '',\n  ...props\n}) => {\n  // For internal state (uncontrolled mode)\n  const [internalValue, setInternalValue] = useState<string>(defaultValue);\n  \n  // Determine if we're in controlled mode\n  const isControlled = value !== undefined;\n  const selectedValue = isControlled ? value : internalValue;\n  \n  // Handle value change\n  const handleChange = useCallback((newValue: string) => {\n    if (!isControlled) {\n      setInternalValue(newValue);\n    }\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  }, [isControlled, onChange]);\n  \n  // Context value\n  const contextValue = {\n    selectedValue,\n    onChange: handleChange,\n    allowDeselect,\n    disabled\n  };\n  \n  return (\n    <SegmentedControlContext.Provider value={contextValue}>\n      <div \n        role=\"radiogroup\"\n        className={`blox-segmented-control ${className}`}\n        data-blox-segmented-control=\"\"\n        data-disabled={disabled ? 'true' : 'false'}\n        {...props}\n      >\n        {children}\n      </div>\n    </SegmentedControlContext.Provider>\n  );\n};\n\n// Attach sub-components\nSegmentedControl.Item = SegmentItem;\n\nexport default SegmentedControl;","// DragDropContext.tsx\nimport React, { createContext, useContext, useRef, useState, useEffect, useCallback } from \"react\";\nimport { DragContextValue, DragDropProviderProps, DragItem, Coordinates, DropTargetInfo, SortableItemInfo, DragStartEvent, DragMoveEvent, DragEndEvent } from \"./types\";\n\n// Create context with default values\nconst DragDropContext = createContext<DragContextValue>({\n  draggingItem: null,\n  dragPosition: null,\n  dropTargets: new Map(),\n  sortableItems: new Map(),\n  registerDropTarget: () => {},\n  unregisterDropTarget: () => {},\n  registerSortableItem: () => {},\n  unregisterSortableItem: () => {},\n  startDrag: () => {},\n  endDrag: () => {},\n  getDragOverTarget: () => null,\n});\n\n// Hook to use the drag and drop context\nexport const useDragDrop = () => useContext(DragDropContext);\n\n// Provider component\nexport const DragDropProvider: React.FC<DragDropProviderProps> = ({ children, onDragStart, onDragMove, onDragEnd, onDragCancel }) => {\n  // State for tracking the currently dragged item\n  const [draggingItem, setDraggingItem] = useState<DragItem | null>(null);\n\n  // State for tracking the current position of the drag\n  const [dragPosition, setDragPosition] = useState<Coordinates | null>(null);\n\n  // Refs for tracking drop targets and sortable items\n  const dropTargetsRef = useRef(new Map<string, DropTargetInfo>());\n  const sortableItemsRef = useRef(new Map<string, SortableItemInfo>());\n\n  // Refs for tracking drag state\n  const dragStartPositionRef = useRef<Coordinates | null>(null);\n  const dragTargetRef = useRef<HTMLElement | null>(null);\n  const draggingRef = useRef<boolean>(false);\n  const lastPositionRef = useRef<Coordinates | null>(null);\n\n  // Register a drop target\n  const registerDropTarget = useCallback((target: DropTargetInfo) => {\n    dropTargetsRef.current.set(target.id, target);\n  }, []);\n\n  // Unregister a drop target\n  const unregisterDropTarget = useCallback((id: string) => {\n    dropTargetsRef.current.delete(id);\n  }, []);\n\n  // Register a sortable item\n  const registerSortableItem = useCallback((item: SortableItemInfo) => {\n    sortableItemsRef.current.set(item.id, item);\n  }, []);\n\n  // Unregister a sortable item\n  const unregisterSortableItem = useCallback((id: string) => {\n    sortableItemsRef.current.delete(id);\n  }, []);\n\n  // Get the current drop target the cursor is over\n  const getDragOverTarget = useCallback((): DropTargetInfo | null => {\n    if (!dragPosition) return null;\n\n    // Check each drop target to see if cursor is inside\n    for (const target of dropTargetsRef.current.values()) {\n      const { rect } = target;\n      if (dragPosition.x >= rect.left && dragPosition.x <= rect.right && dragPosition.y >= rect.top && dragPosition.y <= rect.bottom) {\n        return target;\n      }\n    }\n\n    return null;\n  }, [dragPosition]);\n\n  // Start dragging an item\n  const startDrag = useCallback(\n    (item: DragItem, nativeEvent: MouseEvent | TouchEvent) => {\n      const target = nativeEvent.target as HTMLElement;\n\n      // Store the element that was clicked/touched\n      dragTargetRef.current = target;\n\n      // Calculate initial position\n      let initialX: number;\n      let initialY: number;\n\n      if (nativeEvent instanceof MouseEvent) {\n        initialX = nativeEvent.clientX;\n        initialY = nativeEvent.clientY;\n      } else {\n        // TouchEvent\n        initialX = nativeEvent.touches[0].clientX;\n        initialY = nativeEvent.touches[0].clientY;\n      }\n\n      // Set initial position\n      dragStartPositionRef.current = { x: initialX, y: initialY };\n      setDragPosition({ x: initialX, y: initialY });\n\n      // Set dragging state\n      draggingRef.current = true;\n      setDraggingItem(item);\n      lastPositionRef.current = { x: initialX, y: initialY };\n\n      // Emit drag start event\n      if (onDragStart) {\n        onDragStart({\n          item,\n          coordinates: { x: initialX, y: initialY },\n          target,\n          nativeEvent,\n        });\n      }\n\n      // Add document event listeners for drag move and end\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n      document.addEventListener(\"mouseup\", handleDragEnd);\n      document.addEventListener(\"touchend\", handleDragEnd);\n      document.addEventListener(\"keydown\", handleKeyDown);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    },\n    [onDragStart]\n  );\n\n  // Handle mouse move during drag\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid text selection\n      e.preventDefault();\n\n      // Calculate new position\n      const newX = e.clientX;\n      const newY = e.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle touch move during drag\n  const handleTouchMove = useCallback(\n    (e: TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid scrolling\n      e.preventDefault();\n\n      // Calculate new position\n      const touch = e.touches[0];\n      const newX = touch.clientX;\n      const newY = touch.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle drag end\n  const handleDragEnd = useCallback(\n    (e: MouseEvent | TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !draggingItem || !lastPositionRef.current) return;\n\n      // Calculate final position\n      let finalX: number;\n      let finalY: number;\n\n      if (e instanceof MouseEvent) {\n        finalX = e.clientX;\n        finalY = e.clientY;\n      } else {\n        // TouchEvent\n        if (e.changedTouches.length) {\n          finalX = e.changedTouches[0].clientX;\n          finalY = e.changedTouches[0].clientY;\n        } else {\n          // Fallback to last known position\n          finalX = lastPositionRef.current.x;\n          finalY = lastPositionRef.current.y;\n        }\n      }\n\n      // Calculate total delta from start\n      const totalDelta = {\n        x: finalX - (dragStartPositionRef.current?.x || 0),\n        y: finalY - (dragStartPositionRef.current?.y || 0),\n      };\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag end event\n      if (onDragEnd) {\n        onDragEnd({\n          item: draggingItem,\n          coordinates: { x: finalX, y: finalY },\n          delta: totalDelta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n\n      // Clean up\n      endDrag();\n    },\n    [draggingItem, onDragEnd, getDragOverTarget]\n  );\n\n  // Handle keydown (for cancellation with Escape)\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        if (onDragCancel) {\n          onDragCancel();\n        }\n        endDrag();\n      }\n    },\n    [onDragCancel]\n  );\n\n  // End drag and clean up\n  const endDrag = useCallback(() => {\n    // Reset drag state\n    draggingRef.current = false;\n    dragStartPositionRef.current = null;\n    dragTargetRef.current = null;\n    lastPositionRef.current = null;\n\n    setDraggingItem(null);\n    setDragPosition(null);\n\n    // Remove event listeners\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n    document.removeEventListener(\"touchmove\", handleTouchMove);\n    document.removeEventListener(\"mouseup\", handleDragEnd);\n    document.removeEventListener(\"touchend\", handleDragEnd);\n    document.removeEventListener(\"keydown\", handleKeyDown);\n\n    // Re-enable text selection\n    document.body.style.userSelect = \"\";\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Clean up listeners when component unmounts\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleDragEnd);\n      document.removeEventListener(\"touchend\", handleDragEnd);\n      document.removeEventListener(\"keydown\", handleKeyDown);\n\n      // Re-enable text selection\n      document.body.style.userSelect = \"\";\n    };\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Context value\n  const contextValue: DragContextValue = {\n    draggingItem,\n    dragPosition,\n    dropTargets: dropTargetsRef.current,\n    sortableItems: sortableItemsRef.current,\n    registerDropTarget,\n    unregisterDropTarget,\n    registerSortableItem,\n    unregisterSortableItem,\n    startDrag,\n    endDrag,\n    getDragOverTarget,\n  };\n\n  return <DragDropContext.Provider value={contextValue}>{children}</DragDropContext.Provider>;\n};\n","// Draggable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DraggableProps, DraggableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const Draggable: React.FC<DraggableProps> = ({ id, type = \"default\", data, disabled = false, handle = false, preview, children, style, className = \"\", ...props }) => {\n  const { draggingItem, startDrag } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Check if this item is currently being dragged\n  const isDragging = draggingItem?.id === id && draggingItem?.type === type;\n\n  // Handler for starting drag operation\n  const handleDragStart = useCallback(\n    (e: React.MouseEvent | React.TouchEvent) => {\n      if (disabled || !elementRef.current) return;\n\n      // Prevent default behavior to avoid browser's native drag and drop\n      e.preventDefault();\n\n      // Create the drag item\n      const item = {\n        id,\n        type,\n        data,\n      };\n\n      // Start the drag operation\n      startDrag(item, e.nativeEvent);\n    },\n    [id, type, data, disabled, startDrag]\n  );\n\n  // Event handler props for drag handle\n  const dragHandleProps = {\n    onMouseDown: handleDragStart,\n    onTouchStart: handleDragStart,\n  };\n\n  // Props to pass to render function\n  const renderProps: DraggableRenderProps = {\n    isDragging,\n    dragHandleProps,\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-draggable ${className}`}\n      data-blox-draggable=\"\"\n      data-draggable-id={id}\n      data-draggable-type={type}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...style,\n        // Apply some styles when dragging\n        opacity: isDragging ? 0.5 : 1,\n        // Apply cursor style\n        cursor: disabled ? \"not-allowed\" : handle ? \"grab\" : \"move\",\n        // Prevent text selection during drag (for better UX)\n        userSelect: \"none\",\n        // Make element positioned so we can position the preview\n        position: \"relative\",\n        // Avoid layout shifts by setting a height when dragging\n        ...(isDragging && { height: elementRef.current?.offsetHeight }),\n      }}\n      {...(!handle && !disabled ? dragHandleProps : {})}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n\n// Handle component for partial draggable areas\nexport const DragHandle: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className = \"\", ...props }) => {\n  const renderProps = React.useContext(DraggableRenderPropsContext);\n\n  if (!renderProps) {\n    console.warn(\"DragHandle must be used within a Draggable component\");\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      className={`blox-drag-handle ${className}`}\n      data-blox-drag-handle=\"\"\n      style={{ cursor: \"grab\" }}\n      {...renderProps.dragHandleProps}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Create a context to pass render props down to DragHandle\nconst DraggableRenderPropsContext = React.createContext<DraggableRenderProps | null>(null);\n\n// Alternative implementation of Draggable that uses context to pass props to DragHandle\nexport const DraggableWithContext: React.FC<DraggableProps> = (props) => {\n  const BaseComponent = Draggable;\n  const { children, ...rest } = props;\n\n  return <BaseComponent {...rest}>{(renderProps) => <DraggableRenderPropsContext.Provider value={renderProps}>{typeof children === \"function\" ? children(renderProps) : children}</DraggableRenderPropsContext.Provider>}</BaseComponent>;\n};\n","// Droppable.tsx\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport { DroppableProps, DroppableRenderProps } from './types';\nimport { useDragDrop } from './DragDropContext';\n\nexport const Droppable: React.FC<DroppableProps> = ({\n  id,\n  type = 'default',\n  data,\n  disabled = false,\n  accept,\n  children,\n  style,\n  className = '',\n  onDrop,\n  // isActive, // Remove from props destructuring\n  ...props\n}) => {\n  const { draggingItem, dragPosition, registerDropTarget, unregisterDropTarget, getDragOverTarget } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n  \n  // Determine if the current drag item can be dropped here\n  const canDrop = useCallback(() => {\n    if (!draggingItem || disabled) return false;\n    \n    if (accept === undefined) {\n      // If no accept prop, accept everything\n      return true;\n    }\n    \n    if (typeof accept === 'function') {\n      // If accept is a function, use it\n      return accept(draggingItem);\n    }\n    \n    // Handle string or array of strings\n    const acceptTypes = Array.isArray(accept) ? accept : [accept];\n    return acceptTypes.includes(draggingItem.type);\n  }, [draggingItem, disabled, accept]);\n  \n  // Determine if the droppable is currently being hovered over\n  const isOver = useCallback(() => {\n    if (!draggingItem || !dragPosition || !canDrop()) return false;\n    \n    const overTarget = getDragOverTarget();\n    return overTarget?.id === id;\n  }, [draggingItem, dragPosition, id, canDrop, getDragOverTarget]);\n  \n  // Handle drop event\n  const handleDrop = useCallback(() => {\n    if (onDrop && isOver() && canDrop()) {\n      onDrop();\n    }\n  }, [onDrop, isOver, canDrop]);\n  \n  // Register this droppable with the context\n  useEffect(() => {\n    if (!elementRef.current) return;\n    \n    const updateDropTarget = () => {\n      if (elementRef.current) {\n        const rect = elementRef.current.getBoundingClientRect();\n        registerDropTarget({\n          id,\n          type,\n          data,\n          rect\n        });\n      }\n    };\n    \n    // Initial registration\n    updateDropTarget();\n    \n    // Update on resize or scroll\n    window.addEventListener('resize', updateDropTarget);\n    window.addEventListener('scroll', updateDropTarget);\n    \n    return () => {\n      unregisterDropTarget(id);\n      window.removeEventListener('resize', updateDropTarget);\n      window.removeEventListener('scroll', updateDropTarget);\n    };\n  }, [id, type, data, registerDropTarget, unregisterDropTarget]);\n  \n  // Listen for drop events\n  useEffect(() => {\n    const isCurrentlyOver = isOver();\n    const canCurrentlyDrop = canDrop();\n    \n    if (isCurrentlyOver && canCurrentlyDrop && !draggingItem) {\n      handleDrop();\n    }\n  }, [draggingItem, isOver, canDrop, handleDrop]);\n  \n  // Props to pass to render function\n  const renderProps: DroppableRenderProps = {\n    isOver: isOver(),\n    canDrop: canDrop()\n  };\n  \n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-droppable ${className}`}\n      data-blox-droppable=\"\"\n      data-droppable-id={id}\n      data-droppable-type={type}\n      data-over={isOver() ? 'true' : 'false'}\n      data-can-drop={canDrop() ? 'true' : 'false'}\n      data-disabled={disabled ? 'true' : 'false'}\n      // Add data attribute instead of prop\n      data-is-active={props['data-is-active'] || 'false'}\n      style={{\n        ...style,\n        // Add visual feedback when dragging over\n        ...(isOver() && canDrop() && { \n          outline: '2px dashed rgba(0, 0, 0, 0.2)',\n          backgroundColor: 'rgba(0, 0, 255, 0.05)'\n        })\n      }}\n      {...props}\n    >\n      {typeof children === 'function' ? children(renderProps) : children}\n    </div>\n  );\n};","// Sortable.tsx\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { SortableProps, SortableItemProps, SortableItemRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { DraggableWithContext } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\n\n// Sortable List Component\nexport const Sortable: React.FC<SortableProps> = ({ items, keyExtractor, onReorder, direction = \"vertical\", children, style, className = \"\", ...props }) => {\n  const { draggingItem } = useDragDrop();\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\n\n  // Determine if an item is currently being dragged\n  const isDragging = draggedIndex !== null;\n\n  // Find the index of the dragged item\n  useEffect(() => {\n    if (!draggingItem) {\n      setDraggedIndex(null);\n      return;\n    }\n\n    const index = items.findIndex((item) => keyExtractor(item) === draggingItem.id);\n    if (index !== -1) {\n      setDraggedIndex(index);\n    }\n  }, [draggingItem, items, keyExtractor]);\n\n  // Handle reordering when an item is dropped\n  const handleDrop = (itemId: string, targetIndex: number) => {\n    if (draggedIndex === null) return;\n\n    // Skip if dropping at the same position\n    if (draggedIndex === targetIndex) return;\n\n    // Create a copy of the items array\n    const newItems = [...items];\n\n    // Remove the dragged item\n    const [draggedItem] = newItems.splice(draggedIndex, 1);\n\n    // Insert the dragged item at the target position\n    newItems.splice(targetIndex, 0, draggedItem);\n\n    // Call the onReorder callback with the new order\n    onReorder(newItems);\n  };\n\n  // Container style based on direction\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: direction === \"vertical\" ? \"column\" : \"row\",\n    position: \"relative\",\n    ...style,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={`blox-sortable ${className}`}\n      data-blox-sortable=\"\"\n      style={containerStyle}\n      {...props}>\n      {items.map((item, index) => {\n        const itemId = keyExtractor(item);\n        const isBeingDragged = draggedIndex === index;\n\n        // Render each sortable item\n        return (\n          <SortableItem\n            key={itemId}\n            item={item}\n            itemId={itemId}\n            index={index}\n            isDragging={isBeingDragged}\n            onDrop={handleDrop}\n            direction={direction}>\n            {(renderProps) => children(item, renderProps)}\n          </SortableItem>\n        );\n      })}\n    </div>\n  );\n};\n\n// Individual Sortable Item\nconst SortableItem: React.FC<SortableItemProps> = ({ item, itemId, index, isDragging, onDrop, direction, children }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { registerSortableItem, unregisterSortableItem } = useDragDrop();\n\n  // Register this item with the drag drop context\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const updateSortableItem = () => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect();\n        registerSortableItem({\n          id: itemId,\n          index,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateSortableItem();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateSortableItem);\n    window.addEventListener(\"scroll\", updateSortableItem);\n\n    return () => {\n      unregisterSortableItem(itemId);\n      window.removeEventListener(\"resize\", updateSortableItem);\n      window.removeEventListener(\"scroll\", updateSortableItem);\n    };\n  }, [itemId, index, registerSortableItem, unregisterSortableItem]);\n\n  // Handle when another item is dropped on this item\n  const handleDropOnItem = () => {\n    onDrop(itemId, index);\n  };\n\n  // Prepare render props for the children\n  const renderProps: SortableItemRenderProps = {\n    isDragging,\n    dragHandleProps: {\n      draggableId: itemId,\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-pressed\": isDragging,\n      \"aria-label\": `Drag to reorder item ${index + 1}`,\n    },\n  };\n\n  return (\n    <Droppable\n      id={`droppable-${itemId}`}\n      onDrop={handleDropOnItem}\n      // Remove isActive prop - it's causing a DOM warning\n      className=\"blox-sortable-droppable\"\n      style={{\n        margin: direction === \"vertical\" ? \"2px 0\" : \"0 2px\",\n      }}\n      data-is-active=\"true\" // Use data attribute instead\n    >\n      <DraggableWithContext\n        id={itemId}\n        type=\"sortable-item\"\n        data={item}\n        className=\"blox-sortable-item\"\n        style={{\n          opacity: isDragging ? 0.5 : 1,\n          cursor: \"grab\",\n          transition: \"all 0.2s ease\",\n          backgroundColor: isDragging ? \"rgba(0, 0, 0, 0.05)\" : \"transparent\",\n          borderRadius: \"4px\",\n        }}>\n        {children(renderProps)}\n      </DraggableWithContext>\n    </Droppable>\n  );\n};\n\nexport default Sortable;","// index.ts - Barrel file for DragDrop components\nimport { DragDropProvider, useDragDrop } from \"./DragDropContext\";\nimport { Draggable, DraggableWithContext, DragHandle } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\nimport { DragOverlay } from \"./DragOverlay\";\nimport { Sortable } from \"./Sortable\";\n\n// Re-export all components and hooks\nexport {\n  // Context and Provider\n  DragDropProvider,\n  useDragDrop,\n\n  // Core Components\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n};\n\n// Re-export types\nexport type {\n  // Coordinates and Items\n  Coordinates,\n  DragItem,\n\n  // Events\n  DragStartEvent,\n  DragMoveEvent,\n  DragEndEvent,\n\n  // Target Information\n  DropTargetInfo,\n  SortableItemInfo,\n\n  // Context Value\n  DragContextValue,\n\n  // Component Props\n  DragDropProviderProps,\n  DraggableProps,\n  DraggableRenderProps,\n  DragHandleProps,\n  DroppableProps,\n  DroppableRenderProps,\n  DragOverlayProps,\n  SortableProps,\n  SortableItemProps,\n  SortableItemRenderProps,\n} from \"./types\";\n\n// Default export as a namespace\nexport const DragDrop = {\n  Provider: DragDropProvider,\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n  useDragDrop,\n};\n\nexport default DragDrop;\n","// DragOverlay.tsx\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DragOverlayProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const DragOverlay: React.FC<DragOverlayProps> = ({ children, style, className = \"\", ...props }) => {\n  const { draggingItem, dragPosition } = useDragDrop();\n\n  // Don't render anything if not currently dragging\n  if (!draggingItem || !dragPosition) {\n    return null;\n  }\n\n  // Calculate position styles\n  const positionStyles = {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    transform: `translate(${dragPosition.x}px, ${dragPosition.y}px)`,\n    pointerEvents: \"none\", // Make overlay non-interactive\n    zIndex: 9999,\n    transformOrigin: \"0 0\",\n  } as React.CSSProperties;\n\n  // Render the overlay as a portal\n  return createPortal(\n    <div\n      className={`blox-drag-overlay ${className}`}\n      data-blox-drag-overlay=\"\"\n      style={{\n        ...positionStyles,\n        ...style,\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children({ item: draggingItem }) : children}\n    </div>,\n    // Append to body to ensure it's above everything\n    document.body\n  );\n};\n","// Switch.tsx\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { SwitchProps } from \"./types\";\n\nconst Switch: React.FC<SwitchProps> = ({ checked, defaultChecked = false, onChange, disabled = false, required = false, id, name, value = \"on\", label, labelPosition = \"right\", className = \"\", thumbClassName = \"\", trackClassName = \"\", labelClassName = \"\", helperText, errorMessage, hasError = false, inputProps = {}, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-switch-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // For uncontrolled mode\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\n\n  // Determine if we're in controlled mode\n  const isControlled = checked !== undefined;\n  const isChecked = isControlled ? checked : internalChecked;\n\n  // Handle change event\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) return;\n\n      const newChecked = event.target.checked;\n\n      if (!isControlled) {\n        setInternalChecked(newChecked);\n      }\n\n      if (onChange) {\n        onChange(newChecked);\n      }\n    },\n    [disabled, isControlled, onChange]\n  );\n\n  // Generate description ID if helper text or error message is provided\n  const descriptionId = helperText || errorMessage ? `${uniqueId}-description` : undefined;\n\n  return (\n    <div\n      className={`blox-switch-container ${className}`}\n      data-blox-switch=\"\"\n      data-checked={isChecked ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <label\n        htmlFor={uniqueId}\n        className=\"blox-switch-wrapper\"\n        data-blox-switch-wrapper=\"\"\n        style={{\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          cursor: disabled ? \"not-allowed\" : \"pointer\",\n          flexDirection: labelPosition === \"left\" ? \"row-reverse\" : \"row\",\n        }}\n        {...props}>\n        {/* Hidden input for accessibility and form submission */}\n        <input\n          type=\"checkbox\"\n          id={uniqueId}\n          name={name}\n          value={value}\n          checked={isChecked}\n          defaultChecked={!isControlled ? defaultChecked : undefined}\n          onChange={handleChange}\n          disabled={disabled}\n          required={required}\n          className=\"blox-switch-input\"\n          data-blox-switch-input=\"\"\n          aria-checked={isChecked}\n          aria-disabled={disabled}\n          aria-invalid={hasError}\n          aria-describedby={descriptionId}\n          style={{\n            border: \"0\",\n            clip: \"rect(0 0 0 0)\",\n            clipPath: \"inset(50%)\",\n            height: \"1px\",\n            margin: \"-1px\",\n            overflow: \"hidden\",\n            padding: \"0\",\n            position: \"absolute\",\n            whiteSpace: \"nowrap\",\n            width: \"1px\",\n          }}\n          {...inputProps}\n        />\n\n        {/* The visual switch component */}\n        <div\n          className={`blox-switch-track ${trackClassName}`}\n          data-blox-switch-track=\"\"\n          data-state={isChecked ? \"checked\" : \"unchecked\"}\n          data-disabled={disabled ? \"true\" : \"false\"}\n          style={{\n            position: \"relative\",\n            display: \"inline-flex\",\n            flexShrink: 0,\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            WebkitTapHighlightColor: \"transparent\",\n            // These are just base styles to ensure the component is visible\n            // The user should override these with their own styling\n            width: \"36px\",\n            height: \"20px\",\n            borderRadius: \"10px\",\n          }}>\n          <div\n            className={`blox-switch-thumb ${thumbClassName}`}\n            data-blox-switch-thumb=\"\"\n            data-state={isChecked ? \"checked\" : \"unchecked\"}\n            data-disabled={disabled ? \"true\" : \"false\"}\n            style={{\n              position: \"absolute\",\n              top: \"2px\",\n              left: \"2px\",\n              // These transform properties create the sliding effect\n              transform: isChecked ? \"translateX(16px)\" : \"translateX(0)\",\n              transition: \"transform 150ms\",\n              // These are just base styles to ensure the component is visible\n              width: \"16px\",\n              height: \"16px\",\n              borderRadius: \"8px\",\n            }}\n          />\n        </div>\n\n        {/* Label */}\n        {label && (\n          <span\n            className={`blox-switch-label ${labelClassName}`}\n            data-blox-switch-label=\"\"\n            style={{\n              marginLeft: labelPosition === \"right\" ? \"8px\" : \"0\",\n              marginRight: labelPosition === \"left\" ? \"8px\" : \"0\",\n            }}>\n            {label}\n          </span>\n        )}\n      </label>\n\n      {/* Helper text or error message */}\n      {(helperText || errorMessage) && (\n        <div\n          id={descriptionId}\n          className={`blox-switch-description ${hasError ? \"blox-switch-error\" : \"\"}`}\n          data-blox-switch-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}\n          style={{\n            marginTop: \"4px\",\n            fontSize: \"0.875em\",\n          }}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Switch;\n","// ContextMenu.tsx\nimport React, { useState, useRef, useEffect, createContext, useContext, useCallback, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ContextMenuProps, ContextMenuTriggerProps, ContextMenuContentProps, ContextMenuItemProps, ContextMenuGroupProps, ContextMenuSeparatorProps, ContextMenuContextValue, ContextMenuComposition } from \"./types\";\n\n// Create context for context menu state\nconst ContextMenuContext = createContext<ContextMenuContextValue>({\n  isOpen: false,\n  open: () => {},\n  close: () => {},\n  position: { x: 0, y: 0 },\n  disabled: false,\n});\n\n// Hook to use context menu context\nconst useContextMenu = () => {\n  const context = useContext(ContextMenuContext);\n  if (!context) {\n    throw new Error(\"useContextMenu must be used within a ContextMenu component\");\n  }\n  return context;\n};\n\n// ContextMenu Trigger Component\nconst ContextMenuTrigger: React.FC<ContextMenuTriggerProps> = ({ children, disabled = false, className = \"\", ...props }) => {\n  const { open, disabled: contextDisabled } = useContextMenu();\n  const isDisabled = disabled || contextDisabled;\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    if (isDisabled) return;\n\n    // Prevent the default context menu\n    event.preventDefault();\n\n    // Open our custom context menu\n    open(event);\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-trigger ${className}`}\n      data-blox-context-menu-trigger=\"\"\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      onContextMenu={handleContextMenu}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Content Component\nconst ContextMenuContent: React.FC<ContextMenuContentProps> = ({ children, closeOnOutsideClick = true, closeOnEscape = true, offset = [0, 0], width, maxHeight, className = \"\", ...props }) => {\n  const { isOpen, close, position } = useContextMenu();\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // Create a ref to store calculated styles to avoid re-renders\n  const styleRef = useRef({\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: 1000,\n    width: width,\n    maxHeight: maxHeight,\n    overflow: maxHeight ? \"auto\" : undefined,\n  });\n\n  // Calculate position only once when menu opens or position changes\n  useLayoutEffect(() => {\n    if (!isOpen) return;\n\n    // Initial position based on cursor + offset\n    let x = position.x + offset[0];\n    let y = position.y + offset[1];\n\n    // After one frame, adjust if needed\n    requestAnimationFrame(() => {\n      if (!menuRef.current) return;\n\n      const menuRect = menuRef.current.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // Check if menu would go off the right edge\n      if (x + menuRect.width > viewportWidth) {\n        x = viewportWidth - menuRect.width - 5; // 5px buffer\n      }\n\n      // Check if menu would go off the bottom edge\n      if (y + menuRect.height > viewportHeight) {\n        y = viewportHeight - menuRect.height - 5; // 5px buffer\n      }\n\n      // Ensure menu doesn't go off the left or top edges\n      x = Math.max(5, x);\n      y = Math.max(5, y);\n\n      // Apply directly to the DOM element to avoid re-renders\n      if (menuRef.current) {\n        menuRef.current.style.left = `${x}px`;\n        menuRef.current.style.top = `${y}px`;\n      }\n    });\n\n    // Store initial position in style ref\n    styleRef.current = {\n      ...styleRef.current,\n      left: `${position.x + offset[0]}px`,\n      top: `${position.y + offset[1]}px`,\n    };\n  }, [isOpen, position.x, position.y, offset[0], offset[1]]);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    if (!isOpen || !closeOnOutsideClick) return;\n\n    const handleOutsideClick = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        close();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, [isOpen, close, closeOnOutsideClick]);\n\n  // Close menu when pressing Escape\n  useEffect(() => {\n    if (!isOpen || !closeOnEscape) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        close();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, close, closeOnEscape]);\n\n  if (!isOpen) return null;\n\n  // Render the menu with Portal\n  return createPortal(\n    <div\n      ref={menuRef}\n      className={`blox-context-menu-content ${className}`}\n      data-blox-context-menu-content=\"\"\n      style={{\n        position: \"fixed\",\n        ...styleRef.current,\n      }}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      {...props}>\n      {children}\n    </div>,\n    document.body\n  );\n};\n\n// ContextMenu Item Component\nconst ContextMenuItem: React.FC<ContextMenuItemProps> = ({ children, disabled = false, onSelect, closeOnSelect = true, icon, shortcut, className = \"\", ...props }) => {\n  const { close } = useContextMenu();\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect();\n    }\n\n    if (closeOnSelect) {\n      close();\n    }\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-item ${className}`}\n      data-blox-context-menu-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onClick={handleClick}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {icon && (\n        <span\n          className=\"blox-context-menu-item-icon\"\n          data-blox-context-menu-item-icon=\"\">\n          {icon}\n        </span>\n      )}\n\n      <span\n        className=\"blox-context-menu-item-label\"\n        data-blox-context-menu-item-label=\"\">\n        {children}\n      </span>\n\n      {shortcut && (\n        <span\n          className=\"blox-context-menu-item-shortcut\"\n          data-blox-context-menu-item-shortcut=\"\">\n          {shortcut}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// ContextMenu Group Component\nconst ContextMenuGroup: React.FC<ContextMenuGroupProps> = ({ children, label, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-group ${className}`}\n      data-blox-context-menu-group=\"\"\n      role=\"group\"\n      aria-label={label}\n      {...props}>\n      {label && (\n        <div\n          className=\"blox-context-menu-group-label\"\n          data-blox-context-menu-group-label=\"\">\n          {label}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Separator Component\nconst ContextMenuSeparator: React.FC<ContextMenuSeparatorProps> = ({ className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-separator ${className}`}\n      data-blox-context-menu-separator=\"\"\n      role=\"separator\"\n      {...props}\n    />\n  );\n};\n\n// Main ContextMenu Component\nconst ContextMenu: React.FC<ContextMenuProps> & ContextMenuComposition = ({ children, onOpen, onClose, disabled = false, enableKeyboard = true, ...props }) => {\n  // State for tracking open state and position\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  // Open the context menu\n  const open = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) return;\n\n      if (\"clientX\" in event) {\n        setPosition({ x: event.clientX, y: event.clientY });\n      }\n\n      setIsOpen(true);\n\n      if (onOpen) {\n        onOpen(event);\n      }\n    },\n    [disabled, onOpen]\n  );\n\n  // Close the context menu\n  const close = useCallback(() => {\n    setIsOpen(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    if (!enableKeyboard) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Implement keyboard shortcuts to open the context menu if desired\n      // For example, Shift+F10 or the context menu key\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [enableKeyboard]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    open,\n    close,\n    position,\n    disabled,\n  };\n\n  return (\n    <ContextMenuContext.Provider value={contextValue}>\n      <div\n        className=\"blox-context-menu\"\n        data-blox-context-menu=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        {...props}>\n        {children}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n};\n\n// Attach sub-components\nContextMenu.Trigger = ContextMenuTrigger;\nContextMenu.Content = ContextMenuContent;\nContextMenu.Item = ContextMenuItem;\nContextMenu.Group = ContextMenuGroup;\nContextMenu.Separator = ContextMenuSeparator;\n\nexport default ContextMenu;\n"],"names":["AccordionContext","createContext","activeIndices","toggleItem","isItemActive","AccordionItemContext","isActive","isDisabled","index","useAccordionItem","context","useContext","Error","Accordion","children","allowMultiple","defaultIndex","controlledActiveIndices","onChange","className","props","initialIndices","useMemo","internalActiveIndices","setInternalActiveIndices","useState","isControlled","undefined","useCallback","updatedIndices","includes","filter","i","contextValue","_jsx","Provider","value","React","Children","map","child","isValidElement","cloneElement","Item","providedIndex","useAccordion","console","warn","itemContextValue","Button","onClick","disabled","type","Panel","Checkbox","label","checked","defaultChecked","indeterminate","required","inputClassName","labelClassName","id","labelProps","labelPosition","helperText","errorMessage","hasError","uniqueId","useRef","Math","random","toString","substring","current","inputRef","useEffect","_jsxs","ref","event","target","htmlFor","DrawerCloseButton","onClose","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","Drawer","isOpen","placement","minWidth","maxWidth","minHeight","maxHeight","closeOnEsc","closeOnOutsideClick","contentClassName","backdropClassName","zIndex","trapFocus","usePortal","showCloseButton","animated","lockScroll","renderCloseButton","closeButton","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","style","drawerRef","firstFocusableRef","drawerId","substr","document","body","overflow","handleKeyDown","key","addEventListener","removeEventListener","focus","handleTabKey","focusableElements","querySelectorAll","length","firstElement","lastElement","shiftKey","activeElement","preventDefault","drawerContent","e","currentTarget","position","top","left","right","bottom","display","backdropFilter","backgroundColor","baseStyles","getDrawerStyles","tabIndex","outline","createPortal","Header","Body","Footer","CloseButton","DropdownContext","toggle","open","close","useDropdown","Dropdown","controlledIsOpen","onOpenChange","onClickOutside","name","internalIsOpen","setInternalIsOpen","internalValue","setInternalValue","dropdownRef","handleClickOutside","contains","newState","selectedValue","onValueChange","newValue","widthStyle","Trigger","finalDisabled","Menu","selected","onSelect","Marquee","direction","speed","behavior","pauseOnHover","pauseOnFocus","repeat","gap","duration","reverse","delay","containerRef","contentRef","isPaused","setIsPaused","marqueeId","actualDirection","getAnimationDirection","styleId","styleEl","getElementById","createElement","head","appendChild","keyframes","innerHTML","removeChild","repeatedChildren","push","marginRight","marginBottom","flexShrink","onMouseEnter","onMouseLeave","onFocus","onBlur","flexDirection","actualDuration","slow","normal","fast","animation","animationPlayState","getAnimationStyle","ModalCloseButton","Modal","size","title","footer","closeOnOverlayClick","overlayClassName","ariaLabelledby","ariaDescribedby","isCentered","blockScroll","initialFocusRef","modalRef","previousFocusRef","modalId","handleFocusTrap","originalStyle","window","getComputedStyle","getAnimationClass","modalElement","alignItems","justifyContent","padding","borderRadius","boxShadow","getSizeStyle","borderBottom","margin","fontSize","fontWeight","color","background","border","cursor","borderTop","Content","RadioGroupContext","Radio","radioGroup","isWithinGroup","groupName","groupValue","groupOnChange","groupDisabled","groupRequired","finalRequired","isChecked","Group","defaultValue","handleChange","radioValue","groupId","TableContext","data","columns","autoGenerateRowKey","TableHeader","TableBody","TableRow","TableHeaderCell","columnId","sortable","sorted","sortDirection","onSort","center","table","isSorted","sortColumn","effectiveSortDirection","handleSortClick","newDirection","textAlign","TableCell","TableEmpty","colSpan","effectiveColSpan","Table","getRowKey","getRowClassName","column","headerProps","header","row","rowIndex","rowKey","rowClassName","cellContent","cell","accessor","cellProps","Container","horizontalScroll","overflowX","Caption","Row","HeaderCell","Cell","Empty","Loading","TabsContext","activeTabId","setActiveTabId","orientation","useTabs","Tabs","activeTab","defaultActiveTab","internalActiveTabId","setInternalActiveTabId","tabId","List","contextOrientation","finalOrientation","Tab","Panels","Tooltip","content","offset","showDelay","hideDelay","showOnHover","showOnFocus","interactive","tooltipClassName","rest","uncontrolledIsOpen","setUncontrolledIsOpen","triggerRef","tooltipRef","childRef","showTimeoutRef","hideTimeoutRef","setPosition","x","y","currentPlacement","updatePosition","triggerRect","getBoundingClientRect","tooltipRect","spaceTop","spaceRight","innerWidth","spaceBottom","innerHeight","spaceLeft","finalPlacement","split","handleShow","clearTimeout","setTimeout","handleHide","handleTooltipMouseEnter","delayedUpdate","childElement","only","error","_Fragment","childProps","enhancedChild","node","trim","tooltipContent","renderTooltip","SegmentedControlContext","allowDeselect","SegmentedControl","controlDisabled","useSegmentedControl","isSelected","DragDropContext","draggingItem","dragPosition","dropTargets","Map","sortableItems","registerDropTarget","unregisterDropTarget","registerSortableItem","unregisterSortableItem","startDrag","endDrag","getDragOverTarget","useDragDrop","Draggable","handle","preview","elementRef","isDragging","handleDragStart","nativeEvent","dragHandleProps","onMouseDown","onTouchStart","renderProps","opacity","userSelect","offsetHeight","DraggableRenderPropsContext","DraggableWithContext","BaseComponent","Droppable","accept","onDrop","canDrop","Array","isArray","isOver","overTarget","handleDrop","updateDropTarget","rect","isCurrentlyOver","canCurrentlyDrop","SortableItem","item","itemId","updateSortableItem","transition","draggableId","DragDrop","onDragStart","onDragMove","onDragEnd","onDragCancel","setDraggingItem","setDragPosition","dropTargetsRef","sortableItemsRef","dragStartPositionRef","dragTargetRef","draggingRef","lastPositionRef","set","delete","values","initialX","initialY","MouseEvent","clientX","clientY","touches","coordinates","handleMouseMove","handleTouchMove","passive","handleDragEnd","newX","newY","newPosition","delta","over","touch","finalX","finalY","changedTouches","totalDelta","DragHandle","DragOverlay","positionStyles","transform","pointerEvents","transformOrigin","Sortable","items","keyExtractor","onReorder","draggedIndex","setDraggedIndex","findIndex","targetIndex","newItems","draggedItem","splice","containerStyle","Switch","thumbClassName","trackClassName","inputProps","internalChecked","setInternalChecked","newChecked","descriptionId","clip","clipPath","whiteSpace","WebkitTapHighlightColor","marginLeft","marginTop","ContextMenuContext","useContextMenu","ContextMenu","onOpen","enableKeyboard","setIsOpen","contextDisabled","onContextMenu","closeOnEscape","menuRef","styleRef","useLayoutEffect","requestAnimationFrame","menuRect","viewportWidth","viewportHeight","max","handleOutsideClick","closeOnSelect","icon","shortcut","Separator"],"mappings":"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"}