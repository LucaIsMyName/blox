{"version":3,"file":"index.js","sources":["../src/components/Accordion/Accordion.tsx","../src/components/Checkbox/Checkbox.tsx","../src/styles/STYLES.ts","../src/components/Drawer/Drawer.tsx","../src/components/Dropdown/Dropdown.tsx","../src/components/Marquee/Marquee.tsx","../src/components/Modal/Modal.tsx","../src/components/Radio/Radio.tsx","../src/components/Table/Table.tsx","../src/components/Tabs/Tabs.tsx","../src/components/Toggle/Toggle.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/SegmentedControl/SegmentedControl.tsx","../src/components/DragDrop/DragDropContext.tsx","../src/components/DragDrop/Draggable.tsx","../src/components/DragDrop/Droppable.tsx","../src/components/DragDrop/Sortable.tsx","../src/components/DragDrop/index.ts","../src/components/DragDrop/DragOverlay.tsx","../src/components/Switch/Switch.tsx","../src/components/ContextMenu/ContextMenu.tsx","../src/components/Slider/Slider.tsx"],"sourcesContent":["// Accordion.tsx\nimport React, { createContext, useContext, useState, useCallback, useMemo } from \"react\";\nimport { AccordionProps, AccordionContextType, AccordionItemProps, AccordionButtonProps, AccordionPanelProps, AccordionItemContextType, AccordionComposition } from \"./types\";\n\n// Create context for accordion state\nconst AccordionContext = createContext<AccordionContextType>({\n  activeIndices: [],\n  toggleItem: () => {},\n  isItemActive: () => false,\n});\n\n// Create context for each accordion item\nconst AccordionItemContext = createContext<AccordionItemContextType>({\n  isActive: false,\n  isDisabled: false,\n  index: -1,\n  toggleItem: () => {},\n});\n\n// Hook to use accordion context\nconst useAccordion = () => {\n  const context = useContext(AccordionContext);\n  if (!context) {\n    throw new Error(\"useAccordion must be used within an Accordion component\");\n  }\n  return context;\n};\n\n// Hook to use accordion item context\nconst useAccordionItem = () => {\n  const context = useContext(AccordionItemContext);\n  if (!context) {\n    throw new Error(\"useAccordionItem must be used within an AccordionItem component\");\n  }\n  return context;\n};\n\n// Accordion Item Component\nconst AccordionItem: React.FC<AccordionItemProps> = ({ children, isDisabled = false, index: providedIndex, className = \"\", ...props }) => {\n  const { activeIndices, toggleItem, isItemActive } = useAccordion();\n\n  // If index is not provided, we'll warn but not throw\n  const index = providedIndex ?? -1;\n  if (index === -1) {\n    console.warn(\"AccordionItem: index prop is required for proper functioning\");\n  }\n\n  const isActive = isItemActive(index);\n\n  // Context value for this item\n  const itemContextValue = useMemo(\n    () => ({\n      isActive,\n      isDisabled,\n      index,\n      toggleItem: () => toggleItem(index),\n    }),\n    [isActive, isDisabled, index, toggleItem]\n  );\n\n  return (\n    <AccordionItemContext.Provider value={itemContextValue}>\n      <div\n        className={`blox-accordion-item ${className}`}\n        data-blox-accordion-item=\"\"\n        data-active={isActive ? \"true\" : \"false\"}\n        data-disabled={isDisabled ? \"true\" : \"false\"}\n        {...props}>\n        {children}\n      </div>\n    </AccordionItemContext.Provider>\n  );\n};\n\n// Accordion Button Component\nconst AccordionButton: React.FC<AccordionButtonProps> = ({ children, className = \"\", ...props }) => {\n  const { isActive, isDisabled, toggleItem } = useAccordionItem();\n\n  return (\n    <button\n      className={`blox-accordion-button ${className}`}\n      onClick={() => !isDisabled && toggleItem()}\n      disabled={isDisabled}\n      aria-expanded={isActive}\n      data-blox-accordion-button=\"\"\n      data-active={isActive ? \"true\" : \"false\"}\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      type=\"button\"\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Accordion Panel Component\nconst AccordionPanel: React.FC<AccordionPanelProps> = ({ children, className = \"\", ...props }) => {\n  const { isActive } = useAccordionItem();\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      className={`blox-accordion-panel ${className}`}\n      data-blox-accordion-panel=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Accordion Component\nconst Accordion: React.FC<AccordionProps> & AccordionComposition = ({ children, allowMultiple = false, defaultIndex = [], activeIndices: controlledActiveIndices, onChange, className = \"\", ...props }) => {\n  // Convert single defaultIndex to array\n  const initialIndices = useMemo(() => {\n    if (typeof defaultIndex === \"number\") {\n      return [defaultIndex];\n    }\n    return defaultIndex as number[];\n  }, [defaultIndex]);\n\n  // State for active indices (for uncontrolled usage)\n  const [internalActiveIndices, setInternalActiveIndices] = useState<number[]>(initialIndices);\n\n  // Determine if we're controlled or not\n  const isControlled = controlledActiveIndices !== undefined;\n  const activeIndices = isControlled ? controlledActiveIndices : internalActiveIndices;\n\n  // Toggle accordion item\n  const toggleItem = useCallback(\n    (index: number) => {\n      const updatedIndices = activeIndices.includes(index) ? activeIndices.filter((i) => i !== index) : allowMultiple ? [...activeIndices, index] : [index];\n\n      // Update internal state for uncontrolled usage\n      if (!isControlled) {\n        setInternalActiveIndices(updatedIndices);\n      }\n\n      // Call onChange callback\n      onChange?.(updatedIndices);\n    },\n    [activeIndices, allowMultiple, isControlled, onChange]\n  );\n\n  // Check if an item is active\n  const isItemActive = useCallback(\n    (index: number) => {\n      return activeIndices.includes(index);\n    },\n    [activeIndices]\n  );\n\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      activeIndices,\n      toggleItem,\n      isItemActive,\n    }),\n    [activeIndices, toggleItem, isItemActive]\n  );\n\n  return (\n    <AccordionContext.Provider value={contextValue}>\n      <div\n        className={`blox-accordion ${className}`}\n        data-blox-accordion=\"\"\n        data-allow-multiple={allowMultiple ? \"true\" : \"false\"}\n        {...props}>\n        {React.Children.map(children, (child, index) => {\n          if (!React.isValidElement(child)) return child;\n\n          // Auto-inject index if not provided\n          return React.cloneElement(child as React.ReactElement<AccordionItemProps>, {\n            index: (child as React.ReactElement<AccordionItemProps>).props.index ?? index,\n          });\n        })}\n      </div>\n    </AccordionContext.Provider>\n  );\n};\n\n// Attach sub-components\nAccordion.Item = AccordionItem;\nAccordion.Button = AccordionButton;\nAccordion.Panel = AccordionPanel;\n\nexport default Accordion;\n","// Checkbox.tsx\nimport React, { useRef, useEffect } from \"react\";\nimport { CheckboxProps } from \"./types\";\n\nconst Checkbox: React.FC<CheckboxProps> = ({ label, checked, defaultChecked, onChange, indeterminate = false, disabled = false, required = false, className = \"\", inputClassName = \"\", labelClassName = \"\", id, labelProps = {}, labelPosition = \"right\", helperText, errorMessage, hasError = false, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-checkbox-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // Reference to the input element\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Set indeterminate state on mount and update\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n\n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(event.target.checked, event);\n    }\n  };\n\n  // Determine whether we're controlled or uncontrolled\n  const isControlled = checked !== undefined;\n\n  return (\n    <div\n      className={`blox-checkbox-container ${className}`}\n      data-blox-checkbox=\"\"\n      data-checked={isControlled ? (checked ? \"true\" : \"false\") : undefined}\n      data-indeterminate={indeterminate ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <input\n        ref={inputRef}\n        type=\"checkbox\"\n        id={uniqueId}\n        checked={checked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={disabled}\n        required={required}\n        className={`blox-checkbox-input ${inputClassName}`}\n        data-blox-checkbox-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={helperText || errorMessage ? `${uniqueId}-description` : undefined}\n        {...props}\n      />\n\n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-checkbox-label ${labelClassName}`}\n          data-blox-checkbox-label=\"\"\n          {...labelProps}>\n          {label}\n        </label>\n      )}\n\n      {(helperText || errorMessage) && (\n        <div\n          id={`${uniqueId}-description`}\n          className={`blox-checkbox-description ${hasError ? \"blox-checkbox-error\" : \"\"}`}\n          data-blox-checkbox-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import { STYLE_TYPES } from \"./types\";\n/**\n * @param {Object} STYLES\n * @description\n * if the component needs Styling to be functional or has\n * props that need to be passed to the component\n * then the default style settings are here\n */\n\nexport let STYLES: STYLE_TYPES = {\n  Switch: {\n    input: {\n      bgColor: \"#007bff\",\n    },\n    thumb: {\n      bgColor: \"#ffffff\",\n    },\n    track: {\n      bgColor: \"#e9ecef\",\n    },\n    label: {\n      spacing: \"8px\",\n    }\n  },\n  Radio: {\n    error: {\n      color: \"#dc3545\",\n    },\n    label: {\n      color: \"#495057\",\n    },\n    size: \"16px\",\n  },\n  Slider: {\n    thickness: \"4px\",\n    borderRadius: \"9999px\",\n    track: {\n      color: \"#e9ecef\",\n    },\n    range: {\n      color: \"#007bff\",\n    },\n    thumb: {\n      color: \"#007bff\",\n      size: \"16px\",\n      radius: \"9999px\",\n      shadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n    },\n    mark: {\n      color: \"#007bff\",\n      spacing: \"8px\",\n      radius: \"9999px\",\n      fontSize: \"0.75rem\",\n      label: {\n        spacing: \"4px\",\n      },\n    },\n  },\n  Modal: {\n    bgColor: \"#ffffff\",\n    borderRadius: \"4px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n    maxHeight: \"calc(100vh-32px)\",\n    body: {\n      padding: \"16px\",\n    },\n    close: {\n      right: \"16px\",\n      top: \"16px\",\n      color: \"#6c757d\",\n      padding: \"8px\",\n      borderRadius: \"4px\",\n    },\n    header: {\n      border: \"1px solid gray\",\n      padding: \"16px\",\n    },\n    footer: {\n      border: \"1px solid gray\",\n      padding: \"16px\",\n      gap: \"8px\",\n    },\n    title: {\n      fontSize: \"1.25rem\",\n      fontWeight: \"600\",\n      color: \"inherit\",\n    },\n    overlay: {\n      padding: \"16px\",\n      bgColor: \"rgba(0, 0, 0, 0.5)\",\n    },\n    width: {\n      small: \"300px\",\n      medium: \"600px\",\n      large: \"900px\",\n      full: \"100%\",\n    },\n  },\n  DragDrop: {\n    droppable: {\n      bgColor: \"#f8f9fa\",\n      outline: \"2px dashed #007bff\",\n    },\n    sortable: {\n      opacity: 0.5,\n      backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n      borderRadius: \"4px\",\n    },\n  },\n  Drawer: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    minWidth: \"300px\",\n    maxWidth: \"600px\",\n    height: \"100%\",\n    backdropColor: \"rgba(0, 0, 0, 0.5)\",\n    backdropBlur: \"0px\",\n    contentBgColor: \"#ffffff\",\n  },\n  Tooltip: {\n    offset: \"8px\",\n  },\n};\n","// Drawer.tsx\nimport React, { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DrawerProps, DrawerComposition } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Sub-components\nconst DrawerHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    className={`blox-drawer-header ${className}`}\n    data-blox-drawer-header=\"\"\n    {...props}>\n    {children}\n  </header>\n);\n\nconst DrawerBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-drawer-body ${className}`}\n    data-blox-drawer-body=\"\"\n    {...props}>\n    {children}\n  </div>\n);\n\nconst DrawerFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    className={`blox-drawer-footer ${className}`}\n    data-blox-drawer-footer=\"\"\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst DrawerCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    type=\"button\"\n    className={`blox-drawer-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close drawer\"\n    data-blox-drawer-close=\"\"\n    {...props}>\n    {children || \"×\"}\n  </button>\n);\n\nconst Drawer: React.FC<DrawerProps> & DrawerComposition = ({ children, isOpen, onClose, placement = \"right\", minWidth = \"250px\", maxWidth = \"100%\", minHeight = \"250px\", maxHeight = \"100%\", closeOnEsc = true, closeOnOutsideClick = true, contentClassName = \"\", backdropClassName = \"\", zIndex = 1000, trapFocus = true, usePortal = true, showCloseButton = true, animated = true, lockScroll = true, renderCloseButton, closeButton, role = \"dialog\", \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, id, style, className = \"\", ...props }) => {\n  const drawerRef = useRef<HTMLDivElement>(null);\n  const firstFocusableRef = useRef<HTMLDivElement>(null);\n\n  // Generate a unique ID for the drawer if not provided\n  const drawerId = useRef(id || `blox-drawer-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle body scroll locking\n  useEffect(() => {\n    if (isOpen && lockScroll) {\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return () => {\n      if (lockScroll) {\n        document.body.style.overflow = \"\";\n      }\n    };\n  }, [isOpen, lockScroll]);\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap management\n  useEffect(() => {\n    if (isOpen && trapFocus && drawerRef.current) {\n      // Focus the first focusable element\n      firstFocusableRef.current?.focus();\n\n      const handleTabKey = (event: KeyboardEvent) => {\n        if (event.key !== \"Tab\" || !drawerRef.current) return;\n\n        const focusableElements = drawerRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n        if (focusableElements.length === 0) return;\n\n        const firstElement = focusableElements[0] as HTMLElement;\n        const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n        // If shift+tab and on first element, move to last\n        if (event.shiftKey && document.activeElement === firstElement) {\n          lastElement.focus();\n          event.preventDefault();\n        }\n        // If tab and on last element, move to first\n        else if (!event.shiftKey && document.activeElement === lastElement) {\n          firstElement.focus();\n          event.preventDefault();\n        }\n      };\n\n      document.addEventListener(\"keydown\", handleTabKey);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleTabKey);\n      };\n    }\n  }, [isOpen, trapFocus]);\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (closeOnOutsideClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Calculate styles based on placement\n  const getDrawerStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      ...style,\n      position: \"absolute\",\n      backgroundColor: `var(--blox-drawer-content-bg-color, ${STYLES.Drawer.contentBgColor})`,\n    };\n\n    // Add size constraints based on placement\n    if (placement === \"left\" || placement === \"right\") {\n      baseStyles.top = `var(--blox-drawer-top, ${STYLES.Drawer.top})`;\n      baseStyles.bottom = `var(--blox-drawer-bottom, ${STYLES.Drawer.bottom})`;\n      baseStyles.minWidth = minWidth;\n      baseStyles.maxWidth = maxWidth;\n      baseStyles.height = `100%`;\n\n      if (placement === `left`) {\n        baseStyles.left = `var(--blox-drawer-left, ${STYLES.Drawer.left})`;\n      } else {\n        baseStyles.right = `var(--blox-drawer-right, ${STYLES.Drawer.right})`;\n      }\n    } else {\n      baseStyles.left = `var(--blox-drawer-left, ${STYLES.Drawer.left})`;\n      baseStyles.right = `var(--blox-drawer-right, ${STYLES.Drawer.right})`;\n      baseStyles.minHeight = minHeight;\n      baseStyles.maxHeight = maxHeight;\n      baseStyles.width = `100%`;\n\n      if (placement === `top`) {\n        baseStyles.top = `var(--blox-drawer-top, ${STYLES.Drawer.top})`;\n      } else {\n        baseStyles.bottom = `var(--blox-drawer-bottom, ${STYLES.Drawer.bottom})`;\n      }\n    }\n\n    return baseStyles;\n  };\n\n  // Don't render anything if drawer is not open\n  if (!isOpen) return null;\n\n  const drawerContent = (\n    <div\n      className={`blox-drawer-backdrop ${backdropClassName} ${animated ? \"blox-drawer-animated\" : \"\"}`}\n      data-blox-drawer-backdrop=\"\"\n      onClick={handleBackdropClick}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        zIndex: zIndex,\n        backdropFilter: `var(--blox-drawer-backdrop-blur, ${STYLES.Drawer.backdropBlur})`,\n        backgroundColor: `var(--blox-drawer-backdrop-color, ${STYLES.Drawer.backdropColor})`,\n      }}>\n      <div\n        ref={drawerRef}\n        className={`blox-drawer-content ${contentClassName} ${className}`}\n        data-blox-drawer-content=\"\"\n        data-blox-drawer-placement={placement}\n        style={getDrawerStyles()}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        id={drawerId}\n        {...props}>\n        {/* Hidden element for initial focus */}\n        <div\n          ref={firstFocusableRef}\n          tabIndex={-1}\n          style={{ outline: \"none\" }}\n        />\n\n        {showCloseButton && (renderCloseButton ? renderCloseButton({ onClick: onClose }) : <DrawerCloseButton onClose={onClose}>{closeButton}</DrawerCloseButton>)}\n\n        {children}\n      </div>\n    </div>\n  );\n\n  return usePortal && typeof document !== \"undefined\" ? createPortal(drawerContent, document.body) : drawerContent;\n};\n\n// Attach sub-components\nDrawer.Header = DrawerHeader;\nDrawer.Body = DrawerBody;\nDrawer.Footer = DrawerFooter;\nDrawer.CloseButton = DrawerCloseButton;\n\nexport default Drawer;\n","// Dropdown.tsx\nimport React, { useRef, useState, useEffect, createContext, useContext } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DropdownProps, DropdownTriggerProps, DropdownMenuProps, DropdownItemProps, DropdownContextValue, DropdownComposition } from \"./types\";\n\n// Create context for dropdown state\nconst DropdownContext = createContext<DropdownContextValue>({\n  isOpen: false,\n  toggle: () => {},\n  open: () => {},\n  close: () => {},\n  isDisabled: false,\n});\n\n// Hook to use dropdown context\nconst useDropdown = () => {\n  const context = useContext(DropdownContext);\n  if (!context) {\n    throw new Error(\"useDropdown must be used within a Dropdown component\");\n  }\n  return context;\n};\n\n// Dropdown Trigger Component\nconst DropdownTrigger: React.FC<DropdownTriggerProps> = ({ children, disabled, className = \"\", ...props }) => {\n  const { isOpen, toggle, isDisabled } = useDropdown();\n  const finalDisabled = disabled || isDisabled;\n\n  return (\n    <button\n      type=\"button\"\n      className={`blox-dropdown-trigger ${className}`}\n      onClick={toggle}\n      disabled={finalDisabled}\n      aria-haspopup=\"true\"\n      aria-expanded={isOpen}\n      data-blox-dropdown-trigger=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Dropdown Menu Component\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({ children, className = \"\", ...props }) => {\n  const { isOpen } = useDropdown();\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className={`blox-dropdown-menu ${className}`}\n      data-blox-dropdown-menu=\"\"\n      data-state={isOpen ? \"open\" : \"closed\"}\n      role=\"menu\"\n      style={{\n        position: \"absolute\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dropdown Item Component\nconst DropdownItem: React.FC<DropdownItemProps> = ({ children, value, disabled = false, selected, onSelect, className = \"\", ...props }) => {\n  const { onValueChange, close, selectedValue } = useDropdown();\n  const isSelected = selected !== undefined ? selected : selectedValue === value;\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onValueChange) {\n      onValueChange(value);\n    }\n\n    close();\n  };\n\n  return (\n    <div\n      className={`blox-dropdown-item ${className}`}\n      onClick={handleClick}\n      data-blox-dropdown-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-selected={isSelected ? \"true\" : \"false\"}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Dropdown Component\nconst Dropdown: React.FC<DropdownProps> & DropdownComposition = ({ isOpen: controlledIsOpen, onOpenChange, value, onChange, disabled = false, children, placement = \"bottom-start\", className = \"\", width, onClickOutside, name, ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalIsOpen, setInternalIsOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState<string | number | undefined>(value);\n\n  // Reference to the dropdown container\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  // Determine if we're in controlled mode\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : internalIsOpen;\n\n  // Update internal value when value prop changes\n  useEffect(() => {\n    if (value !== undefined) {\n      setInternalValue(value);\n    }\n  }, [value]);\n\n  // Toggle dropdown\n  const toggle = () => {\n    if (disabled) return;\n\n    const newState = !isOpen;\n\n    if (!isControlled) {\n      setInternalIsOpen(newState);\n    }\n\n    onOpenChange?.(newState);\n  };\n\n  // Open dropdown\n  const open = () => {\n    if (disabled || isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(true);\n    }\n\n    onOpenChange?.(true);\n  };\n\n  // Close dropdown\n  const close = () => {\n    if (!isOpen) return;\n\n    if (!isControlled) {\n      setInternalIsOpen(false);\n    }\n\n    onOpenChange?.(false);\n  };\n\n  // Handle value change\n  const handleValueChange = (newValue: string | number) => {\n    if (disabled) return;\n\n    if (onChange) {\n      onChange(newValue);\n    } else {\n      setInternalValue(newValue);\n    }\n  };\n\n  // Handle click outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node) && isOpen) {\n        if (onClickOutside) {\n          onClickOutside();\n        } else {\n          close();\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen, onClickOutside]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    toggle,\n    open,\n    close,\n    selectedValue: value !== undefined ? value : internalValue,\n    onValueChange: handleValueChange,\n    isDisabled: disabled,\n  };\n\n  // Calculate width style\n  const widthStyle = width ? { width: width === true ? \"100%\" : width } : {};\n\n  return (\n    <DropdownContext.Provider value={contextValue}>\n      <div\n        ref={dropdownRef}\n        className={`blox-dropdown ${className}`}\n        data-blox-dropdown=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-placement={placement}\n        style={widthStyle}\n        {...props}>\n        {children}\n\n        {/* Hidden input for form submissions */}\n        {name && (\n          <input\n            type=\"hidden\"\n            name={name}\n            value={value !== undefined ? value : internalValue || \"\"}\n          />\n        )}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\n// Attach sub-components\nDropdown.Trigger = DropdownTrigger;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\n\nexport default Dropdown;\n","// Marquee.tsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport { MarqueeProps } from './types';\n\nconst Marquee: React.FC<MarqueeProps> = ({\n  children,\n  direction = 'left',\n  speed = 'normal',\n  behavior = 'scroll',\n  pauseOnHover = true,\n  pauseOnFocus = true,\n  repeat = 2,\n  gap = 40,\n  duration,\n  reverse = false,\n  delay = 0,\n  className = '',\n  ...props\n}) => {\n  // Use refs to store references to DOM elements\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  \n  // State to track whether the animation is paused\n  const [isPaused, setIsPaused] = useState(false);\n  \n  // Generate a unique ID for this marquee instance (for CSS animations)\n  const marqueeId = useRef(`marquee-${Math.random().toString(36).substr(2, 9)}`);\n  \n  // Calculate the actual duration based on speed if not explicitly provided\n  const calculateDuration = () => {\n    if (duration !== undefined) return duration;\n    \n    // Speed factors in seconds\n    const speedFactors = {\n      slow: 30,\n      normal: 20,\n      fast: 10,\n    };\n    \n    return speedFactors[speed] || 20;\n  };\n  \n  // Determine the animation direction\n  const getAnimationDirection = () => {\n    if (reverse) {\n      switch (direction) {\n        case 'left': return 'right';\n        case 'right': return 'left';\n        case 'up': return 'down';\n        case 'down': return 'up';\n        default: return 'right';\n      }\n    }\n    return direction;\n  };\n  \n  // Create the animation keyframes based on direction\n  useEffect(() => {\n    const actualDirection = getAnimationDirection();\n    \n    // Only create keyframes once for this instance\n    const styleId = `style-${marqueeId.current}`;\n    let styleEl = document.getElementById(styleId) as HTMLStyleElement;\n    \n    if (!styleEl) {\n      styleEl = document.createElement('style');\n      styleEl.id = styleId;\n      document.head.appendChild(styleEl);\n    }\n    \n    // Define keyframes based on direction\n    let keyframes = '';\n    switch (actualDirection) {\n      case 'left':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(0); }\n            100% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'right':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateX(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateX(0); }\n          }\n        `;\n        break;\n      case 'up':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(0); }\n            100% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n          }\n        `;\n        break;\n      case 'down':\n        keyframes = `\n          @keyframes ${marqueeId.current} {\n            0% { transform: translateY(calc(-50% - ${gap}px / 2)); }\n            100% { transform: translateY(0); }\n          }\n        `;\n        break;\n    }\n    \n    styleEl.innerHTML = keyframes;\n    \n    // Clean up the style element when component unmounts\n    return () => {\n      if (styleEl && document.head.contains(styleEl)) {\n        document.head.removeChild(styleEl);\n      }\n    };\n  }, [direction, gap, reverse]);\n  \n  // Create the animation style\n  const getAnimationStyle = () => {\n    const actualDuration = calculateDuration();\n    const animationName = marqueeId.current;\n    const animationIterationCount = 'infinite';\n    const animationDirection = behavior === 'alternate' ? 'alternate' : 'normal';\n    \n    return {\n      animation: `${animationName} ${actualDuration}s ${animationDirection} linear ${delay}s ${animationIterationCount}`,\n      animationPlayState: isPaused ? 'paused' : 'running',\n    };\n  };\n  \n  // Create array of repeated children\n  const repeatedChildren = [];\n  for (let i = 0; i < repeat; i++) {\n    repeatedChildren.push(\n      <div\n        key={i}\n        className=\"blox-marquee-item\"\n        data-blox-marquee-item=\"\"\n        style={{\n          ...(direction === 'left' || direction === 'right' \n            ? { marginRight: `${gap}px` } \n            : { marginBottom: `${gap}px` }),\n          flexShrink: 0,\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n  \n  // Event handlers for pausing\n  const handleMouseEnter = () => pauseOnHover && setIsPaused(true);\n  const handleMouseLeave = () => pauseOnHover && setIsPaused(false);\n  const handleFocus = () => pauseOnFocus && setIsPaused(true);\n  const handleBlur = () => pauseOnFocus && setIsPaused(false);\n  \n  // ARIA live settings based on behavior\n  const ariaLive = behavior === 'scroll' ? 'off' : 'polite';\n  \n  return (\n    <div\n      className={`blox-marquee ${className}`}\n      ref={containerRef}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      role=\"marquee\"\n      aria-live={ariaLive}\n      data-blox-marquee=\"\"\n      data-direction={direction}\n      data-behavior={behavior}\n      data-paused={isPaused ? 'true' : 'false'}\n      style={{\n        overflow: 'hidden',\n      }}\n      {...props}\n    >\n      <div\n        ref={contentRef}\n        className=\"blox-marquee-content\"\n        data-blox-marquee-content=\"\"\n        style={{\n          display: 'flex',\n          flexDirection: direction === 'left' || direction === 'right' ? 'row' : 'column',\n          ...getAnimationStyle(),\n        }}\n      >\n        {repeatedChildren}\n      </div>\n    </div>\n  );\n};\n\nexport default Marquee;","// Modal.tsx\nimport React, { useRef, useEffect, Children } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ModalProps, ModalComposition } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Sub-components\nconst ModalContent: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    className={`blox-modal-content ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalHeader: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <header\n    data-blox-modal-header=\"\"\n    className={`blox-modal-header ${className}`}\n    {...props}>\n    {children}\n  </header>\n);\n\nconst ModalBody: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <div\n    data-blox-modal-body=\"\"\n    className={`blox-modal-body ${className}`}\n    {...props}>\n    {children}\n  </div>\n);\n\nconst ModalFooter: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, className = \"\", ...props }) => (\n  <footer\n    data-blox-modal-footer=\"\"\n    className={`blox-modal-footer ${className}`}\n    {...props}>\n    {children}\n  </footer>\n);\n\nconst ModalCloseButton: React.FC<{\n  onClose?: () => void;\n  className?: string;\n  children?: React.ReactNode;\n  [key: string]: any;\n}> = ({ onClose, className = \"\", children, ...props }) => (\n  <button\n    data-blox-modal-close-button=\"\"\n    type=\"button\"\n    className={`blox-modal-close-button ${className}`}\n    onClick={onClose}\n    aria-label=\"Close\"\n    {...props}>\n    {children || \"×\"}\n  </button>\n);\n\nconst Modal: React.FC<ModalProps> & ModalComposition = ({ children, isOpen, onClose, size = \"medium\", title, footer, closeOnEsc = true, closeOnOverlayClick = true, overlayClassName = \"\", contentClassName = \"\", ariaLabelledby, ariaDescribedby, zIndex = 1050, isCentered = true, blockScroll = true, showCloseButton = true, initialFocusRef, animated = true, ...props }) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  // Generate a unique ID for the modal\n  const modalId = useRef(`blox-modal-${Math.random().toString(36).substr(2, 9)}`).current;\n\n  // Handle ESC key press\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen, closeOnEsc, onClose]);\n\n  // Focus trap and management\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Save the element that had focus before opening the modal\n    previousFocusRef.current = document.activeElement as HTMLElement;\n\n    // Set focus to the specified element or the modal itself\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (modalRef.current) {\n      modalRef.current.focus();\n    }\n\n    const handleFocusTrap = (event: KeyboardEvent) => {\n      if (!modalRef.current || event.key !== \"Tab\") return;\n\n      const focusableElements = modalRef.current.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n      if (focusableElements.length === 0) return;\n\n      const firstElement = focusableElements[0] as HTMLElement;\n      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n      // If shift+tab and on first element, move to last\n      if (event.shiftKey && document.activeElement === firstElement) {\n        lastElement.focus();\n        event.preventDefault();\n      }\n      // If tab and on last element, move to first\n      else if (!event.shiftKey && document.activeElement === lastElement) {\n        firstElement.focus();\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleFocusTrap);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleFocusTrap);\n\n      // Restore focus when modal closes\n      if (previousFocusRef.current) {\n        previousFocusRef.current.focus();\n      }\n    };\n  }, [isOpen, initialFocusRef]);\n\n  // Prevent body scroll when modal is open\n  useEffect(() => {\n    if (!isOpen || !blockScroll) return;\n\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, [isOpen, blockScroll]);\n\n  const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (closeOnOverlayClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Don't render anything if modal is not open\n  if (!isOpen) return null;\n\n  // Size styles based on size prop\n  const getSizeStyle = () => {\n    switch (size) {\n      case `small`:\n        return { width: `var(--blox-modal-width-small, ${STYLES.Modal.width.small})` };\n      case `medium`:\n        return { width: `var(--blox-modal-width-medium, ${STYLES.Modal.width.medium})` };\n      case `large`:\n        return { width: `var(--blox-modal-width-large, ${STYLES.Modal.width.large})` };\n      case `full`:\n        return { width: `var(--blox-modal-width-full, ${STYLES.Modal.width.full})` };\n      default:\n        return { width: `var(--blox-modal-width-medium, ${STYLES.Modal.width.medium})` };\n    }\n  };\n\n  // Animation classes\n  const getAnimationClass = () => {\n    return animated ? \"blox-modal-animated\" : \"\";\n  };\n\n  // Create the modal element\n  const modalElement = (\n    <div\n      data-blox-modal-overlay=\"\"\n      className={`blox-modal-overlay ${getAnimationClass()} ${overlayClassName}`}\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: isCentered ? \"center\" : \"flex-start\",\n        justifyContent: \"center\",\n        backgroundColor: `var(--blox-modal-overlay-bg, ${STYLES.Modal.overlay.bgColor})`,\n        zIndex: zIndex,\n        padding: `var(--blox-modal-overlay-padding, ${STYLES.Modal.overlay.padding})`,\n        overflow: \"auto\",\n      }}\n      onClick={handleOverlayClick}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby={ariaLabelledby || (title ? `${modalId}-title` : undefined)}\n      aria-describedby={ariaDescribedby}\n      {...props}>\n      <div\n        ref={modalRef}\n        className={`blox-modal ${getAnimationClass()} ${contentClassName}`}\n        style={{\n          position: \"relative\",\n          backgroundColor: `var(--blox-modal-bg, ${STYLES.Modal.bgColor})`,\n          borderRadius: `var(--blox-modal-border-radius, ${STYLES.Modal.borderRadius})`,\n          boxShadow: `var(--blox-modal-box-shadow, ${STYLES.Modal.boxShadow})`,\n          maxWidth: \"100%\",\n          maxHeight: `var(--blox-modal-max-height, ${STYLES.Modal.maxHeight})`,\n          overflow: \"auto\",\n          outline: \"none\",\n          ...getSizeStyle(),\n        }}\n        tabIndex={-1}>\n        {/* Modal header */}\n        {(title || showCloseButton) && (\n          <div\n            className=\"blox-modal-header\"\n            style={{\n              padding: `var(--blox-modal-header-padding, ${STYLES.Modal.header.padding})`,\n              borderBottom: title ? `var(--blox-modal-header-border, ${STYLES.Modal.header.border})` : \"none\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}>\n            {title && (\n              <h3\n                id={`${modalId}-title`}\n                className=\"blox-modal-title\"\n                style={{\n                  margin: 0,\n                  fontSize: `var(--blox-modal-title-font-size, ${STYLES.Modal.title.fontSize})`,\n                  fontWeight: `var(--blox-modal-title-font-weight, ${STYLES.Modal.title.fontWeight})`,\n                  color: `var(--blox-modal-title-color, ${STYLES.Modal.title.color})`,\n                }}>\n                {title}\n              </h3>\n            )}\n            {showCloseButton && (\n              <ModalCloseButton\n                onClose={onClose}\n                style={{\n                  position: title ? `relative` : `absolute`,\n                  right: title ? \"0\" : `var(--blox-modal-close-button-right, ${STYLES.Modal.close.right})`,\n                  top: title ? `0` : `var(--blox-modal-close-button-top,  ${STYLES.Modal.close.top})`,\n                  background: `transparent`,\n                  border: `none`,\n                  cursor: `pointer`,\n                  padding: `var(--blox-modal-close-button-padding,  ${STYLES.Modal.close.padding})`,\n                  color: `var(--blox-modal-close-button-color,  ${STYLES.Modal.close.color})`,\n                  borderRadius: `var(--blox-modal-close-button-border-radius,  ${STYLES.Modal.close.borderRadius})`,\n                }}\n              />\n            )}\n          </div>\n        )}\n\n        {/* Modal body */}\n        <div\n          className=\"blox-modal-body\"\n          style={{\n            padding: `var(--blox-modal-body-padding,  ${STYLES.Modal.body.padding})`,\n          }}>\n          {children}\n        </div>\n\n        {/* Modal footer */}\n        {footer && (\n          <div\n            className=\"blox-modal-footer\"\n            style={{\n              padding: `var(--blox-modal-footer-padding, ${STYLES.Modal.footer.padding})`,\n              borderTop: `var(--blox-modal-footer-border, ${STYLES.Modal.footer.border})`,\n              display: `flex`,\n              justifyContent: `flex-end`,\n              gap: `var(--blox-modal-footer-gap, ${STYLES.Modal.footer.gap})`,\n            }}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return createPortal(modalElement, document.body);\n};\n\n// Attach sub-components\nModal.Content = ModalContent;\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\nModal.CloseButton = ModalCloseButton;\n\nexport default Modal;\n","// Radio.tsx\nimport React, { useRef, useContext, createContext, useMemo } from \"react\";\nimport { RadioProps, RadioGroupProps } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Create context for radio group\ninterface RadioGroupContextType {\n  name?: string;\n  value?: string;\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst RadioGroupContext = createContext<RadioGroupContextType>({});\n\n// Main Radio component\nconst Radio: React.FC<RadioProps> = ({ label, value, checked, defaultChecked, onChange, disabled = false, required = false, className = \"\", inputClassName = \"\", labelClassName = \"\", id, name, labelProps = {}, labelPosition = \"right\", helperText, errorMessage, hasError = false, ...props }) => {\n  // Get values from radio group context if available\n  const radioGroup = useContext(RadioGroupContext);\n\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-radio-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // Use group props if available, otherwise use individual props\n  const isWithinGroup = !!radioGroup.name;\n  const groupName = radioGroup.name;\n  const groupValue = radioGroup.value;\n  const groupOnChange = radioGroup.onChange;\n  const groupDisabled = radioGroup.disabled;\n  const groupRequired = radioGroup.required;\n\n  // Determine final props\n  const finalDisabled = disabled || (isWithinGroup ? groupDisabled : false);\n  const finalRequired = required || (isWithinGroup ? groupRequired : false);\n  const finalName = isWithinGroup ? groupName : name;\n\n  // Determine whether the radio is checked (for controlled usage within a group)\n  const isChecked = isWithinGroup ? groupValue === value : checked;\n\n  // Determine whether we're controlled or uncontrolled\n  const isControlled = isWithinGroup ? groupValue !== undefined : checked !== undefined;\n\n  // Handle change event\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (finalDisabled) return;\n\n    if (isWithinGroup) {\n      groupOnChange?.(value, event);\n    } else {\n      onChange?.(value, event);\n    }\n  };\n\n  return (\n    <div\n      className={`blox-radio-container ${className}`}\n      data-blox-radio=\"\"\n      data-checked={isControlled ? (isChecked ? \"true\" : \"false\") : undefined}\n      data-disabled={finalDisabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={finalRequired ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <input\n        type=\"radio\"\n        id={uniqueId}\n        name={finalName}\n        value={value}\n        checked={isChecked}\n        defaultChecked={!isControlled ? defaultChecked : undefined}\n        onChange={handleChange}\n        disabled={finalDisabled}\n        required={finalRequired}\n        className={`blox-radio-input ${inputClassName}`}\n        data-blox-radio-input=\"\"\n        aria-invalid={hasError}\n        aria-describedby={helperText || errorMessage ? `${uniqueId}-description` : undefined}\n        {...props}\n      />\n\n      {label && (\n        <label\n          htmlFor={uniqueId}\n          className={`blox-radio-label ${labelClassName}`}\n          data-blox-radio-label=\"\"\n          style={{\n            color: `var(--blox-radio-label-color, inherit)`,\n          }}\n          {...labelProps}>\n          {label}\n        </label>\n      )}\n\n      {(helperText || errorMessage) && (\n        <div\n          id={`${uniqueId}-description`}\n          className={`blox-radio-description ${hasError ? \"blox-radio-error\" : \"\"}`}\n          data-blox-radio-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}\n          style={{\n            color: `var(--blox-radio-error-color, inherit)`,\n          }}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Radio Group Component\nconst RadioGroup: React.FC<RadioGroupProps> = ({ children, name, value, defaultValue, onChange, disabled = false, required = false, direction = \"vertical\", className = \"\", label, helperText, errorMessage, hasError = false, ...props }) => {\n  // Handle change event in the group\n  const handleChange = (radioValue: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(radioValue);\n  };\n\n  // Create context value\n  const contextValue = useMemo(\n    () => ({\n      name,\n      value,\n      onChange: handleChange,\n      disabled,\n      required,\n    }),\n    [name, value, disabled, required]\n  );\n\n  // Generate a unique ID for the group\n  const groupId = useRef(`blox-radio-group-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  return (\n    <RadioGroupContext.Provider value={contextValue}>\n      <div\n        className={`blox-radio-group ${className}`}\n        data-blox-radio-group=\"\"\n        data-direction={direction}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-error={hasError ? \"true\" : \"false\"}\n        role=\"radiogroup\"\n        aria-labelledby={label ? `${groupId}-label` : undefined}\n        aria-describedby={helperText || errorMessage ? `${groupId}-description` : undefined}\n        {...props}>\n        {label && (\n          <div\n            id={`${groupId}-label`}\n            className=\"blox-radio-group-label\"\n            data-blox-radio-group-label=\"\">\n            {label}\n          </div>\n        )}\n\n        <div\n          className=\"blox-radio-group-items\"\n          data-blox-radio-group-items=\"\">\n          {children}\n        </div>\n\n        {(helperText || errorMessage) && (\n          <div\n            id={`${groupId}-description`}\n            className={`blox-radio-group-description ${hasError ? \"blox-radio-group-error\" : \"\"}`}\n            data-blox-radio-group-description=\"\"\n            data-error={hasError ? \"true\" : \"false\"}>\n            {hasError ? errorMessage : helperText}\n          </div>\n        )}\n      </div>\n    </RadioGroupContext.Provider>\n  );\n};\nexport default Radio;\n","// Table.tsx\nimport React, { createContext, useContext, useCallback, useMemo } from \"react\";\nimport { TableProps, TableHeaderProps, TableBodyProps, TableRowProps, TableHeaderCellProps, TableCellProps, TableCaptionProps, TableContainerProps, TableEmptyStateProps, TableLoadingStateProps, TableContextValue, TableColumn, SortDirection, TableComposition } from \"./types\";\n\n// Create context for table state\nconst TableContext = createContext<TableContextValue<any>>({\n  data: [],\n  columns: [],\n  autoGenerateRowKey: true,\n});\n\n// Hook to use table context\nexport const useTable = () => {\n  const context = useContext(TableContext);\n  if (!context) {\n    throw new Error(\"useTable must be used within a Table component\");\n  }\n  return context;\n};\n\n// Table Container Component\nconst TableContainer: React.FC<TableContainerProps> = ({ children, horizontalScroll = false, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-table-container ${className}`}\n      data-blox-table-container=\"\"\n      data-horizontal-scroll={horizontalScroll}\n      style={{\n        overflowX: horizontalScroll ? \"auto\" : undefined,\n        width: \"100%\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Table Caption Component\nconst TableCaption: React.FC<TableCaptionProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <caption\n      className={`blox-table-caption ${className}`}\n      data-blox-table-caption=\"\"\n      {...props}>\n      {children}\n    </caption>\n  );\n};\n\n// Table Header Component\nconst TableHeader: React.FC<TableHeaderProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <thead\n      className={`blox-table-header ${className}`}\n      data-blox-table-header=\"\"\n      {...props}>\n      {children}\n    </thead>\n  );\n};\n\n// Table Body Component\nconst TableBody: React.FC<TableBodyProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tbody\n      className={`blox-table-body ${className}`}\n      data-blox-table-body=\"\"\n      {...props}>\n      {children}\n    </tbody>\n  );\n};\n\n// Table Row Component\nconst TableRow: React.FC<TableRowProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <tr\n      className={`blox-table-row ${className}`}\n      data-blox-table-row=\"\"\n      {...props}>\n      {children}\n    </tr>\n  );\n};\n\n// Table Header Cell Component\nconst TableHeaderCell: React.FC<TableHeaderCellProps> = ({ children, columnId, sortable = false, sorted = false, sortDirection = \"none\", onSort, center = false, width, className = \"\", style, ...props }) => {\n  // Internal props for the context version\n  const table = useContext(TableContext);\n\n  // Determine if this column is sorted (when used within Table)\n  const isSorted = sorted || (columnId && table.sortColumn === columnId);\n  const effectiveSortDirection = isSorted ? sortDirection || table.sortDirection || \"none\" : \"none\";\n\n  // Handle sort click\n  const handleSortClick = useCallback(() => {\n    if (!sortable) return;\n\n    if (onSort && columnId) {\n      onSort(columnId);\n    } else if (table.onSort && columnId) {\n      let newDirection: SortDirection = \"asc\";\n\n      if (columnId === table.sortColumn) {\n        if (table.sortDirection === \"asc\") {\n          newDirection = \"desc\";\n        } else if (table.sortDirection === \"desc\") {\n          newDirection = \"none\";\n        }\n      }\n\n      table.onSort(columnId, newDirection);\n    }\n  }, [sortable, onSort, columnId, table]);\n\n  return (\n    <th\n      className={`blox-table-header-cell ${className}`}\n      data-blox-table-header-cell=\"\"\n      data-sortable={sortable}\n      data-sorted={isSorted}\n      data-sort-direction={effectiveSortDirection}\n      data-center={center}\n      onClick={sortable ? handleSortClick : undefined}\n      style={{\n        ...(width ? { width } : {}),\n        ...(center ? { textAlign: \"center\" } : {}),\n        cursor: sortable ? \"pointer\" : undefined,\n        ...style,\n      }}\n      {...props}>\n      {children}\n      {sortable && (\n        <span\n          className=\"blox-table-sort-icon\"\n          data-blox-table-sort-icon=\"\">\n          {effectiveSortDirection === \"asc\" && \"▲\"}\n          {effectiveSortDirection === \"desc\" && \"▼\"}\n          {effectiveSortDirection === \"none\" && \"⇅\"}\n        </span>\n      )}\n    </th>\n  );\n};\n\n// Table Cell Component\nconst TableCell: React.FC<TableCellProps> = ({ children, columnId, center = false, className = \"\", style, ...props }) => {\n  return (\n    <td\n      className={`blox-table-cell ${className}`}\n      data-blox-table-cell=\"\"\n      data-column-id={columnId}\n      data-center={center}\n      style={{\n        ...(center ? { textAlign: \"center\" } : {}),\n        ...style,\n      }}\n      {...props}>\n      {children}\n    </td>\n  );\n};\n\n// Table Empty State Component\nconst TableEmpty: React.FC<TableEmptyStateProps> = ({ children = \"No data available\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-empty ${className}`}\n      data-blox-table-empty=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-empty-cell\"\n        data-blox-table-empty-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Table Loading State Component\nconst TableLoading: React.FC<TableLoadingStateProps> = ({ children = \"Loading...\", colSpan, className = \"\", ...props }) => {\n  const table = useContext(TableContext);\n  const effectiveColSpan = colSpan || table.columns.length || 1;\n\n  return (\n    <tr\n      className={`blox-table-loading ${className}`}\n      data-blox-table-loading=\"\"\n      {...props}>\n      <td\n        colSpan={effectiveColSpan}\n        className=\"blox-table-loading-cell\"\n        data-blox-table-loading-cell=\"\"\n        style={{ textAlign: \"center\", padding: \"1rem\" }}>\n        {children}\n      </td>\n    </tr>\n  );\n};\n\n// Main Table Component\nconst Table = <T extends Record<string, any> = any>({ data = [], columns = [], sortColumn, sortDirection = \"none\", onSort, autoGenerateRowKey = true, getRowKey, getRowClassName, children, className = \"\", ...props }: TableProps<T> & { children?: React.ReactNode }) => {\n  // Context value\n  const contextValue = useMemo(\n    () => ({\n      data,\n      columns,\n      sortColumn,\n      sortDirection,\n      onSort,\n      autoGenerateRowKey,\n      getRowKey,\n      getRowClassName,\n    }),\n    [data, columns, sortColumn, sortDirection, onSort, autoGenerateRowKey, getRowKey, getRowClassName]\n  );\n\n  // Render function for compositional usage vs. declarative\n  const renderContent = () => {\n    // If children are provided, use compositional pattern\n    if (children) {\n      return children;\n    }\n\n    // Otherwise, use declarative pattern with columns and data\n    return (\n      <>\n        <TableHeader>\n          <TableRow>\n            {columns.map((column) => (\n              <TableHeaderCell\n                key={column.id}\n                columnId={column.id}\n                sortable={column.sortable}\n                center={column.center}\n                width={column.width}\n                {...column.headerProps}>\n                {column.header}\n              </TableHeaderCell>\n            ))}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.length === 0 ? (\n            <TableEmpty colSpan={columns.length} />\n          ) : (\n            data.map((row, rowIndex) => {\n              const rowKey = getRowKey ? getRowKey(row, rowIndex) : autoGenerateRowKey ? `row-${rowIndex}` : undefined;\n\n              const rowClassName = getRowClassName ? getRowClassName(row, rowIndex) : \"\";\n\n              return (\n                <TableRow\n                  key={rowKey}\n                  className={rowClassName}>\n                  {columns.map((column) => {\n                    // Get cell content\n                    let cellContent;\n                    if (column.cell) {\n                      const value = column.accessor ? column.accessor(row, rowIndex) : row[column.id];\n                      cellContent = column.cell(value, row, rowIndex);\n                    } else if (column.accessor) {\n                      cellContent = column.accessor(row, rowIndex);\n                    } else {\n                      cellContent = row[column.id];\n                    }\n\n                    return (\n                      <TableCell\n                        key={`${rowKey}-${column.id}`}\n                        columnId={column.id}\n                        center={column.center}\n                        {...column.cellProps}>\n                        {cellContent}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })\n          )}\n        </TableBody>\n      </>\n    );\n  };\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <table\n        className={`blox-table ${className}`}\n        data-blox-table=\"\"\n        {...props}>\n        {renderContent()}\n      </table>\n    </TableContext.Provider>\n  );\n};\n\n// Attach sub-components\nTable.Container = TableContainer;\nTable.Caption = TableCaption;\nTable.Header = TableHeader;\nTable.Body = TableBody;\nTable.Row = TableRow;\nTable.HeaderCell = TableHeaderCell;\nTable.Cell = TableCell;\nTable.Empty = TableEmpty;\nTable.Loading = TableLoading;\n\nexport default Table;\n","// Tabs.tsx\nimport React, { createContext, useContext, useState, useEffect, memo } from \"react\";\nimport { TabsProps, TabListProps, TabProps, TabPanelsProps, TabPanelProps, TabsContextType, TabsComposition } from \"./types\";\n\n// Create context for tabs state\nconst TabsContext = createContext<TabsContextType>({\n  activeTabId: \"\",\n  setActiveTabId: () => {},\n  orientation: \"horizontal\",\n  animated: true,\n});\n\n// Hook to use tabs context\nconst useTabs = () => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"Tabs compound components must be used within a Tabs component\");\n  }\n  return context;\n};\n\n// TabList Component\nconst TabList: React.FC<TabListProps> = ({ children, orientation, className = \"\", ...props }) => {\n  const { orientation: contextOrientation } = useTabs();\n  const finalOrientation = orientation || contextOrientation;\n\n  return (\n    <div\n      className={`blox-tab-list ${className}`}\n      role=\"tablist\"\n      aria-orientation={finalOrientation}\n      data-blox-tab-list=\"\"\n      data-orientation={finalOrientation}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Tab Component\nconst Tab: React.FC<TabProps> = ({ id, children, disabled = false, className = \"\", ...props }) => {\n  const { activeTabId, setActiveTabId } = useTabs();\n  const isActive = activeTabId === id;\n\n  const handleClick = () => {\n    if (!disabled) {\n      setActiveTabId(id);\n    }\n  };\n\n  return (\n    <button\n      id={`blox-tab-${id}`}\n      role=\"tab\"\n      aria-selected={isActive}\n      aria-controls={`blox-tabpanel-${id}`}\n      tabIndex={isActive ? 0 : -1}\n      disabled={disabled}\n      onClick={handleClick}\n      className={`blox-tab ${className}`}\n      data-blox-tab=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// TabPanels Component\nconst TabPanels: React.FC<TabPanelsProps> = memo(({ children, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-tab-panels ${className}`}\n      data-blox-tab-panels=\"\"\n      {...props}>\n      {children}\n    </div>\n  );\n});\n\n// TabPanel Component\nconst TabPanel: React.FC<TabPanelProps> = ({ tabId, children, className = \"\", ...props }) => {\n  const { activeTabId, animated } = useTabs();\n  const isActive = activeTabId === tabId;\n\n  if (!isActive) return null;\n\n  return (\n    <div\n      id={`blox-tabpanel-${tabId}`}\n      role=\"tabpanel\"\n      aria-labelledby={`blox-tab-${tabId}`}\n      className={`blox-tab-panel ${className}`}\n      data-blox-tab-panel=\"\"\n      data-state={isActive ? \"active\" : \"inactive\"}\n      data-animated={animated ? \"true\" : \"false\"}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Main Tabs Component\nconst Tabs: React.FC<TabsProps> & TabsComposition = ({ activeTab, defaultActiveTab, onChange, orientation = \"horizontal\", animated = true, children, className = \"\", ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalActiveTabId, setInternalActiveTabId] = useState<string>(() => {\n    // Try to find the first tab id from children if no default or active tab is provided\n    if (defaultActiveTab) return defaultActiveTab;\n\n    // This is just a fallback, preferably the user should provide defaultActiveTab\n    return \"\";\n  });\n\n  // Determine if we're in controlled mode\n  const isControlled = activeTab !== undefined;\n  const activeTabId = isControlled ? activeTab : internalActiveTabId;\n\n  // Handler for tab changes\n  const handleTabChange = (tabId: string) => {\n    if (!isControlled) {\n      setInternalActiveTabId(tabId);\n    }\n\n    if (onChange) {\n      onChange(tabId);\n    }\n  };\n\n  // Update internal active tab when activeTab prop changes (controlled mode)\n  useEffect(() => {\n    if (activeTab !== undefined) {\n      setInternalActiveTabId(activeTab);\n    }\n  }, [activeTab]);\n\n  // Context value\n  const contextValue = {\n    activeTabId,\n    setActiveTabId: handleTabChange,\n    orientation,\n    animated,\n  };\n\n  return (\n    <TabsContext.Provider value={contextValue}>\n      <div\n        className={`blox-tabs ${className}`}\n        data-blox-tabs=\"\"\n        data-orientation={orientation}\n        {...props}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  );\n};\n\n// Attach sub-components\nTabs.List = TabList;\nTabs.Tab = Tab;\nTabs.Panels = TabPanels;\nTabs.Panel = TabPanel;\n\nexport default Tabs;\n","// Toggle.tsx\nimport React, { memo, useRef, useState, useContext, createContext, useEffect } from \"react\";\nimport { ToggleProps, ToggleGroupProps, ToggleGroupContextValue, ToggleComposition } from \"./types\";\n\n// Create context for the toggle group\nconst ToggleGroupContext = createContext<ToggleGroupContextValue | null>(null);\n\n// Hook to use toggle group context\nconst useToggleGroup = () => {\n  const context = useContext(ToggleGroupContext);\n  return context;\n};\n\n// Standalone Toggle component\nconst Toggle: React.FC<ToggleProps> & ToggleComposition = ({ pressed, defaultPressed, onChange, value, disabled = false, className = \"\", children, ...props }) => {\n  // Get toggle group context (if any)\n  const groupContext = useToggleGroup();\n\n  // Determine if we're controlled internally or by the group\n  const isGrouped = groupContext !== null;\n\n  // For non-grouped usage, manage internal pressed state\n  const [internalPressed, setInternalPressed] = useState<boolean>(defaultPressed ?? false);\n\n  // Determine if this toggle is pressed based on group context or internal state\n  const isPressed = isGrouped ? (groupContext!.type === \"single\" ? groupContext!.value === value : Array.isArray(groupContext!.value) && value !== undefined ? groupContext!.value.includes(value) : false) : pressed !== undefined ? pressed : internalPressed;\n\n  // Handle toggle press\n  const handleToggle = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // If disabled, do nothing\n    if (disabled || (isGrouped && groupContext!.disabled)) {\n      event.preventDefault();\n      return;\n    }\n\n    // If part of a group, update group value\n    if (isGrouped && value !== undefined) {\n      groupContext!.updateValue(value, !isPressed);\n    } else {\n      // Otherwise update internal state for uncontrolled usage\n      if (pressed === undefined) {\n        setInternalPressed(!internalPressed);\n      }\n\n      // Call onChange handler if provided\n      if (onChange) {\n        onChange(!isPressed, event);\n      }\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      role=\"button\"\n      aria-pressed={isPressed}\n      disabled={disabled || (isGrouped && groupContext!.disabled)}\n      className={`blox-toggle ${isPressed ? \"blox-toggle-pressed\" : \"\"} ${className}`}\n      data-blox-toggle=\"\"\n      data-pressed={isPressed ? \"true\" : \"false\"}\n      data-disabled={disabled || (isGrouped && groupContext!.disabled) ? \"true\" : \"false\"}\n      onClick={handleToggle}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Toggle Group component\nconst ToggleGroup: React.FC<ToggleGroupProps> = memo(({ children, type = \"single\", value, defaultValue, onChange, allowDeselect = false, disabled = false, className = \"\", orientation = \"horizontal\", spacing = \"normal\" }) => {\n  // Store the internal value for uncontrolled usage\n  const [internalValue, setInternalValue] = useState<string | string[]>(defaultValue ?? (type === \"single\" ? \"\" : []));\n\n  // Determine if we're controlled or uncontrolled\n  const isControlled = value !== undefined;\n  const currentValue = isControlled ? value : internalValue;\n\n  // Handle value updates from toggle items\n  const updateValue = (itemValue: string, pressed: boolean) => {\n    let newValue: string | string[];\n\n    if (type === \"single\") {\n      // For single selection, set the value to the item value or empty if deselecting\n      newValue = pressed ? itemValue : allowDeselect ? \"\" : itemValue;\n    } else {\n      // For multiple selection, add or remove the item value from the array\n      const valueArray = Array.isArray(currentValue) ? currentValue : [];\n      newValue = pressed ? [...valueArray, itemValue] : valueArray.filter((v) => v !== itemValue);\n    }\n\n    // Update internal state for uncontrolled usage\n    if (!isControlled) {\n      setInternalValue(newValue);\n    }\n\n    // Call onChange handler if provided\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  // Create the context value for children\n  const contextValue: ToggleGroupContextValue = {\n    type,\n    value: currentValue,\n    updateValue,\n    disabled,\n    allowDeselect,\n  };\n\n  return (\n    <ToggleGroupContext.Provider value={contextValue}>\n      <div\n        role=\"group\"\n        className={`blox-toggle-group ${className}`}\n        data-blox-toggle-group=\"\"\n        data-orientation={orientation}\n        data-spacing={spacing}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        style={{\n          display: \"flex\",\n          flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n          gap: spacing === \"none\" ? \"\" : spacing === \"compact\" ? \"var(--blox-toggle-spacing-1, 0.25rem)\" : spacing === \"loose\" ? \"var(--blox-toggle-spacing-3, 0.75rem)\" : \"var(--blox-toggle-spacing-2, 0.5rem)\",\n        }}>\n        {children}\n      </div>\n    </ToggleGroupContext.Provider>\n  );\n});\n\n// Attach Group component to Toggle\nToggle.Group = ToggleGroup;\n\nexport default Toggle;\n","// Tooltip.tsx\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { TooltipProps, TooltipPlacement } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, isOpen: controlledIsOpen, placement = \"bottom\", offset = 8, showDelay = 0, hideDelay = 0, showOnHover = true, showOnFocus = true, id, closeOnEsc = true, interactive = false, zIndex = 1000, isDisabled = false, tooltipClassName = \"\", minWidth, maxWidth, className = \"\", children, ...rest }) => {\n  // For controlled/uncontrolled usage\n  const [uncontrolledIsOpen, setUncontrolledIsOpen] = useState(false);\n  const isControlled = controlledIsOpen !== undefined;\n  const isOpen = isControlled ? controlledIsOpen : uncontrolledIsOpen;\n\n  // Refs for DOM elements\n  const triggerRef = useRef<HTMLElement | null>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const childRef = useRef<HTMLElement | null>(null);\n\n  // Timers for delay\n  const showTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const hideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State for position\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0,\n    currentPlacement: placement,\n  });\n\n  // Save a reference to the child element\n  useEffect(() => {\n    if (childRef.current && React.isValidElement(children)) {\n      triggerRef.current = childRef.current;\n    }\n  }, [children]);\n\n  // Calculate tooltip position based on trigger element and placement\n  const updatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current || !isOpen) return;\n\n    const triggerRect = triggerRef.current.getBoundingClientRect();\n    const tooltipRect = tooltipRef.current.getBoundingClientRect();\n\n    // Available space in different directions\n    const spaceTop = triggerRect.top;\n    const spaceRight = window.innerWidth - triggerRect.right;\n    const spaceBottom = window.innerHeight - triggerRect.bottom;\n    const spaceLeft = triggerRect.left;\n\n    // Determine best placement based on available space\n    let finalPlacement: TooltipPlacement = placement;\n    const primaryPlacement = placement.split(\"-\")[0] as \"top\" | \"right\" | \"bottom\" | \"left\";\n\n    // Check if preferred placement has enough space, otherwise flip to opposite side\n    switch (primaryPlacement) {\n      case \"top\":\n        if (spaceTop < tooltipRect.height + offset && spaceBottom > tooltipRect.height + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"bottom-start\" : placement.includes(\"end\") ? \"bottom-end\" : \"bottom\";\n        }\n        break;\n      case \"right\":\n        if (spaceRight < tooltipRect.width + offset && spaceLeft > tooltipRect.width + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"left-start\" : placement.includes(\"end\") ? \"left-end\" : \"left\";\n        }\n        break;\n      case \"bottom\":\n        if (spaceBottom < tooltipRect.height + offset && spaceTop > tooltipRect.height + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"top-start\" : placement.includes(\"end\") ? \"top-end\" : \"top\";\n        }\n        break;\n      case \"left\":\n        if (spaceLeft < tooltipRect.width + offset && spaceRight > tooltipRect.width + offset) {\n          finalPlacement = placement.includes(\"start\") ? \"right-start\" : placement.includes(\"end\") ? \"right-end\" : \"right\";\n        }\n        break;\n    }\n\n    // Calculate position based on final placement\n    let x = 0;\n    let y = 0;\n\n    switch (finalPlacement) {\n      case \"top\":\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"top-start\":\n        x = triggerRect.left;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"top-end\":\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.top - tooltipRect.height - offset;\n        break;\n      case \"right\":\n        x = triggerRect.right + offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case \"right-start\":\n        x = triggerRect.right + offset;\n        y = triggerRect.top;\n        break;\n      case \"right-end\":\n        x = triggerRect.right + offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n      case \"bottom\":\n        x = triggerRect.left + triggerRect.width / 2 - tooltipRect.width / 2;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"bottom-start\":\n        x = triggerRect.left;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"bottom-end\":\n        x = triggerRect.right - tooltipRect.width;\n        y = triggerRect.bottom + offset;\n        break;\n      case \"left\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top + triggerRect.height / 2 - tooltipRect.height / 2;\n        break;\n      case \"left-start\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.top;\n        break;\n      case \"left-end\":\n        x = triggerRect.left - tooltipRect.width - offset;\n        y = triggerRect.bottom - tooltipRect.height;\n        break;\n    }\n\n    // Keep tooltip within viewport bounds\n    // Adjust x position\n    if (x < 10) {\n      x = 10;\n    } else if (x + tooltipRect.width > window.innerWidth - 10) {\n      x = window.innerWidth - tooltipRect.width - 10;\n    }\n\n    // Adjust y position\n    if (y < 10) {\n      y = 10;\n    } else if (y + tooltipRect.height > window.innerHeight - 10) {\n      y = window.innerHeight - tooltipRect.height - 10;\n    }\n\n    setPosition({\n      x,\n      y,\n      currentPlacement: finalPlacement,\n    });\n  }, [isOpen, placement, offset]);\n\n  // Handle showing the tooltip\n  const handleShow = useCallback(() => {\n    if (isDisabled) return;\n\n    if (hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n\n    if (!isControlled) {\n      if (showDelay) {\n        showTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(true);\n        }, showDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(true);\n      }\n    }\n  }, [isControlled, isDisabled, showDelay]);\n\n  // Handle hiding the tooltip\n  const handleHide = useCallback(() => {\n    if (isDisabled) return;\n\n    if (showTimeoutRef.current) {\n      clearTimeout(showTimeoutRef.current);\n      showTimeoutRef.current = null;\n    }\n\n    if (!isControlled) {\n      if (hideDelay) {\n        hideTimeoutRef.current = setTimeout(() => {\n          setUncontrolledIsOpen(false);\n        }, hideDelay) as unknown as NodeJS.Timeout;\n      } else {\n        setUncontrolledIsOpen(false);\n      }\n    }\n  }, [isControlled, isDisabled, hideDelay]);\n\n  // Prevent hiding when interacting with tooltip\n  const handleTooltipMouseEnter = useCallback(() => {\n    if (interactive && hideTimeoutRef.current) {\n      clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = null;\n    }\n  }, [interactive]);\n\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        handleHide();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, closeOnEsc, handleHide]);\n\n  // Update position when tooltip opens or window resizes\n  useEffect(() => {\n    if (!isOpen) return;\n\n    // Update position immediately\n    updatePosition();\n\n    // And then after a short delay to ensure content is fully rendered\n    const delayedUpdate = setTimeout(updatePosition, 10);\n\n    // Update on resize\n    window.addEventListener(\"resize\", updatePosition);\n    window.addEventListener(\"scroll\", updatePosition, true);\n\n    return () => {\n      clearTimeout(delayedUpdate);\n      window.removeEventListener(\"resize\", updatePosition);\n      window.removeEventListener(\"scroll\", updatePosition, true);\n    };\n  }, [isOpen, updatePosition]);\n\n  // Clear timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (showTimeoutRef.current) clearTimeout(showTimeoutRef.current);\n      if (hideTimeoutRef.current) clearTimeout(hideTimeoutRef.current);\n    };\n  }, []);\n\n  // Render tooltip\n  const renderTooltip = () => {\n    if (!isOpen) return null;\n\n    const tooltipContent = (\n      <div\n        ref={tooltipRef}\n        role=\"tooltip\"\n        id={id}\n        className={`blox-tooltip ${tooltipClassName}`}\n        style={\n          {\n            position: \"fixed\",\n            left: `${position.x}px`,\n            top: `${position.y}px`,\n            zIndex,\n            minWidth: minWidth,\n            maxWidth: maxWidth,\n            \"--blox-tooltip-min-width\": typeof minWidth === \"number\" ? `${minWidth}px` : minWidth,\n            \"--blox-tooltip-max-width\": typeof maxWidth === \"number\" ? `${maxWidth}px` : maxWidth,\n            \"--blox-tooltip-offset\": `${offset || STYLES.Tooltip.offset}px`,\n            \"--blox-tooltip-placement\": position.currentPlacement,\n          } as React.CSSProperties\n        }\n        onMouseEnter={handleTooltipMouseEnter}\n        onMouseLeave={interactive ? handleHide : undefined}\n        data-placement={position.currentPlacement}>\n        {content}\n      </div>\n    );\n\n    return createPortal(tooltipContent, document.body);\n  };\n\n  // Clone the child element and attach event handlers\n  const childElement = React.Children.only(children);\n\n  if (!React.isValidElement(childElement)) {\n    console.error(\"Tooltip children must be a valid React element\");\n    return <>{children}</>;\n  }\n\n  const childProps: React.HTMLAttributes<HTMLElement> = {};\n\n  if (showOnHover) {\n    childProps.onMouseEnter = (e) => {\n      handleShow();\n      childElement.props.onMouseEnter?.(e);\n    };\n\n    childProps.onMouseLeave = (e) => {\n      handleHide();\n      childElement.props.onMouseLeave?.(e);\n    };\n  }\n\n  if (showOnFocus) {\n    childProps.onFocus = (e) => {\n      handleShow();\n      childElement.props.onFocus?.(e);\n    };\n\n    childProps.onBlur = (e) => {\n      handleHide();\n      childElement.props.onBlur?.(e);\n    };\n  }\n\n  // Add the ref to the child element\n  const enhancedChild = React.cloneElement(childElement, {\n    ...childProps,\n    ref: (node: HTMLElement) => {\n      // Forward the ref to the child if it has one\n      if (typeof childElement.ref === \"function\") {\n        childElement.ref(node);\n      } else if (childElement.ref) {\n        (childElement.ref as React.MutableRefObject<HTMLElement>).current = node;\n      }\n\n      childRef.current = node;\n      triggerRef.current = node;\n    },\n    className: `${childElement.props.className || \"\"} ${className}`.trim(),\n  });\n\n  return (\n    <>\n      {enhancedChild}\n      {renderTooltip()}\n    </>\n  );\n};\n\nexport default Tooltip;\n","// SegmentedControl.tsx\nimport React, { createContext, useContext, useState, useCallback } from \"react\";\nimport { SegmentedControlProps, SegmentItemProps, SegmentedControlContextType, SegmentedControlComposition } from \"./types\";\n\n// Create context for segmented control state\nconst SegmentedControlContext = createContext<SegmentedControlContextType>({\n  selectedValue: null,\n  onChange: () => {},\n  allowDeselect: false,\n  disabled: false,\n});\n\n// Hook to use segmented control context\nconst useSegmentedControl = () => {\n  const context = useContext(SegmentedControlContext);\n  if (!context) {\n    throw new Error(\"useSegmentedControl must be used within a SegmentedControl component\");\n  }\n  return context;\n};\n\n// Segment Item Component\nconst SegmentItem: React.FC<SegmentItemProps> = ({ value, disabled = false, children, className = \"\", ...props }) => {\n  const { selectedValue, onChange, allowDeselect, disabled: controlDisabled } = useSegmentedControl();\n  const isSelected = selectedValue === value;\n  const isDisabled = disabled || controlDisabled;\n\n  const handleClick = () => {\n    if (isDisabled) return;\n\n    if (isSelected && allowDeselect) {\n      onChange(\"\");\n    } else if (!isSelected) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      role=\"radio\"\n      aria-checked={isSelected}\n      disabled={isDisabled}\n      className={`blox-segment-item ${className}`}\n      data-blox-segment-item=\"\"\n      data-state={isSelected ? \"selected\" : \"unselected\"}\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      onClick={handleClick}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\n// Main SegmentedControl Component\nconst SegmentedControl: React.FC<SegmentedControlProps> & SegmentedControlComposition = ({ value, defaultValue = \"\", onChange, allowDeselect = false, disabled = false, children, className = \"\", ...props }) => {\n  // For internal state (uncontrolled mode)\n  const [internalValue, setInternalValue] = useState<string>(defaultValue);\n\n  // Determine if we're in controlled mode\n  const isControlled = value !== undefined;\n  const selectedValue = isControlled ? value : internalValue;\n\n  // Handle value change\n  const handleChange = useCallback(\n    (newValue: string) => {\n      if (!isControlled) {\n        setInternalValue(newValue);\n      }\n\n      if (onChange) {\n        onChange(newValue);\n      }\n    },\n    [isControlled, onChange]\n  );\n\n  // Context value\n  const contextValue = {\n    selectedValue,\n    onChange: handleChange,\n    allowDeselect,\n    disabled,\n  };\n\n  return (\n    <SegmentedControlContext.Provider value={contextValue}>\n      <div\n        role=\"radiogroup\"\n        className={`blox-segmented-control ${className}`}\n        data-blox-segmented-control=\"\"\n        data-disabled={disabled ? \"true\" : \"false\"}\n        {...props}>\n        {children}\n      </div>\n    </SegmentedControlContext.Provider>\n  );\n};\n\n// Attach sub-components\nSegmentedControl.Item = SegmentItem;\n\nexport default SegmentedControl;\n","// DragDropContext.tsx\nimport React, { createContext, useContext, useRef, useState, useEffect, useCallback } from \"react\";\nimport { DragContextValue, DragDropProviderProps, DragItem, Coordinates, DropTargetInfo, SortableItemInfo, DragStartEvent, DragMoveEvent, DragEndEvent } from \"./types\";\n\n// Create context with default values\nconst DragDropContext = createContext<DragContextValue>({\n  draggingItem: null,\n  dragPosition: null,\n  dropTargets: new Map(),\n  sortableItems: new Map(),\n  registerDropTarget: () => {},\n  unregisterDropTarget: () => {},\n  registerSortableItem: () => {},\n  unregisterSortableItem: () => {},\n  startDrag: () => {},\n  endDrag: () => {},\n  getDragOverTarget: () => null,\n});\n\n// Hook to use the drag and drop context\nexport const useDragDrop = () => useContext(DragDropContext);\n\n// Provider component\nexport const DragDropProvider: React.FC<DragDropProviderProps> = ({ children, onDragStart, onDragMove, onDragEnd, onDragCancel }) => {\n  // State for tracking the currently dragged item\n  const [draggingItem, setDraggingItem] = useState<DragItem | null>(null);\n\n  // State for tracking the current position of the drag\n  const [dragPosition, setDragPosition] = useState<Coordinates | null>(null);\n\n  // Refs for tracking drop targets and sortable items\n  const dropTargetsRef = useRef(new Map<string, DropTargetInfo>());\n  const sortableItemsRef = useRef(new Map<string, SortableItemInfo>());\n\n  // Refs for tracking drag state\n  const dragStartPositionRef = useRef<Coordinates | null>(null);\n  const dragTargetRef = useRef<HTMLElement | null>(null);\n  const draggingRef = useRef<boolean>(false);\n  const lastPositionRef = useRef<Coordinates | null>(null);\n\n  // Register a drop target\n  const registerDropTarget = useCallback((target: DropTargetInfo) => {\n    dropTargetsRef.current.set(target.id, target);\n  }, []);\n\n  // Unregister a drop target\n  const unregisterDropTarget = useCallback((id: string) => {\n    dropTargetsRef.current.delete(id);\n  }, []);\n\n  // Register a sortable item\n  const registerSortableItem = useCallback((item: SortableItemInfo) => {\n    sortableItemsRef.current.set(item.id, item);\n  }, []);\n\n  // Unregister a sortable item\n  const unregisterSortableItem = useCallback((id: string) => {\n    sortableItemsRef.current.delete(id);\n  }, []);\n\n  // Get the current drop target the cursor is over\n  const getDragOverTarget = useCallback((): DropTargetInfo | null => {\n    if (!dragPosition) return null;\n\n    // Check each drop target to see if cursor is inside\n    for (const target of dropTargetsRef.current.values()) {\n      const { rect } = target;\n      if (dragPosition.x >= rect.left && dragPosition.x <= rect.right && dragPosition.y >= rect.top && dragPosition.y <= rect.bottom) {\n        return target;\n      }\n    }\n\n    return null;\n  }, [dragPosition]);\n\n  // Start dragging an item\n  const startDrag = useCallback(\n    (item: DragItem, nativeEvent: MouseEvent | TouchEvent) => {\n      const target = nativeEvent.target as HTMLElement;\n\n      // Store the element that was clicked/touched\n      dragTargetRef.current = target;\n\n      // Calculate initial position\n      let initialX: number;\n      let initialY: number;\n\n      if (nativeEvent instanceof MouseEvent) {\n        initialX = nativeEvent.clientX;\n        initialY = nativeEvent.clientY;\n      } else {\n        // TouchEvent\n        initialX = nativeEvent.touches[0].clientX;\n        initialY = nativeEvent.touches[0].clientY;\n      }\n\n      // Set initial position\n      dragStartPositionRef.current = { x: initialX, y: initialY };\n      setDragPosition({ x: initialX, y: initialY });\n\n      // Set dragging state\n      draggingRef.current = true;\n      setDraggingItem(item);\n      lastPositionRef.current = { x: initialX, y: initialY };\n\n      // Emit drag start event\n      if (onDragStart) {\n        onDragStart({\n          item,\n          coordinates: { x: initialX, y: initialY },\n          target,\n          nativeEvent,\n        });\n      }\n\n      // Add document event listeners for drag move and end\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n      document.addEventListener(\"mouseup\", handleDragEnd);\n      document.addEventListener(\"touchend\", handleDragEnd);\n      document.addEventListener(\"keydown\", handleKeyDown);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    },\n    [onDragStart]\n  );\n\n  // Handle mouse move during drag\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid text selection\n      e.preventDefault();\n\n      // Calculate new position\n      const newX = e.clientX;\n      const newY = e.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle touch move during drag\n  const handleTouchMove = useCallback(\n    (e: TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !lastPositionRef.current) return;\n\n      // Prevent default to avoid scrolling\n      e.preventDefault();\n\n      // Calculate new position\n      const touch = e.touches[0];\n      const newX = touch.clientX;\n      const newY = touch.clientY;\n      const newPosition = { x: newX, y: newY };\n\n      // Calculate delta from start and last position\n      const delta = {\n        x: newX - (lastPositionRef.current?.x || 0),\n        y: newY - (lastPositionRef.current?.y || 0),\n      };\n\n      lastPositionRef.current = newPosition;\n      setDragPosition(newPosition);\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag move event\n      if (onDragMove && draggingItem) {\n        onDragMove({\n          item: draggingItem,\n          coordinates: newPosition,\n          delta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n    },\n    [getDragOverTarget, draggingItem, onDragMove]\n  );\n\n  // Handle drag end\n  const handleDragEnd = useCallback(\n    (e: MouseEvent | TouchEvent) => {\n      if (!draggingRef.current || !dragStartPositionRef.current || !draggingItem || !lastPositionRef.current) return;\n\n      // Calculate final position\n      let finalX: number;\n      let finalY: number;\n\n      if (e instanceof MouseEvent) {\n        finalX = e.clientX;\n        finalY = e.clientY;\n      } else {\n        // TouchEvent\n        if (e.changedTouches.length) {\n          finalX = e.changedTouches[0].clientX;\n          finalY = e.changedTouches[0].clientY;\n        } else {\n          // Fallback to last known position\n          finalX = lastPositionRef.current.x;\n          finalY = lastPositionRef.current.y;\n        }\n      }\n\n      // Calculate total delta from start\n      const totalDelta = {\n        x: finalX - (dragStartPositionRef.current?.x || 0),\n        y: finalY - (dragStartPositionRef.current?.y || 0),\n      };\n\n      // Find drop target\n      const overTarget = getDragOverTarget();\n\n      // Emit drag end event\n      if (onDragEnd) {\n        onDragEnd({\n          item: draggingItem,\n          coordinates: { x: finalX, y: finalY },\n          delta: totalDelta,\n          over: overTarget,\n          nativeEvent: e,\n        });\n      }\n\n      // Clean up\n      endDrag();\n    },\n    [draggingItem, onDragEnd, getDragOverTarget]\n  );\n\n  // Handle keydown (for cancellation with Escape)\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        if (onDragCancel) {\n          onDragCancel();\n        }\n        endDrag();\n      }\n    },\n    [onDragCancel]\n  );\n\n  // End drag and clean up\n  const endDrag = useCallback(() => {\n    // Reset drag state\n    draggingRef.current = false;\n    dragStartPositionRef.current = null;\n    dragTargetRef.current = null;\n    lastPositionRef.current = null;\n\n    setDraggingItem(null);\n    setDragPosition(null);\n\n    // Remove event listeners\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n    document.removeEventListener(\"touchmove\", handleTouchMove);\n    document.removeEventListener(\"mouseup\", handleDragEnd);\n    document.removeEventListener(\"touchend\", handleDragEnd);\n    document.removeEventListener(\"keydown\", handleKeyDown);\n\n    // Re-enable text selection\n    document.body.style.userSelect = \"\";\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Clean up listeners when component unmounts\n  useEffect(() => {\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleDragEnd);\n      document.removeEventListener(\"touchend\", handleDragEnd);\n      document.removeEventListener(\"keydown\", handleKeyDown);\n\n      // Re-enable text selection\n      document.body.style.userSelect = \"\";\n    };\n  }, [handleMouseMove, handleTouchMove, handleDragEnd, handleKeyDown]);\n\n  // Context value\n  const contextValue: DragContextValue = {\n    draggingItem,\n    dragPosition,\n    dropTargets: dropTargetsRef.current,\n    sortableItems: sortableItemsRef.current,\n    registerDropTarget,\n    unregisterDropTarget,\n    registerSortableItem,\n    unregisterSortableItem,\n    startDrag,\n    endDrag,\n    getDragOverTarget,\n  };\n\n  return <DragDropContext.Provider value={contextValue}>{children}</DragDropContext.Provider>;\n};\n","// Draggable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DraggableProps, DraggableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const Draggable: React.FC<DraggableProps> = ({ id, type = \"default\", data, disabled = false, handle = false, preview, children, style, className = \"\", ...props }) => {\n  const { draggingItem, startDrag } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Check if this item is currently being dragged\n  const isDragging = draggingItem?.id === id && draggingItem?.type === type;\n\n  // Handler for starting drag operation\n  const handleDragStart = useCallback(\n    (e: React.MouseEvent | React.TouchEvent) => {\n      if (disabled || !elementRef.current) return;\n\n      // Prevent default behavior to avoid browser's native drag and drop\n      e.preventDefault();\n\n      // Create the drag item\n      const item = {\n        id,\n        type,\n        data,\n      };\n\n      // Start the drag operation\n      startDrag(item, e.nativeEvent);\n    },\n    [id, type, data, disabled, startDrag]\n  );\n\n  // Event handler props for drag handle\n  const dragHandleProps = {\n    onMouseDown: handleDragStart,\n    onTouchStart: handleDragStart,\n  };\n\n  // Props to pass to render function\n  const renderProps: DraggableRenderProps = {\n    isDragging,\n    dragHandleProps,\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-draggable ${className}`}\n      data-blox-draggable=\"\"\n      data-draggable-id={id}\n      data-draggable-type={type}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...style,\n        // Apply some styles when dragging\n        opacity: isDragging ? 0.5 : 1,\n        // Apply cursor style\n        cursor: disabled ? \"not-allowed\" : handle ? \"grab\" : \"move\",\n        // Prevent text selection during drag (for better UX)\n        userSelect: \"none\",\n        // Make element positioned so we can position the preview\n        position: \"relative\",\n        // Avoid layout shifts by setting a height when dragging\n        ...(isDragging && { height: elementRef.current?.offsetHeight }),\n      }}\n      {...(!handle && !disabled ? dragHandleProps : {})}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n\n// Handle component for partial draggable areas\nexport const DragHandle: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className = \"\", ...props }) => {\n  const renderProps = React.useContext(DraggableRenderPropsContext);\n\n  if (!renderProps) {\n    console.warn(\"DragHandle must be used within a Draggable component\");\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      className={`blox-drag-handle ${className}`}\n      data-blox-drag-handle=\"\"\n      style={{ cursor: \"grab\" }}\n      {...renderProps.dragHandleProps}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Create a context to pass render props down to DragHandle\nconst DraggableRenderPropsContext = React.createContext<DraggableRenderProps | null>(null);\n\n// Alternative implementation of Draggable that uses context to pass props to DragHandle\nexport const DraggableWithContext: React.FC<DraggableProps> = (props) => {\n  const BaseComponent = Draggable;\n  const { children, ...rest } = props;\n\n  return <BaseComponent {...rest}>{(renderProps) => <DraggableRenderPropsContext.Provider value={renderProps}>{typeof children === \"function\" ? children(renderProps) : children}</DraggableRenderPropsContext.Provider>}</BaseComponent>;\n};\n","// Droppable.tsx\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { DroppableProps, DroppableRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { STYLES } from \"@/styles/STYLES\";\n\nexport const Droppable: React.FC<DroppableProps> = ({\n  id,\n  type = \"default\",\n  data,\n  disabled = false,\n  accept,\n  children,\n  style,\n  className = \"\",\n  onDrop,\n  // isActive, // Remove from props destructuring\n  ...props\n}) => {\n  const { draggingItem, dragPosition, registerDropTarget, unregisterDropTarget, getDragOverTarget } = useDragDrop();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  // Determine if the current drag item can be dropped here\n  const canDrop = useCallback(() => {\n    if (!draggingItem || disabled) return false;\n\n    if (accept === undefined) {\n      // If no accept prop, accept everything\n      return true;\n    }\n\n    if (typeof accept === \"function\") {\n      // If accept is a function, use it\n      return accept(draggingItem);\n    }\n\n    // Handle string or array of strings\n    const acceptTypes = Array.isArray(accept) ? accept : [accept];\n    return acceptTypes.includes(draggingItem.type);\n  }, [draggingItem, disabled, accept]);\n\n  // Determine if the droppable is currently being hovered over\n  const isOver = useCallback(() => {\n    if (!draggingItem || !dragPosition || !canDrop()) return false;\n\n    const overTarget = getDragOverTarget();\n    return overTarget?.id === id;\n  }, [draggingItem, dragPosition, id, canDrop, getDragOverTarget]);\n\n  // Handle drop event\n  const handleDrop = useCallback(() => {\n    if (onDrop && isOver() && canDrop()) {\n      onDrop();\n    }\n  }, [onDrop, isOver, canDrop]);\n\n  // Register this droppable with the context\n  useEffect(() => {\n    if (!elementRef.current) return;\n\n    const updateDropTarget = () => {\n      if (elementRef.current) {\n        const rect = elementRef.current.getBoundingClientRect();\n        registerDropTarget({\n          id,\n          type,\n          data,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateDropTarget();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateDropTarget);\n    window.addEventListener(\"scroll\", updateDropTarget);\n\n    return () => {\n      unregisterDropTarget(id);\n      window.removeEventListener(\"resize\", updateDropTarget);\n      window.removeEventListener(\"scroll\", updateDropTarget);\n    };\n  }, [id, type, data, registerDropTarget, unregisterDropTarget]);\n\n  // Listen for drop events\n  useEffect(() => {\n    const isCurrentlyOver = isOver();\n    const canCurrentlyDrop = canDrop();\n\n    if (isCurrentlyOver && canCurrentlyDrop && !draggingItem) {\n      handleDrop();\n    }\n  }, [draggingItem, isOver, canDrop, handleDrop]);\n\n  // Props to pass to render function\n  const renderProps: DroppableRenderProps = {\n    isOver: isOver(),\n    canDrop: canDrop(),\n  };\n\n  // Render the component\n  return (\n    <div\n      ref={elementRef}\n      className={`blox-droppable ${className}`}\n      data-blox-droppable=\"\"\n      data-droppable-id={id}\n      data-droppable-type={type}\n      data-over={isOver() ? \"true\" : \"false\"}\n      data-can-drop={canDrop() ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      // Add data attribute instead of prop\n      data-is-active={props[\"data-is-active\"] || \"false\"}\n      style={{\n        ...style,\n        // Add visual feedback when dragging over\n        ...(isOver() &&\n          canDrop() && {\n            outline: `var(--blox-dragdrop-droppable-oultine, ${STYLES.DragDrop.droppable.outline})`,\n            backgroundColor: `var(--blox-dragdrop-droppable-bg-color, ${STYLES.DragDrop.droppable.bgColor})`,\n          }),\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children(renderProps) : children}\n    </div>\n  );\n};\n","// Sortable.tsx\nimport React, { useRef, useState, useEffect, useMemo } from \"react\";\nimport { SortableProps, SortableItemProps, SortableItemRenderProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\nimport { DraggableWithContext } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\nimport { STYLES } from \"@/styles/STYLES\";\n\n// Sortable List Component\nexport const Sortable: React.FC<SortableProps> = ({ items, keyExtractor, onReorder, direction = \"vertical\", children, style, className = \"\", ...props }) => {\n  const { draggingItem } = useDragDrop();\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\n\n  // Determine if an item is currently being dragged\n  const isDragging = draggedIndex !== null;\n\n  // Find the index of the dragged item\n  useEffect(() => {\n    if (!draggingItem) {\n      setDraggedIndex(null);\n      return;\n    }\n\n    const index = items.findIndex((item) => keyExtractor(item) === draggingItem.id);\n    if (index !== -1) {\n      setDraggedIndex(index);\n    }\n  }, [draggingItem, items, keyExtractor]);\n\n  // Handle reordering when an item is dropped\n  const handleDrop = (itemId: string, targetIndex: number) => {\n    if (draggedIndex === null) return;\n\n    // Skip if dropping at the same position\n    if (draggedIndex === targetIndex) return;\n\n    // Create a copy of the items array\n    const newItems = [...items];\n\n    // Remove the dragged item\n    const [draggedItem] = newItems.splice(draggedIndex, 1);\n\n    // Insert the dragged item at the target position\n    newItems.splice(targetIndex, 0, draggedItem);\n\n    // Call the onReorder callback with the new order\n    onReorder(newItems);\n  };\n\n  // Container style based on direction\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: direction === \"vertical\" ? \"column\" : \"row\",\n    position: \"relative\",\n    ...style,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={`blox-sortable ${className}`}\n      data-blox-sortable=\"\"\n      style={containerStyle}\n      {...props}>\n      {items.map((item, index) => {\n        const itemId = keyExtractor(item);\n        const isBeingDragged = draggedIndex === index;\n\n        // Render each sortable item\n        return (\n          <SortableItem\n            key={itemId}\n            item={item}\n            itemId={itemId}\n            index={index}\n            isDragging={isBeingDragged}\n            onDrop={handleDrop}\n            direction={direction}>\n            {(renderProps) => children(item, renderProps)}\n          </SortableItem>\n        );\n      })}\n    </div>\n  );\n};\n\n// Individual Sortable Item\nconst SortableItem: React.FC<SortableItemProps> = ({ item, itemId, index, isDragging, onDrop, direction, children }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { registerSortableItem, unregisterSortableItem } = useDragDrop();\n\n  // Register this item with the drag drop context\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const updateSortableItem = () => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect();\n        registerSortableItem({\n          id: itemId,\n          index,\n          rect,\n        });\n      }\n    };\n\n    // Initial registration\n    updateSortableItem();\n\n    // Update on resize or scroll\n    window.addEventListener(\"resize\", updateSortableItem);\n    window.addEventListener(\"scroll\", updateSortableItem);\n\n    return () => {\n      unregisterSortableItem(itemId);\n      window.removeEventListener(\"resize\", updateSortableItem);\n      window.removeEventListener(\"scroll\", updateSortableItem);\n    };\n  }, [itemId, index, registerSortableItem, unregisterSortableItem]);\n\n  // Handle when another item is dropped on this item\n  const handleDropOnItem = () => {\n    onDrop(itemId, index);\n  };\n\n  // Prepare render props for the children\n  const renderProps: SortableItemRenderProps = {\n    isDragging,\n    dragHandleProps: {\n      draggableId: itemId,\n      role: \"button\",\n      tabIndex: 0,\n      \"aria-pressed\": isDragging,\n      \"aria-label\": `Drag to reorder item ${index + 1}`,\n    },\n  };\n\n  return (\n    <Droppable\n      id={`droppable-${itemId}`}\n      onDrop={handleDropOnItem}\n      // Remove isActive prop - it's causing a DOM warning\n      className=\"blox-sortable-droppable\"\n      style={{\n        margin: direction === \"vertical\" ? \"2px 0\" : \"0 2px\",\n      }}\n      data-is-active=\"true\" // Use data attribute instead\n    >\n      <DraggableWithContext\n        id={itemId}\n        type=\"sortable-item\"\n        data={item}\n        className=\"blox-sortable-item\"\n        style={{\n          opacity: isDragging ? `var(--blox-dragdrop-sortable-opacity, ${STYLES.DragDrop.sortable.opacity})` : 1,\n          cursor: \"grab\",\n          transition: \"all 0.2s ease\",\n          backgroundColor: isDragging ? `var(--blox-dragdrop-sortable-bg-color, ${STYLES.DragDrop.sortable.backgroundColor})` : \"transparent\",\n          borderRadius: `var(--blox-dragdrop-sortable-border-radius, ${STYLES.DragDrop.sortable.borderRadius})`,\n        }}>\n        {children(renderProps)}\n      </DraggableWithContext>\n    </Droppable>\n  );\n};\n\nexport default Sortable;\n","// index.ts - Barrel file for DragDrop components\nimport { DragDropProvider, useDragDrop } from \"./DragDropContext\";\nimport { Draggable, DraggableWithContext, DragHandle } from \"./Draggable\";\nimport { Droppable } from \"./Droppable\";\nimport { DragOverlay } from \"./DragOverlay\";\nimport { Sortable } from \"./Sortable\";\n\n// Re-export all components and hooks\nexport {\n  // Context and Provider\n  DragDropProvider,\n  useDragDrop,\n  // Core Components\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n};\n\n// Re-export types\nexport type {\n  // Coordinates and Items\n  Coordinates,\n  DragItem,\n\n  // Events\n  DragStartEvent,\n  DragMoveEvent,\n  DragEndEvent,\n\n  // Target Information\n  DropTargetInfo,\n  SortableItemInfo,\n\n  // Context Value\n  DragContextValue,\n\n  // Component Props\n  DragDropProviderProps,\n  DraggableProps,\n  DraggableRenderProps,\n  DragHandleProps,\n  DroppableProps,\n  DroppableRenderProps,\n  DragOverlayProps,\n  SortableProps,\n  SortableItemProps,\n  SortableItemRenderProps,\n} from \"./types\";\n\n// Default export as a namespace\nexport const DragDrop = {\n  Provider: DragDropProvider,\n  Draggable,\n  DraggableWithContext,\n  DragHandle,\n  Droppable,\n  DragOverlay,\n  Sortable,\n  useDragDrop,\n};\n\nexport default DragDrop;\n","// DragOverlay.tsx\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DragOverlayProps } from \"./types\";\nimport { useDragDrop } from \"./DragDropContext\";\n\nexport const DragOverlay: React.FC<DragOverlayProps> = ({ children, style, className = \"\", ...props }) => {\n  const { draggingItem, dragPosition } = useDragDrop();\n\n  // Don't render anything if not currently dragging\n  if (!draggingItem || !dragPosition) {\n    return null;\n  }\n\n  // Calculate position styles\n  const positionStyles = {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    transform: `translate(${dragPosition.x}px, ${dragPosition.y}px)`,\n    pointerEvents: \"none\", // Make overlay non-interactive\n    zIndex: 9999,\n    transformOrigin: \"0 0\",\n  } as React.CSSProperties;\n\n  // Render the overlay as a portal\n  return createPortal(\n    <div\n      className={`blox-drag-overlay ${className}`}\n      data-blox-drag-overlay=\"\"\n      style={{\n        ...positionStyles,\n        ...style,\n      }}\n      {...props}>\n      {typeof children === \"function\" ? children({ item: draggingItem }) : children}\n    </div>,\n    // Append to body to ensure it's above everything\n    document.body\n  );\n};\n","// Switch.tsx\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { SwitchProps } from \"./types\";\nimport { STYLES } from \"@/styles/STYLES\";\n\nconst Switch: React.FC<SwitchProps> = ({ checked, defaultChecked = false, onChange, disabled = false, required = false, id, name, value = \"on\", label, labelPosition = \"right\", className = \"\", thumbClassName = \"\", trackClassName = \"\", labelClassName = \"\", helperText, errorMessage, hasError = false, inputProps = {}, ...props }) => {\n  // Generate a unique ID if one is not provided\n  const uniqueId = useRef(id || `blox-switch-${Math.random().toString(36).substring(2, 9)}`).current;\n\n  // For uncontrolled mode\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\n\n  // Determine if we're in controlled mode\n  const isControlled = checked !== undefined;\n  const isChecked = isControlled ? checked : internalChecked;\n\n  // Handle change event\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) return;\n\n      const newChecked = event.target.checked;\n\n      if (!isControlled) {\n        setInternalChecked(newChecked);\n      }\n\n      if (onChange) {\n        onChange(newChecked);\n      }\n    },\n    [disabled, isControlled, onChange]\n  );\n\n  // Generate description ID if helper text or error message is provided\n  const descriptionId = helperText || errorMessage ? `${uniqueId}-description` : undefined;\n\n  return (\n    <div\n      className={`blox-switch-container ${className}`}\n      data-blox-switch=\"\"\n      data-checked={isChecked ? \"true\" : \"false\"}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-error={hasError ? \"true\" : \"false\"}\n      data-required={required ? \"true\" : \"false\"}\n      data-label-position={labelPosition}>\n      <label\n        htmlFor={uniqueId}\n        className=\"blox-switch-wrapper\"\n        data-blox-switch-wrapper=\"\"\n        style={{\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          cursor: disabled ? \"not-allowed\" : \"pointer\",\n          flexDirection: labelPosition === \"left\" ? \"row-reverse\" : \"row\",\n        }}\n        {...props}>\n        {/* Hidden input for accessibility and form submission */}\n        <input\n          type=\"checkbox\"\n          id={uniqueId}\n          name={name}\n          value={value}\n          checked={isChecked}\n          defaultChecked={!isControlled ? defaultChecked : undefined}\n          onChange={handleChange}\n          disabled={disabled}\n          required={required}\n          className=\"blox-switch-input\"\n          data-blox-switch-input=\"\"\n          aria-checked={isChecked}\n          aria-disabled={disabled}\n          aria-invalid={hasError}\n          aria-describedby={descriptionId}\n          style={{\n            border: \"0\",\n            clip: \"rect(0 0 0 0)\",\n            clipPath: \"inset(50%)\",\n            height: \"1px\",\n            margin: \"-1px\",\n            overflow: \"hidden\",\n            padding: \"0\",\n            position: \"absolute\",\n            whiteSpace: \"nowrap\",\n            width: \"1px\",\n            backgroundColor: `var(--blox-switch-input-bg-color, ${STYLES.Switch.input.bgColor}))`,\n          }}\n          {...inputProps}\n        />\n\n        {/* The visual switch component */}\n        <div\n          className={`blox-switch-track ${trackClassName}`}\n          data-blox-switch-track=\"\"\n          data-state={isChecked ? \"checked\" : \"unchecked\"}\n          data-disabled={disabled ? \"true\" : \"false\"}\n          style={{\n            position: \"relative\",\n            display: \"inline-flex\",\n            flexShrink: 0,\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            WebkitTapHighlightColor: \"transparent\",\n            // These are just base styles to ensure the component is visible\n            // The user should override these with their own styling\n            width: \"36px\",\n            height: \"20px\",\n            borderRadius: \"10px\",\n            backgroundColor: `var(--blox-switch-track-bg-color, ${STYLES.Switch.track.bgColor}))`,\n          }}>\n          <div\n            className={`blox-switch-thumb ${thumbClassName}`}\n            data-blox-switch-thumb=\"\"\n            data-state={isChecked ? \"checked\" : \"unchecked\"}\n            data-disabled={disabled ? \"true\" : \"false\"}\n            style={{\n              position: \"absolute\",\n              top: \"2px\",\n              left: \"2px\",\n              // These transform properties create the sliding effect\n              transform: isChecked ? \"translateX(16px)\" : \"translateX(0)\",\n              transition: \"transform 150ms\",\n              // These are just base styles to ensure the component is visible\n              width: \"16px\",\n              height: \"16px\",\n              borderRadius: \"8px\",\n              backgroundColor: `var(--blox-switch-thumb-bg-color, ${STYLES.Switch.thumb.bgColor}))`,\n            }}\n          />\n        </div>\n\n        {/* Label */}\n        {label && (\n          <span\n            className={`blox-switch-label ${labelClassName}`}\n            data-blox-switch-label=\"\"\n            style={{\n              marginLeft: labelPosition === \"right\" ? `var(--blox-switch-label-spacing, ${STYLES.Switch.label.spacing})` : `0`,\n              marginRight: labelPosition === `left` ? `var(--blox-switch-label-spacing, ${STYLES.Switch.label.spacing})` : `0`,\n            }}>\n            {label}\n          </span>\n        )}\n      </label>\n\n      {/* Helper text or error message */}\n      {(helperText || errorMessage) && (\n        <div\n          id={descriptionId}\n          className={`blox-switch-description ${hasError ? \"blox-switch-error\" : \"\"}`}\n          data-blox-switch-description=\"\"\n          data-error={hasError ? \"true\" : \"false\"}\n          style={{\n            marginTop: \"4px\",\n            fontSize: \"0.875em\",\n          }}>\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Switch;\n","// ContextMenu.tsx\nimport React, { useState, useRef, useEffect, createContext, useContext, useCallback, useLayoutEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ContextMenuProps, ContextMenuTriggerProps, ContextMenuContentProps, ContextMenuItemProps, ContextMenuGroupProps, ContextMenuSeparatorProps, ContextMenuContextValue, ContextMenuComposition } from \"./types\";\n\n// Create context for context menu state\nconst ContextMenuContext = createContext<ContextMenuContextValue>({\n  isOpen: false,\n  open: () => {},\n  close: () => {},\n  position: { x: 0, y: 0 },\n  disabled: false,\n});\n\n// Hook to use context menu context\nconst useContextMenu = () => {\n  const context = useContext(ContextMenuContext);\n  if (!context) {\n    throw new Error(\"useContextMenu must be used within a ContextMenu component\");\n  }\n  return context;\n};\n\n// ContextMenu Trigger Component\nconst ContextMenuTrigger: React.FC<ContextMenuTriggerProps> = ({ children, disabled = false, className = \"\", ...props }) => {\n  const { open, disabled: contextDisabled } = useContextMenu();\n  const isDisabled = disabled || contextDisabled;\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    if (isDisabled) return;\n\n    // Prevent the default context menu\n    event.preventDefault();\n\n    // Open our custom context menu\n    open(event);\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-trigger ${className}`}\n      data-blox-context-menu-trigger=\"\"\n      data-disabled={isDisabled ? \"true\" : \"false\"}\n      onContextMenu={handleContextMenu}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Content Component\nconst ContextMenuContent: React.FC<ContextMenuContentProps> = ({ children, closeOnOutsideClick = true, closeOnEscape = true, offset = [0, 0], width, maxHeight, className = \"\", ...props }) => {\n  const { isOpen, close, position } = useContextMenu();\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // Create a ref to store calculated styles to avoid re-renders\n  const styleRef = useRef({\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: 1000,\n    width: width,\n    maxHeight: maxHeight,\n    overflow: maxHeight ? \"auto\" : undefined,\n  });\n\n  // Calculate position only once when menu opens or position changes\n  useLayoutEffect(() => {\n    if (!isOpen) return;\n\n    // Initial position based on cursor + offset\n    let x = position.x + offset[0];\n    let y = position.y + offset[1];\n\n    // After one frame, adjust if needed\n    requestAnimationFrame(() => {\n      if (!menuRef.current) return;\n\n      const menuRect = menuRef.current.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // Check if menu would go off the right edge\n      if (x + menuRect.width > viewportWidth) {\n        x = viewportWidth - menuRect.width - 5; // 5px buffer\n      }\n\n      // Check if menu would go off the bottom edge\n      if (y + menuRect.height > viewportHeight) {\n        y = viewportHeight - menuRect.height - 5; // 5px buffer\n      }\n\n      // Ensure menu doesn't go off the left or top edges\n      x = Math.max(5, x);\n      y = Math.max(5, y);\n\n      // Apply directly to the DOM element to avoid re-renders\n      if (menuRef.current) {\n        menuRef.current.style.left = `${x}px`;\n        menuRef.current.style.top = `${y}px`;\n      }\n    });\n\n    // Store initial position in style ref\n    styleRef.current = {\n      ...styleRef.current,\n      left: `${position.x + offset[0]}px`,\n      top: `${position.y + offset[1]}px`,\n    };\n  }, [isOpen, position.x, position.y, offset[0], offset[1]]);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    if (!isOpen || !closeOnOutsideClick) return;\n\n    const handleOutsideClick = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        close();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, [isOpen, close, closeOnOutsideClick]);\n\n  // Close menu when pressing Escape\n  useEffect(() => {\n    if (!isOpen || !closeOnEscape) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        close();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isOpen, close, closeOnEscape]);\n\n  if (!isOpen) return null;\n\n  // Render the menu with Portal\n  return createPortal(\n    <div\n      ref={menuRef}\n      className={`blox-context-menu-content ${className}`}\n      data-blox-context-menu-content=\"\"\n      style={{\n        position: \"fixed\",\n        ...styleRef.current,\n      }}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      {...props}>\n      {children}\n    </div>,\n    document.body\n  );\n};\n\n// ContextMenu Item Component\nconst ContextMenuItem: React.FC<ContextMenuItemProps> = ({ children, disabled = false, onSelect, closeOnSelect = true, icon, shortcut, className = \"\", ...props }) => {\n  const { close } = useContextMenu();\n\n  const handleClick = () => {\n    if (disabled) return;\n\n    if (onSelect) {\n      onSelect();\n    }\n\n    if (closeOnSelect) {\n      close();\n    }\n  };\n\n  return (\n    <div\n      className={`blox-context-menu-item ${className}`}\n      data-blox-context-menu-item=\"\"\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onClick={handleClick}\n      role=\"menuitem\"\n      tabIndex={disabled ? -1 : 0}\n      aria-disabled={disabled}\n      {...props}>\n      {icon && (\n        <span\n          className=\"blox-context-menu-item-icon\"\n          data-blox-context-menu-item-icon=\"\">\n          {icon}\n        </span>\n      )}\n\n      <span\n        className=\"blox-context-menu-item-label\"\n        data-blox-context-menu-item-label=\"\">\n        {children}\n      </span>\n\n      {shortcut && (\n        <span\n          className=\"blox-context-menu-item-shortcut\"\n          data-blox-context-menu-item-shortcut=\"\">\n          {shortcut}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// ContextMenu Group Component\nconst ContextMenuGroup: React.FC<ContextMenuGroupProps> = ({ children, label, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-group ${className}`}\n      data-blox-context-menu-group=\"\"\n      role=\"group\"\n      aria-label={label}\n      {...props}>\n      {label && (\n        <div\n          className=\"blox-context-menu-group-label\"\n          data-blox-context-menu-group-label=\"\">\n          {label}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\n// ContextMenu Separator Component\nconst ContextMenuSeparator: React.FC<ContextMenuSeparatorProps> = ({ className = \"\", ...props }) => {\n  return (\n    <div\n      className={`blox-context-menu-separator ${className}`}\n      data-blox-context-menu-separator=\"\"\n      role=\"separator\"\n      {...props}\n    />\n  );\n};\n\n// Main ContextMenu Component\nconst ContextMenu: React.FC<ContextMenuProps> & ContextMenuComposition = ({ children, onOpen, onClose, disabled = false, enableKeyboard = true, ...props }) => {\n  // State for tracking open state and position\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  // Open the context menu\n  const open = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) return;\n\n      if (\"clientX\" in event) {\n        setPosition({ x: event.clientX, y: event.clientY });\n      }\n\n      setIsOpen(true);\n\n      if (onOpen) {\n        onOpen(event);\n      }\n    },\n    [disabled, onOpen]\n  );\n\n  // Close the context menu\n  const close = useCallback(() => {\n    setIsOpen(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    if (!enableKeyboard) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Implement keyboard shortcuts to open the context menu if desired\n      // For example, Shift+F10 or the context menu key\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [enableKeyboard]);\n\n  // Context value\n  const contextValue = {\n    isOpen,\n    open,\n    close,\n    position,\n    disabled,\n  };\n\n  return (\n    <ContextMenuContext.Provider value={contextValue}>\n      <div\n        className=\"blox-context-menu\"\n        data-blox-context-menu=\"\"\n        data-state={isOpen ? \"open\" : \"closed\"}\n        {...props}>\n        {children}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n};\n\n// Attach sub-components\nContextMenu.Trigger = ContextMenuTrigger;\nContextMenu.Content = ContextMenuContent;\nContextMenu.Item = ContextMenuItem;\nContextMenu.Group = ContextMenuGroup;\nContextMenu.Separator = ContextMenuSeparator;\n\nexport default ContextMenu;\n","// Slider.tsx\nimport React, { useState, useRef, useEffect, useCallback, createContext, useContext, useMemo } from \"react\";\nimport { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps, SliderMarkProps, SliderContextValue, ThumbPosition, SliderRange, SliderComposition } from \"./types\";\nimport { STYLES } from \"../../styles/STYLES\";\n\n// Create context for the slider\nconst SliderContext = createContext<SliderContextValue | null>(null);\n\n// Hook to use slider context\nconst useSlider = () => {\n  const context = useContext(SliderContext);\n  if (!context) {\n    throw new Error(\"Slider components must be used within a Slider\");\n  }\n  return context;\n};\n\n/**\n * @description Slider component for selecting a range of values. *Experimental component*\n */\n// Slider component\nconst Slider: React.FC<SliderProps> & SliderComposition = ({ value, defaultValue = 0, onChange, onDragStart, onDragEnd, min = 0, max = 100, step = 1, disabled = false, orientation = \"horizontal\", className = \"\", inverted = false, showMarks = false, marks, label, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, children, ...props }) => {\n  // Reference to the root element\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  // Parse and normalize the values\n  const parseValues = (input: number | number[]): number[] => {\n    if (typeof input === \"number\") {\n      return [input];\n    }\n    return [...input].sort((a, b) => a - b);\n  };\n\n  // Internal state for controlled/uncontrolled usage\n  const [internalValues, setInternalValues] = useState<number[]>(() => {\n    return parseValues(defaultValue);\n  });\n\n  // Determine if we're controlled or uncontrolled\n  const isControlled = value !== undefined;\n  const currentValues = isControlled ? parseValues(value) : internalValues;\n\n  // Track whether any thumb is being dragged\n  const [isDragging, setIsDragging] = useState(false);\n  const activeThumbIndex = useRef<number | null>(null);\n\n  // Calculate thumb positions\n  const thumbPositions = useMemo<ThumbPosition[]>(() => {\n    return currentValues.map((value, index) => {\n      // Clamp value to min/max\n      const clampedValue = Math.min(Math.max(value, min), max);\n\n      // Calculate percentage\n      const percent = ((clampedValue - min) / (max - min)) * 100;\n\n      return {\n        value: clampedValue,\n        index,\n        percent: inverted ? 100 - percent : percent,\n      };\n    });\n  }, [currentValues, min, max, inverted]);\n\n  // Calculate ranges between thumbs\n  const ranges = useMemo<SliderRange[]>(() => {\n    const result: SliderRange[] = [];\n\n    // For single thumb, range is from min to value\n    if (currentValues.length === 1) {\n      result.push({\n        start: min,\n        end: currentValues[0],\n      });\n    } else {\n      // For multiple thumbs, create ranges between each pair of values\n      // First range from min to first value\n      result.push({\n        start: min,\n        end: currentValues[0],\n      });\n\n      // Ranges between thumbs\n      for (let i = 0; i < currentValues.length - 1; i++) {\n        result.push({\n          start: currentValues[i],\n          end: currentValues[i + 1],\n        });\n      }\n\n      // Last range from last value to max\n      result.push({\n        start: currentValues[currentValues.length - 1],\n        end: max,\n      });\n    }\n\n    return result;\n  }, [currentValues, min, max]);\n\n  // Convert percentage (0-100) to a value\n  const percentToValue = useCallback(\n    (percent: number): number => {\n      // Adjust for inverted slider\n      const adjustedPercent = inverted ? 100 - percent : percent;\n\n      // Convert to range value\n      let value = (adjustedPercent / 100) * (max - min) + min;\n\n      // Apply step\n      if (step > 0) {\n        value = Math.round(value / step) * step;\n      }\n\n      // Ensure value is within bounds\n      return Math.min(Math.max(value, min), max);\n    },\n    [min, max, step, inverted]\n  );\n\n  // Convert value to percentage (0-100)\n  const valueToPercent = useCallback(\n    (value: number): number => {\n      // Ensure value is within bounds\n      const clampedValue = Math.min(Math.max(value, min), max);\n\n      // Convert to percentage\n      const percent = ((clampedValue - min) / (max - min)) * 100;\n\n      // Adjust for inverted slider\n      return inverted ? 100 - percent : percent;\n    },\n    [min, max, inverted]\n  );\n\n  // Get the closest thumb index to a given position\n  const getClosestThumb = useCallback(\n    (position: number): number => {\n      if (currentValues.length === 1) return 0;\n\n      // Convert position to value\n      const positionValue = percentToValue(position);\n\n      // Find the closest thumb\n      let closestDistance = Math.abs(currentValues[0] - positionValue);\n      let closestIndex = 0;\n\n      for (let i = 1; i < currentValues.length; i++) {\n        const distance = Math.abs(currentValues[i] - positionValue);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestIndex = i;\n        }\n      }\n\n      return closestIndex;\n    },\n    [currentValues, percentToValue]\n  );\n\n  // Update a specific thumb value\n  const updateThumb = useCallback(\n    (index: number, newValue: number) => {\n      // Clamp value to min/max\n      const clampedValue = Math.min(Math.max(newValue, min), max);\n\n      // Create new values array\n      let newValues = [...currentValues];\n      newValues[index] = clampedValue;\n\n      // Keep thumbs in order (prevent crossover)\n      if (index > 0 && newValues[index] < newValues[index - 1]) {\n        newValues[index] = newValues[index - 1];\n      }\n      if (index < newValues.length - 1 && newValues[index] > newValues[index + 1]) {\n        newValues[index] = newValues[index + 1];\n      }\n\n      // Update state for uncontrolled component\n      if (!isControlled) {\n        setInternalValues(newValues);\n      }\n\n      // Call onChange handler\n      if (onChange) {\n        onChange(newValues.length === 1 ? newValues[0] : newValues);\n      }\n    },\n    [currentValues, min, max, isControlled, onChange]\n  );\n\n  // Handle pointer down event on track\n  const handleTrackPointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    // Get position relative to track\n    const trackRect = event.currentTarget.getBoundingClientRect();\n    const position = orientation === \"horizontal\" ? ((event.clientX - trackRect.left) / trackRect.width) * 100 : ((event.clientY - trackRect.top) / trackRect.height) * 100;\n\n    // Find closest thumb and activate it\n    const thumbIndex = getClosestThumb(position);\n    activeThumbIndex.current = thumbIndex;\n\n    // Move the thumb to this position\n    updateThumb(thumbIndex, percentToValue(position));\n\n    // Start dragging\n    setIsDragging(true);\n\n    // Call onDragStart handler\n    if (onDragStart) {\n      onDragStart(currentValues.length === 1 ? currentValues[0] : currentValues);\n    }\n\n    // Capture pointer events\n    event.currentTarget.setPointerCapture(event.pointerId);\n  };\n\n  // Handle pointer move event\n  const handleTrackPointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled || !isDragging || activeThumbIndex.current === null) return;\n\n    // Get position relative to track\n    const trackRect = event.currentTarget.getBoundingClientRect();\n    const position = orientation === \"horizontal\" ? ((event.clientX - trackRect.left) / trackRect.width) * 100 : ((event.clientY - trackRect.top) / trackRect.height) * 100;\n\n    // Update thumb position\n    updateThumb(activeThumbIndex.current, percentToValue(position));\n  };\n\n  // Handle pointer up event\n  const handleTrackPointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled || !isDragging) return;\n\n    // End dragging\n    setIsDragging(false);\n    activeThumbIndex.current = null;\n\n    // Call onDragEnd handler\n    if (onDragEnd) {\n      onDragEnd(currentValues.length === 1 ? currentValues[0] : currentValues);\n    }\n\n    // Release pointer capture\n    event.currentTarget.releasePointerCapture(event.pointerId);\n  };\n\n  // Handle keyboard navigation\n  const handleRootKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    // Find focused thumb\n    const focusedThumbIndex = currentValues.findIndex((_, i) => document.activeElement === rootRef.current?.querySelector(`[data-thumb-index=\"${i}\"]`));\n\n    if (focusedThumbIndex === -1) return;\n\n    // Determine the increment amount\n    const increment = event.shiftKey ? step * 10 : step;\n    let newValue = currentValues[focusedThumbIndex];\n\n    switch (event.key) {\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? -increment : increment);\n        event.preventDefault();\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? increment : -increment);\n        event.preventDefault();\n        break;\n      case \"Home\":\n        newValue = min;\n        event.preventDefault();\n        break;\n      case \"End\":\n        newValue = max;\n        event.preventDefault();\n        break;\n      case \"PageUp\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? -increment * 10 : increment * 10);\n        event.preventDefault();\n        break;\n      case \"PageDown\":\n        newValue = currentValues[focusedThumbIndex] + (inverted ? increment * 10 : -increment * 10);\n        event.preventDefault();\n        break;\n      default:\n        return;\n    }\n\n    // Update thumb position\n    updateThumb(focusedThumbIndex, newValue);\n  };\n\n  // Create the context value\n  const contextValue: SliderContextValue = {\n    value: currentValues.length === 1 ? currentValues[0] : currentValues,\n    min,\n    max,\n    step,\n    disabled,\n    orientation,\n    inverted,\n    isDragging,\n    thumbPositions,\n    ranges,\n    updateThumb,\n    setDragging: setIsDragging,\n    getClosestThumb,\n    valueToPercent,\n    percentToValue,\n  };\n\n  // Determine the track direction CSS variables\n  const directionProps: React.CSSProperties = {\n    position: \"relative\",\n    \"--blox-slider-direction\": orientation === \"horizontal\" ? \"row\" : \"column\",\n    \"--blox-slider-length\": \"100%\",\n    \"--blox-slider-track-size\": orientation === \"horizontal\" ? \"100%\" : \"100%\",\n    \"--blox-slider-track-thickness\": orientation === \"horizontal\" ? \"var(--blox-slider-thickness, 4px)\" : \"var(--blox-slider-thickness, 4px)\",\n  };\n\n  // Custom render function using render props\n  const renderContent = () => {\n    if (typeof children === \"function\") {\n      return <div style={{ position: \"relative\" }}>{children(contextValue)}</div>;\n    }\n\n    return (\n      children || (\n        <div style={{ position: \"relative\" }}>\n          <SliderTrack\n            onPointerDown={handleTrackPointerDown}\n            onPointerMove={handleTrackPointerMove}\n            onPointerUp={handleTrackPointerUp}>\n            {currentValues.length > 1 &&\n              currentValues.map((_, index) => (\n                <SliderRangeComponent\n                  key={`range-${index}`}\n                  index={index}\n                />\n              ))}\n            {currentValues.length === 1 && <SliderRangeComponent />}\n          </SliderTrack>\n\n          {currentValues.map((_, index) => (\n            <SliderThumb\n              key={`thumb-${index}`}\n              index={index}\n            />\n          ))}\n\n          {showMarks && (\n            <>\n              {/* Default marks at min and max */}\n              {!marks && (\n                <>\n                  <SliderMark value={min} />\n                  <SliderMark value={max} />\n                </>\n              )}\n\n              {/* Custom marks if provided */}\n              {marks &&\n                Object.entries(marks).map(([value, label]) => (\n                  <SliderMark\n                    key={`mark-${value}`}\n                    value={Number(value)}>\n                    {label}\n                  </SliderMark>\n                ))}\n            </>\n          )}\n        </div>\n      )\n    );\n  };\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <div\n        ref={rootRef}\n        role=\"group\"\n        aria-disabled={disabled}\n        aria-label={label || ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        tabIndex={-1}\n        onKeyDown={handleRootKeyDown}\n        className={`blox-slider ${className}`}\n        data-blox-slider=\"\"\n        data-orientation={orientation}\n        data-disabled={disabled ? \"true\" : \"false\"}\n        data-inverted={inverted ? \"true\" : \"false\"}\n        style={{\n          width: \"100%\", // Add this\n          height: orientation === \"vertical\" ? \"100%\" : \"auto\", // Add this\n          ...directionProps,\n          ...props.style,\n        }}\n        {...props}>\n        {renderContent()}\n      </div>\n    </SliderContext.Provider>\n  );\n};\n\n// Slider Track component\nconst SliderTrack: React.FC<SliderTrackProps> = ({ children, className = \"\", onPointerDown, onPointerMove, onPointerUp, ...props }) => {\n  const { orientation, disabled } = useSlider();\n\n  // Handle pointer events for the track\n  const handlePointerDown = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerDown) {\n      onPointerDown(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointerdown\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // Handle pointer move\n  const handlePointerMove = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerMove) {\n      onPointerMove(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointermove\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // Handle pointer up\n  const handlePointerUp = (event: React.PointerEvent<HTMLDivElement>) => {\n    if (disabled) return;\n\n    if (onPointerUp) {\n      onPointerUp(event);\n    } else {\n      // Forward the event to the parent handler\n      const parent = event.currentTarget.parentElement;\n      if (parent) {\n        const customEvent = new PointerEvent(\"pointerup\", {\n          bubbles: true,\n          cancelable: true,\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pointerId: event.pointerId,\n        });\n\n        parent.dispatchEvent(customEvent);\n\n        // Prevent default browser behavior\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  return (\n    <div\n      className={`blox-slider-track ${className}`}\n      data-blox-slider-track=\"\"\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      onPointerUp={handlePointerUp}\n      style={{\n        position: \"relative\",\n        width: orientation === \"horizontal\" ? \"100%\" : `var(--blox-slider-thickness, ${STYLES.Slider.thickness})`,\n        height: orientation === \"horizontal\" ? `var(--blox-slider-thickness, ${STYLES.Slider.thickness})` : `100%`,\n        borderRadius: `var(--blox-slider-border-radius, ${STYLES.Slider.borderRadius})`,\n        backgroundColor: `var(--blox-slider-track-color, ${STYLES.Slider.track.color})`,\n        ...props.style,\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Range component - renamed to avoid conflict\nconst SliderRangeComponent: React.FC<SliderRangeProps> = ({ index = 0, children, className = \"\", ...props }) => {\n  const { orientation, disabled, inverted, ranges, min, max, valueToPercent } = useSlider();\n\n  // Get the range information\n  const range = ranges[index] || ranges[0];\n\n  // Calculate start and end percentages\n  const startPercent = valueToPercent(range.start);\n  const endPercent = valueToPercent(range.end);\n\n  // Determine range style based on orientation\n  const rangeStyle: React.CSSProperties = {\n    // position: \"absolute\", // Keep this\n    borderRadius: `var(--blox-slider-border-radius, ${STYLES.Slider.borderRadius})`,\n    backgroundColor: `var(--blox-slider-range-color, ${STYLES.Slider.range.color})`,\n  };\n\n  if (orientation === \"horizontal\") {\n    const leftPercent = Math.min(startPercent, endPercent);\n    const widthPercent = Math.abs(endPercent - startPercent);\n\n    rangeStyle.left = `${leftPercent}%`;\n    rangeStyle.width = `${widthPercent}%`;\n    rangeStyle.height = \"100%\";\n  } else {\n    const bottomPercent = Math.min(startPercent, endPercent);\n    const heightPercent = Math.abs(endPercent - startPercent);\n\n    rangeStyle.bottom = `${bottomPercent}%`;\n    rangeStyle.height = `${heightPercent}%`;\n    rangeStyle.width = \"100%\";\n  }\n\n  return (\n    <div\n      className={`blox-slider-range ${className}`}\n      data-blox-slider-range=\"\"\n      data-range-index={index}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...rangeStyle,\n        ...props.style,\n        position: \"absolute\",\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Thumb component\nconst SliderThumb: React.FC<SliderThumbProps> = ({ index = 0, children, className = \"\", ...props }) => {\n  const { orientation, disabled, thumbPositions, isDragging, value, min, max, updateThumb, setDragging } = useSlider();\n\n  // Get this thumb's position\n  const thumbPosition = thumbPositions[index] || thumbPositions[0];\n\n  // Handler for thumb key down\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    // Let the parent handle keyboard navigation\n    // The event will bubble up to the root handler\n  };\n\n  // Calculate accessibility values\n  const valueNow = Array.isArray(value) ? value[index] : value;\n  const valueText = `${valueNow}`;\n\n  // Determine thumb style based on orientation\n  const thumbStyle: React.CSSProperties = {\n    position: `absolute`,\n    transform: `translate(-50%, -50%)`,\n    width: `var(--blox-slider-thumb-size, ${STYLES.Slider.thumb.size})`,\n    height: `var(--blox-slider-thumb-size, ${STYLES.Slider.thumb.size})`,\n    borderRadius: `var(--blox-slider-thumb-radius, ${STYLES.Slider.thumb.radius})`,\n    backgroundColor: `var(--blox-slider-thumb-color, ${STYLES.Slider.thumb.color})`,\n    boxShadow: `var(--blox-slider-thumb-shadow, ${STYLES.Slider.thumb.shadow})`,\n    cursor: disabled ? `not-allowed` : `grab`,\n    // Add grab cursor when dragging\n    ...(isDragging && { cursor: disabled ? \"not-allowed\" : \"grabbing\" }),\n  };\n\n  if (orientation === \"horizontal\") {\n    thumbStyle.left = `${thumbPosition.percent}%`;\n    thumbStyle.top = \"50%\";\n  } else {\n    thumbStyle.bottom = `${thumbPosition.percent}%`;\n    thumbStyle.left = \"50%\";\n  }\n\n  return (\n    <div\n      role=\"slider\"\n      tabIndex={disabled ? -1 : 0}\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={valueNow}\n      aria-valuetext={valueText}\n      aria-disabled={disabled}\n      aria-orientation={orientation}\n      className={`blox-slider-thumb ${className}`}\n      data-blox-slider-thumb=\"\"\n      data-thumb-index={index}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      data-dragging={isDragging ? \"true\" : \"false\"}\n      onKeyDown={handleKeyDown}\n      style={{\n        ...thumbStyle,\n        ...props.style,\n      }}\n      {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Slider Mark component\nconst SliderMark: React.FC<SliderMarkProps> = ({ value, children, className = \"\", ...props }) => {\n  const { orientation, disabled, min, max, valueToPercent } = useSlider();\n\n  // Calculate position percentage\n  const positionPercent = valueToPercent(value);\n\n  // Determine mark style based on orientation\n  const markStyle: React.CSSProperties = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  if (orientation === \"horizontal\") {\n    markStyle.left = `${positionPercent}%`;\n    markStyle.top = `100%`;\n    markStyle.transform = `translateX(-50%)`;\n    markStyle.marginTop = `var(--blox-slider-mark-spacing, ${STYLES.Slider.mark.spacing})`;\n  } else {\n    markStyle.bottom = `${positionPercent}%`;\n    markStyle.left = `100%`;\n    markStyle.transform = `translateY(50%)`;\n    markStyle.marginLeft = `var(--blox-slider-mark-spacing, ${STYLES.Slider.mark.spacing})`;\n  }\n\n  return (\n    <div\n      className={`blox-slider-mark ${className}`}\n      data-blox-slider-mark=\"\"\n      data-mark-value={value}\n      data-orientation={orientation}\n      data-disabled={disabled ? \"true\" : \"false\"}\n      style={{\n        ...markStyle,\n        ...props.style,\n      }}\n      {...props}>\n      {/* Mark line indicator */}\n      <div\n        className=\"blox-slider-mark-line\"\n        data-blox-slider-mark-line=\"\"\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"var(--blox-slider-mark-color, #e5e7eb)\",\n          width: orientation === \"horizontal\" ? \"2px\" : \"8px\",\n          height: orientation === \"horizontal\" ? \"8px\" : \"2px\",\n          transform: orientation === \"horizontal\" ? \"translateY(-100%)\" : \"translateX(-100%)\",\n        }}\n      />\n\n      {/* Mark label */}\n      {children && (\n        <div\n          className=\"blox-slider-mark-label\"\n          data-blox-slider-mark-label=\"\"\n          style={{\n            fontSize: `var(--blox-slider-mark-font-size, ${STYLES.Slider.mark.fontSize})`,\n            marginTop: orientation === `horizontal` ? `var(--blox-slider-mark-label-spacing, ${STYLES.Slider.mark.label.spacing})` : 0,\n            marginLeft: orientation === `vertical` ? `var(--blox-slider-mark-label-spacing, ${STYLES.Slider.mark.label.spacing})` : 0,\n          }}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Attach the original interfaces to maintain component structure\n// const SliderRange = SliderRangeComponent;\n\n// Attach subcomponents to Slider\nSlider.Track = SliderTrack;\nSlider.Range = SliderRangeComponent;\nSlider.Thumb = SliderThumb;\nSlider.Mark = SliderMark;\n\nexport default Slider;\n"],"names":["AccordionContext","createContext","activeIndices","toggleItem","isItemActive","AccordionItemContext","isActive","isDisabled","index","useAccordionItem","context","useContext","Error","Accordion","children","allowMultiple","defaultIndex","controlledActiveIndices","onChange","className","props","initialIndices","useMemo","internalActiveIndices","setInternalActiveIndices","useState","isControlled","undefined","useCallback","updatedIndices","includes","filter","i","contextValue","_jsx","Provider","value","React","Children","map","child","isValidElement","cloneElement","Item","providedIndex","useAccordion","console","warn","itemContextValue","Button","onClick","disabled","type","Panel","Checkbox","label","checked","defaultChecked","indeterminate","required","inputClassName","labelClassName","id","labelProps","labelPosition","helperText","errorMessage","hasError","uniqueId","useRef","Math","random","toString","substring","current","inputRef","useEffect","_jsxs","ref","event","target","htmlFor","STYLES","input","bgColor","thumb","track","spacing","thickness","borderRadius","color","range","size","radius","shadow","mark","fontSize","boxShadow","maxHeight","body","padding","close","right","top","header","border","footer","gap","title","fontWeight","overlay","width","small","medium","large","full","droppable","outline","sortable","opacity","backgroundColor","bottom","left","minWidth","maxWidth","height","backdropColor","backdropBlur","contentBgColor","offset","DrawerCloseButton","onClose","Drawer","isOpen","placement","minHeight","closeOnEsc","closeOnOutsideClick","contentClassName","backdropClassName","zIndex","trapFocus","usePortal","showCloseButton","animated","lockScroll","renderCloseButton","closeButton","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","style","drawerRef","firstFocusableRef","drawerId","substr","document","overflow","handleKeyDown","key","addEventListener","removeEventListener","focus","handleTabKey","focusableElements","querySelectorAll","length","firstElement","lastElement","shiftKey","activeElement","preventDefault","drawerContent","e","currentTarget","position","display","backdropFilter","baseStyles","getDrawerStyles","tabIndex","createPortal","Header","Body","Footer","CloseButton","DropdownContext","toggle","open","useDropdown","Dropdown","controlledIsOpen","onOpenChange","onClickOutside","name","internalIsOpen","setInternalIsOpen","internalValue","setInternalValue","dropdownRef","handleClickOutside","contains","newState","selectedValue","onValueChange","newValue","widthStyle","Trigger","finalDisabled","Menu","selected","onSelect","Marquee","direction","speed","behavior","pauseOnHover","pauseOnFocus","repeat","duration","reverse","delay","containerRef","contentRef","isPaused","setIsPaused","marqueeId","actualDirection","getAnimationDirection","styleId","styleEl","getElementById","createElement","head","appendChild","keyframes","innerHTML","removeChild","repeatedChildren","push","marginRight","marginBottom","flexShrink","onMouseEnter","onMouseLeave","onFocus","onBlur","flexDirection","actualDuration","slow","normal","fast","animation","animationPlayState","getAnimationStyle","ModalCloseButton","Modal","closeOnOverlayClick","overlayClassName","ariaLabelledby","ariaDescribedby","isCentered","blockScroll","initialFocusRef","modalRef","previousFocusRef","modalId","handleFocusTrap","originalStyle","window","getComputedStyle","getAnimationClass","modalElement","alignItems","justifyContent","getSizeStyle","borderBottom","margin","background","cursor","borderTop","Content","RadioGroupContext","Radio","radioGroup","isWithinGroup","groupName","groupValue","groupOnChange","groupDisabled","groupRequired","finalRequired","isChecked","TableContext","data","columns","autoGenerateRowKey","TableHeader","TableBody","TableRow","TableHeaderCell","columnId","sorted","sortDirection","onSort","center","table","isSorted","sortColumn","effectiveSortDirection","handleSortClick","newDirection","textAlign","TableCell","TableEmpty","colSpan","effectiveColSpan","Table","getRowKey","getRowClassName","column","headerProps","row","rowIndex","rowKey","rowClassName","cellContent","cell","accessor","cellProps","Container","horizontalScroll","overflowX","Caption","Row","HeaderCell","Cell","Empty","Loading","TabsContext","activeTabId","setActiveTabId","orientation","useTabs","TabPanels","memo","Tabs","activeTab","defaultActiveTab","internalActiveTabId","setInternalActiveTabId","tabId","List","contextOrientation","finalOrientation","Tab","Panels","ToggleGroupContext","Toggle","pressed","defaultPressed","groupContext","isGrouped","internalPressed","setInternalPressed","isPressed","Array","isArray","updateValue","ToggleGroup","defaultValue","allowDeselect","currentValue","itemValue","valueArray","v","Group","Tooltip","content","showDelay","hideDelay","showOnHover","showOnFocus","interactive","tooltipClassName","rest","uncontrolledIsOpen","setUncontrolledIsOpen","triggerRef","tooltipRef","childRef","showTimeoutRef","hideTimeoutRef","setPosition","x","y","currentPlacement","updatePosition","triggerRect","getBoundingClientRect","tooltipRect","spaceTop","spaceRight","innerWidth","spaceBottom","innerHeight","spaceLeft","finalPlacement","split","handleShow","clearTimeout","setTimeout","handleHide","handleTooltipMouseEnter","delayedUpdate","childElement","only","error","_Fragment","childProps","enhancedChild","node","trim","tooltipContent","renderTooltip","SegmentedControlContext","SegmentedControl","controlDisabled","useSegmentedControl","isSelected","DragDropContext","draggingItem","dragPosition","dropTargets","Map","sortableItems","registerDropTarget","unregisterDropTarget","registerSortableItem","unregisterSortableItem","startDrag","endDrag","getDragOverTarget","useDragDrop","Draggable","handle","preview","elementRef","isDragging","handleDragStart","nativeEvent","dragHandleProps","onMouseDown","onTouchStart","renderProps","userSelect","offsetHeight","DraggableRenderPropsContext","DraggableWithContext","BaseComponent","Droppable","accept","onDrop","canDrop","isOver","overTarget","handleDrop","updateDropTarget","rect","isCurrentlyOver","canCurrentlyDrop","SortableItem","item","itemId","updateSortableItem","draggableId","transition","DragDrop","onDragStart","onDragMove","onDragEnd","onDragCancel","setDraggingItem","setDragPosition","dropTargetsRef","sortableItemsRef","dragStartPositionRef","dragTargetRef","draggingRef","lastPositionRef","set","delete","values","initialX","initialY","MouseEvent","clientX","clientY","touches","coordinates","handleMouseMove","handleTouchMove","passive","handleDragEnd","newX","newY","newPosition","delta","over","touch","finalX","finalY","changedTouches","totalDelta","DragHandle","DragOverlay","positionStyles","transform","pointerEvents","transformOrigin","Sortable","items","keyExtractor","onReorder","draggedIndex","setDraggedIndex","findIndex","targetIndex","newItems","draggedItem","splice","containerStyle","Switch","thumbClassName","trackClassName","inputProps","internalChecked","setInternalChecked","handleChange","newChecked","descriptionId","clip","clipPath","whiteSpace","WebkitTapHighlightColor","marginLeft","marginTop","ContextMenuContext","useContextMenu","ContextMenu","onOpen","enableKeyboard","setIsOpen","contextDisabled","onContextMenu","closeOnEscape","menuRef","styleRef","useLayoutEffect","requestAnimationFrame","menuRect","viewportWidth","viewportHeight","max","handleOutsideClick","closeOnSelect","icon","shortcut","Separator","SliderContext","useSlider","Slider","min","step","inverted","showMarks","marks","rootRef","parseValues","sort","a","b","internalValues","setInternalValues","currentValues","setIsDragging","activeThumbIndex","thumbPositions","clampedValue","percent","ranges","result","start","end","percentToValue","round","valueToPercent","getClosestThumb","positionValue","closestDistance","abs","closestIndex","distance","updateThumb","newValues","handleTrackPointerDown","trackRect","thumbIndex","setPointerCapture","pointerId","handleTrackPointerMove","handleTrackPointerUp","releasePointerCapture","setDragging","directionProps","onKeyDown","focusedThumbIndex","_","querySelector","increment","SliderTrack","onPointerDown","onPointerMove","onPointerUp","SliderRangeComponent","SliderThumb","SliderMark","Object","entries","Number","parent","parentElement","customEvent","PointerEvent","bubbles","cancelable","dispatchEvent","stopPropagation","startPercent","endPercent","rangeStyle","leftPercent","widthPercent","bottomPercent","heightPercent","thumbPosition","valueNow","valueText","thumbStyle","positionPercent","markStyle","Track","Range","Thumb","Mark"],"mappings":"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"}